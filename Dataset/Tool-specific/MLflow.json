[
    {
        "Question_title":"MLflow 1.13.0 released!",
        "Question_created_time":"2020-12-25T02:53:40",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/AgVS-EaVpGw",
        "Question_comment_count":0,
        "Question_view_count":9,
        "Question_body":"Hi all, we are happy to announce the availability of MLflow 1.13.0!\n\nNote: The MLflow R package for 1.13.0 is not yet available on CRAN because CRAN's submission system will be offline until January 4.\n\nIn addition to bug and documentation fixes, MLflow 1.13.0 includes the following features and improvements:\n\nFeatures:New fluent APIs for logging in-memory objects as artifacts:\nAdd\u00a0mlflow.log_text\u00a0which logs text as an artifact (#3678,\u00a0@harupy)\nAdd\u00a0mlflow.log_dict\u00a0which logs a dictionary as an artifact (#3685,\u00a0@harupy)\nAdd\u00a0mlflow.log_figure\u00a0which logs a figure object as an artifact (#3707,\u00a0@harupy)\nAdd\u00a0mlflow.log_image\u00a0which logs an image object as an artifact (#3728,\u00a0@harupy)\nUI updates \/ fixes:\nAdd model version link in compact experiment table view\nAdd logged\/registered model links in experiment runs page view\nEnhance artifact viewer for MLflow models\nModel registry UI settings are now persisted across browser sessions\nAdd model version\u00a0description\u00a0field to model version table\n\n(all merged in\u00a0#3867,\u00a0@smurching)\n\nAutologging enhancements:\nImprove robustness of autologging integrations to exceptions (#3682,\u00a0#3815, dbczumar;\u00a0#3860,\u00a0@mohamad-arabi;\u00a0#3854,\u00a0#3855,\u00a0#3861,\u00a0@harupy)\nAdd\u00a0disable\u00a0configuration option for autologging (#3682,\u00a0#3815, dbczumar;\u00a0#3838,\u00a0@mohamad-arabi;\u00a0#3854,\u00a0#3855,\u00a0#3861,\u00a0@harupy)\nAdd\u00a0exclusive\u00a0configuration option for autologging (#3851,\u00a0@apurva-koti;\u00a0#3869,\u00a0@dbczumar)\nAdd\u00a0log_models\u00a0configuration option for autologging (#3663,\u00a0@mohamad-arabi)\nSet tags on autologged runs for easy identification (and add tags to start_run) (#3847,\u00a0@dbczumar)\nMore features and improvements:\nAllow Keras models to be saved with\u00a0SavedModel\u00a0format (#3552,\u00a0@skylarbpayne)\nAdd support for\u00a0statsmodels\u00a0flavor (#3304,\u00a0@olbapjose)\nAdd support for nested-run in mlflow R client (#3765,\u00a0@yitao-li)\nDeploying a model using\u00a0mlflow.azureml.deploy\u00a0now integrates better with the AzureML tracking\/registry. (#3419,\u00a0@trangevi)\nUpdate schema enforcement to handle integers with missing values (#3798,\u00a0@tomasatdatabricks)\n\nFor a comprehensive list of changes, see the\u00a0release change log, and check out the latest documentation on\u00a0mlflow.org."
    },
    {
        "Question_title":"mlflow gui - displaying csv artifact.",
        "Question_created_time":"2018-12-11T11:11:31",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/OgApYabrvPE",
        "Question_comment_count":2,
        "Question_view_count":23,
        "Question_body":"Hi all,\n First of all great job with mlflow, it is an amazing tool.\nI have a question\/request though, is there a way to display a csv file (i.e. confusion matrix data) saved in mlflow artifacts repo as a table or graph? \nIf not,  it would be nice if we could add some plugin into ML Flow to display CSV data in a table view.  \n\nCheers"
    },
    {
        "Question_title":"Depploy Mlflow with python wheel and egg file on dat bricks",
        "Question_created_time":"2022-03-31T01:41:32",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/bKm7IdEuARg",
        "Question_comment_count":0,
        "Question_view_count":8,
        "Question_body":"Hi team,\nI have to deploy the model built on data bricks with mlflow\u00a0\nas python egg and wheel file on data bricks. please let me know the process and share me the resources.\n\n\n\nThanks in advance.\n\n\nRegards,\nNaveen"
    },
    {
        "Question_title":"MLflow 1.12.1 released",
        "Question_created_time":"2020-11-19T02:53:52",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/t2t-BFV_uLU",
        "Question_comment_count":0,
        "Question_view_count":13,
        "Question_body":"Hi all,\n\nMLflow 1.12.1\u00a0has been released! It's a patch release containing bug fixes and small changes:\n\nFix\u00a0run_link\u00a0for cross-workspace model versions (#3681,\u00a0@sueann)\nRemove hard dependency on matplotlib for sklearn autologging (#3703,\u00a0@dbczumar)\nDo not disable existing loggers when initializing alembic (#3653,\u00a0@arthury1n)"
    },
    {
        "Question_title":"MLflow remote tracking",
        "Question_created_time":"2020-01-22T00:00:56",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/9wmaxy3no30",
        "Question_comment_count":4,
        "Question_view_count":37,
        "Question_body":"Hi folks,\n\n\nI am using mlflow 'version 1.1.0' in a model written in python for tracking purpose. I have created a project for the same with MLproject file inside it. I want to store the tracking details in a remote server and hence I am making use of set_tracking_uri() function. Below is the sample code;\n\n\nset_tracking_uri('172.16.0.80:5000')\n\ntry:\n\u00a0 \u00a0 \u00a0 \u00a0 create_experiment(\"SampleExp\")\nexcept:\n\u00a0 \u00a0 \u00a0 \u00a0 set_experiment(\"SampleExp\")\nset_tag(\"Script\", \"SampleExp1\")\n\n\nThe mlflow server is running in the remote server. When I execute the model with 'mlflow run' command, only the experiment name gets created in the remote server path but mlruns directory and other tracking data gets stored in the path from where mlflow run command is getting executed locally. Kindly help me in resolving this issue."
    },
    {
        "Question_title":"MLFlow integration with Kubeflow",
        "Question_created_time":"2019-09-06T20:21:57",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/b8WLoMLFtmo",
        "Question_comment_count":2,
        "Question_view_count":31,
        "Question_body":"Hello,\nCan anyone point me to docs that talks about integration of how MLFlow can be integrated to use Kubeflow. As per my understanding by looking at the code of MLFlow, code has to be written to integrate it with Kubeflow. By default support does not exist.\n\n\nPlease advise.\n\n\n-Sid"
    },
    {
        "Question_title":"MLflow Release 0.5.2",
        "Question_created_time":"2018-08-27T20:56:33",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/k9oG1jeZxQM",
        "Question_comment_count":0,
        "Question_view_count":31,
        "Question_body":"MLflow Release 0.5.2 is ready, released 2018-08-27. The release is available on\u00a0PyPI\u00a0and docs are\u00a0updated. Here are the release notes (also available\u00a0on GitHub):\n\n\nBreaking changes: None\n\n\n\nChange log:\n\n\n0.5.2 (2018-08-24)\n------------------\n\n\nMLflow 0.5.2 is a patch release on top of 0.5.1 containing only bug fixes and no breaking changes or features.\n\n\nBug fixes:\n\n\n- Fix a bug with ECR client creation that caused ``mlflow.sagemaker.deploy()`` to fail when searching for a deployment Docker image (#366, @dbczumar)"
    },
    {
        "Question_title":"Anyone trying backend-store-uri ?",
        "Question_created_time":"2019-03-15T10:15:49",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/T6lt0HQxGr4",
        "Question_comment_count":6,
        "Question_view_count":43,
        "Question_body":"I am trying to use backend-store-uri for a mysql db.\nI pulled from master today and built wheel\n\n\n\u00a0 \u00a0 \u00a0 \u00a0python3.6 setup.py bdist_wheel\n\n\nI am using the wheel in this Dockerfile below.\n\n\nGetting 403 error when I go to localhost:5000\n\n\nI checked my db connections using a local Sqlachemy script and it works fine.\n\n\nAnyone trying backend-store-uri ?\n------------------------\n\n\nFROM centos:6\n\n\nENV LC_ALL=en_US.utf-8\nENV LANG=en_US.utf-8\n\n\nRUN yum update -y\nRUN yum install yum-utils -y\nRUN yum install -y https:\/\/centos6.iuscommunity.org\/ius-release.rpm\nRUN yum install -y python36u python36u-libs python36u-devel python36u-pip\n\n\nRUN yum install -y which gcc\n\n\nRUN ln -fs \/usr\/bin\/pip3.6 \/bin\/pip\nRUN ln -fs \/usr\/bin\/python3.6 \/usr\/bin\/python\n\n\nRUN python --version\nRUN pip --version\n\n\n\n\nENV TERM linux\nENV BUCKET #####\n\n\n#ENVs for mysql Aurora\nENV USERNAME #######\nENV PASSWORD #######\nENV HOST #######\nENV DATABASE #######\n\n\nCOPY mlflow-0.8.3.dev0-py3-none-any.whl .\/\nRUN pip install mlflow-0.8.3.dev0-py3-none-any.whl\n\n\nRUN mkdir -p \/mlflow\/\n\n\nEXPOSE 5000\n\n\nCMD mlflow server \\\n\u00a0 \u00a0 --backend-store-uri mysql:\/\/${USERNAME}:${PASSWORD}@${HOST}:${PORT}\/${DATABASE} \\\n\u00a0 \u00a0 --default-artifact-root s3:\/\/${BUCKET}\/mlflow-artifacts \\\n\u00a0 \u00a0 --host 0.0.0.0 --gunicorn-opts \"--access-logfile -\""
    },
    {
        "Question_title":"Unable to log_artifact using HDFS",
        "Question_created_time":"2019-06-13T03:29:46",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/3WYutmO54ao",
        "Question_comment_count":1,
        "Question_view_count":19,
        "Question_body":"Hi,\n\nI am trying to use an HDFS for the artifact repository.\nI used the following command to run the mlflow server :\nmlflow server --host 0.0.0.0 --default-artifact-root hdfs:\/\/--.--.--.---:8020\/mlruns\n\nIn my python code :\n\nmlflow.create_experiment(\"NewTest21\",\"hdfs:\/\/--.--.--.---:8020\/mlruns\")\nmlflow.set_experiment(\"NewTest21\")\nwith mlflow.start_run():\n\tprint(mlflow.get_artifact_uri())\n\tlr = ElasticNet(alpha=alpha, l1_ratio=l1_ratio, random_state=42)\n\tlr.fit(train_x, train_y)\n\tpredicted_qualities = lr.predict(test_x)\n\t\n\t(rmse, mae, r2) = eval_metrics(test_y, predicted_qualities)\n\tmlflow.log_param(\"alpha\", alpha)\n\tmlflow.log_param(\"l1_ratio\", l1_ratio)\n\tmlflow.log_metric(\"rmse\", rmse)\n\tmlflow.log_metric(\"r2\", r2)\n\tmlflow.log_metric(\"mae\", mae)\n\u00a0 \u00a0 \u00a0 \u00a0 with open(\"output.txt\", \"w\") as f:\n\u00a0 \u00a0 \t\tf.write(\"Hello world! Its a new day\")\n\u00a0 \u00a0 \t\tmlflow.log_artifact(\"output.txt\")\n\tmlflow.sklearn.log_model(lr,\"hdfs:\/\/--.--.--.---::8020\")\n\nHowever I am getting the following error :\n\nTraceback (most recent call last):\n\u00a0 File \"C:\\Program Files\\KNIME\\plugins\\org.knime.python2_3.7.1.v201901281201\\py\\PythonKernelBase.py\", line 278, in execute\n\u00a0 \u00a0 exec(source_code, self._exec_env, self._exec_env)\n\u00a0 File \"<string>\", line 59, in <module>\n\u00a0 File \"C:\\Users\\gs-2024\\AppData\\Local\\Programs\\Python\\Python35\\lib\\site-packages\\mlflow\\tracking\\fluent.py\", line 244, in log_artifact\n\u00a0 \u00a0 MlflowClient().log_artifact(run_id, local_path, artifact_path)\n\u00a0 File \"C:\\Users\\gs-2024\\AppData\\Local\\Programs\\Python\\Python35\\lib\\site-packages\\mlflow\\tracking\\client.py\", line 210, in log_artifact\n\u00a0 \u00a0 artifact_repo.log_artifact(local_path, artifact_path)\n\u00a0 File \"C:\\Users\\gs-2024\\AppData\\Local\\Programs\\Python\\Python35\\lib\\site-packages\\mlflow\\store\\hdfs_artifact_repo.py\", line 34, in log_artifact\n\u00a0 \u00a0 with hdfs_system(host=self.host, port=self.port) as hdfs:\n\u00a0 File \"C:\\Users\\gs-2024\\AppData\\Local\\Programs\\Python\\Python35\\lib\\contextlib.py\", line 59, in __enter__\n\u00a0 \u00a0 return next(self.gen)\n\u00a0 File \"C:\\Users\\gs-2024\\AppData\\Local\\Programs\\Python\\Python35\\lib\\site-packages\\mlflow\\store\\hdfs_artifact_repo.py\", line 168, in hdfs_system\n\u00a0 \u00a0 extra_conf=extra_conf)\n\u00a0 File \"C:\\Users\\gs-2024\\AppData\\Local\\Programs\\Python\\Python35\\lib\\site-packages\\pyarrow\\hdfs.py\", line 211, in connect\n\u00a0 \u00a0 extra_conf=extra_conf)\n\u00a0 File \"C:\\Users\\gs-2024\\AppData\\Local\\Programs\\Python\\Python35\\lib\\site-packages\\pyarrow\\hdfs.py\", line 36, in __init__\n\u00a0 \u00a0 _maybe_set_hadoop_classpath()\n\u00a0 File \"C:\\Users\\gs-2024\\AppData\\Local\\Programs\\Python\\Python35\\lib\\site-packages\\pyarrow\\hdfs.py\", line 134, in _maybe_set_hadoop_classpath\n\u00a0 \u00a0 classpath = _hadoop_classpath_glob(hadoop_bin)\n\u00a0 File \"C:\\Users\\gs-2024\\AppData\\Local\\Programs\\Python\\Python35\\lib\\site-packages\\pyarrow\\hdfs.py\", line 161, in _hadoop_classpath_glob\n\u00a0 \u00a0 return subprocess.check_output(hadoop_classpath_args)\n\u00a0 File \"C:\\Users\\gs-2024\\AppData\\Local\\Programs\\Python\\Python35\\lib\\subprocess.py\", line 316, in check_output\n\u00a0 \u00a0 **kwargs).stdout\n\u00a0 File \"C:\\Users\\gs-2024\\AppData\\Local\\Programs\\Python\\Python35\\lib\\subprocess.py\", line 383, in run\n\u00a0 \u00a0 with Popen(*popenargs, **kwargs) as process:\n\u00a0 File \"C:\\Users\\gs-2024\\AppData\\Local\\Programs\\Python\\Python35\\lib\\subprocess.py\", line 676, in __init__\n\u00a0 \u00a0 restore_signals, start_new_session)\n\u00a0 File \"C:\\Users\\gs-2024\\AppData\\Local\\Programs\\Python\\Python35\\lib\\subprocess.py\", line 957, in _execute_child\n\u00a0 \u00a0 startupinfo)\nFileNotFoundError: [WinError 2] The system cannot find the file specified\n\n\nCan anyone help me with this?"
    },
    {
        "Question_title":"MLlofw artifacts to differnt environments",
        "Question_created_time":"2022-03-23T07:29:36",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/-AQJqwq1l1c",
        "Question_comment_count":3,
        "Question_view_count":14,
        "Question_body":"Hi team,,\n\n\u00a0 I have three subscription how does mlflow communicate between dev ,stagging and prod envs. please let me know what the process to move mlflow artifacts to different environments with three separate azure data bricks subscriptions\n\n\u00a0\n\n\u00a0\n\nRegards,\n\nNaveen"
    },
    {
        "Question_title":"Model serve",
        "Question_created_time":"2019-10-03T02:47:05",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/ATDsXS83w9o",
        "Question_comment_count":0,
        "Question_view_count":18,
        "Question_body":"Hi ,\u00a0\nI am trying to use model serve, REST API ser er is created and now I am trying to pass CSV file as POST input to the \/invocations path.\u00a0\nCan someone please guide on how to pass the csv file as POST input and save the output to a file.\u00a0\n\n\nRegards\nBinay"
    },
    {
        "Question_title":"Using SQL to log params",
        "Question_created_time":"2020-01-16T16:01:21",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/7dnPPx5tXSk",
        "Question_comment_count":3,
        "Question_view_count":17,
        "Question_body":"Hi,\n\n\nThis is probably a stupid question, but as far as I have seen mlflow does not allow to log params in a SQL databse. Am I right?\nIf so, what is the main reason for that? Is that due to the fact that through the project the number of parameters might increase largely?\n\n\nAlso, I'm currently running computations on a compute server that I access through ssh from my laptop. The loggings happen on that machine. I then download to my laptop the mlruns folder and I have to run a script I wrote to update the yaml files so that they point to the right artifact location on my laptop. That's not much of a hassle but is there a better way to do that? I cannot run the http server through mlflow serve as I am not allowed to do that on the compute server I use.\n\n\nThanks."
    },
    {
        "Question_title":"About Website Section \"Organizations using MLflow\" - Insider",
        "Question_created_time":"2020-09-29T12:31:59",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/ZJkqm7nF62Y",
        "Question_comment_count":1,
        "Question_view_count":19,
        "Question_body":"Hello all,\n\n\nAt Insider we have developed our internal Machine Learning Platform from scratch and we have integrated MLflow to our pipeline for ml framework independent serving purposes and running\u00a0it on production for a couple of months. It would be a pleasure for us to support MLflow and appear in \"Organizations using MLflow\" section on the website. Our company logo is attached to this email.\n\n\nInsider is a SaaS company providing Growth Management Platform (GMP) that delivers a broad feature set across the sales funnel from Acquisition to Activation, Retention, and Revenue, leveraging real-time predictive segmentation powered by Artificial Intelligence and machine learning capabilities.\u00a0Built on a unified data layer, GMP is easy to implement and simple to use, with no need for complicated integrations. We are working with 500+ companies including global brands such as Singapore Airlines, CNN, Samsung, Huawei, and Marks & Spencer. Insider ranked as #1 Leader on G2 Grid for Mobile Marketing and positioned in Gartner\u2019s Magic Quadrant for Multichannel Marketing Hubs 2020. You can read more on our website:\u00a0https:\/\/useinsider.com\n\n\nBest,\n\n\nDeniz"
    },
    {
        "Question_title":"Organizations using and contributing to mlflow",
        "Question_created_time":"2023-03-07T04:18:21",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/927DKKwTC_Y",
        "Question_comment_count":0,
        "Question_view_count":13,
        "Question_body":"Hello members,\nWith this msg we would like to express our interest to be added in the list of organization using and contributing to mlflow.\n\n\nWhich is the process?\n\n\nFYI these are our companies:\nhttp:\/\/amdtelecom.net\/\n\nhttps:\/\/www.routee.net\/\n\nwaymore.io\/\n\n\n\nThank you.\n\n\nKind regards"
    },
    {
        "Question_title":"mlflow for beginners",
        "Question_created_time":"2022-11-07T11:44:12",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/px-W1aq-dE8",
        "Question_comment_count":0,
        "Question_view_count":21,
        "Question_body":"Hello everyone, I would like to use MLflow but I don't know how to register on the platform. Also, I would like to know if there are any step-by-step instructions on how to use this tool (for example, Run an MLflow project).\n\n\nthanks in advance,\n\n\n--\n\nOlga Ximena Giraldo Pasmin\nOrcid ID: orcid.org\/0000-0003-2978-8922\nTwiter: @olgaxgiraldo\nSkype:olgaximenagiraldo\nWebsite: http:\/\/oxgiraldo.wordpress.com"
    },
    {
        "Question_title":"MLflow 2.3.2 released!",
        "Question_created_time":"2023-05-12T21:11:31",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/IDvFstyk4s8",
        "Question_comment_count":0,
        "Question_view_count":13,
        "Question_body":"MLflow 2.3.2 is a patch release containing the following features, bug fixes and changes:\n\nFeatures:\n\n[Models] Add GPU support for transformers models pyfunc inference and serving (#8375, @ankit-db)\n[Models] Disable autologging functionality for non-relevant models when training a transformers model (#8405, @BenWilson2)\n[Models] Add support for preserving and overriding torch_dtype values in transformers pipelines (#8421, @BenWilson2)\n[Models] Add support for Feature Extraction pipelines in the transformers flavor (#8423, @BenWilson2)\n[Tracking] Add basic HTTP auth support for users, registered models, and experiments permissions (#8286, @gabrielfu)\n\nBug Fixes:\n\n[Models] Fix inferred schema issue with Text2TextGeneration pipelines in the transformers flavor (#8391, @BenWilson2)\n[Models] Change MLflow dependency pinning in logged models from a range value to an exact major and minor version (#8422, @harupy)\n\nDocumentation updates:\n\n[Examples] Add signature logging to all examples and documentation (#8410, #8401, #8400, #8387 @jerrylian-db)\n[Examples] Add sentence-transformers examples to the transformers examples suite (#8425, @BenWilson2)\n[Docs] Add a new MLflow Quickstart documentation page (#8171, @lobrien)\n[Docs] Add a new introduction to MLflow page (#8365, @lobrien)\n[Docs] Add a community model pluging example and documentation for trubrics (#8371, @jeffkayne)\n[Docs] Add gluon pyfunc example to Model flavor documentation (#8403, @ericvincent18)\n[Docs] Add statsmodels pyfunc example to Models flavor documentation (#8394, @ericvincent18)\n\n\n\nFor a comprehensive list of changes, see the release change log and check out the latest documentation on mlflow.org."
    },
    {
        "Question_title":"System Tags",
        "Question_created_time":"2020-11-10T04:15:34",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/kecHfSKU8eY",
        "Question_comment_count":5,
        "Question_view_count":14,
        "Question_body":"Hey there,\n\n\nThe documentation includes reference to a list of system tags that are said to be automatically set.\nhttps:\/\/www.mlflow.org\/docs\/latest\/tracking.html#system-tags\n\n\n\nHowever, in my flows I see no trace of these tags in the UI as well as in the programmatic interface. Is there a flag I need to set to have this automatic tagging? Or are these values available for me to tag my flows manually?\n\n\nThanks,\nAvi"
    },
    {
        "Question_title":"Model Deployment Service REST API on Docker",
        "Question_created_time":"2019-12-14T14:50:24",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/8KPjTyGFzvo",
        "Question_comment_count":0,
        "Question_view_count":19,
        "Question_body":"Hello,\n\n\n\nIs it possible to customize the model serving REST API on the Docker image created from the build-docker command?\n\n\nhttps:\/\/mlflow.org\/docs\/latest\/cli.html#mlflow-models-build-docker\n\n\n\nWe would like cus to secure the REST API with something like oAuth but didn't know how to proceed. Or maybe there is a way for us to supply our own Docker container and webserver. Any guidance would be greatly appreciated.\n\n\nThanks,\nJonathan"
    },
    {
        "Question_title":"Mlflow licensed version",
        "Question_created_time":"2021-05-02T04:09:42",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/dhbnqBldyW8",
        "Question_comment_count":0,
        "Question_view_count":5,
        "Question_body":"Like Poojasajja, I am also interested in knowing if there is a licensed version of MLFlow, does this exist?\n\n\nRegards,\nRonny"
    },
    {
        "Question_title":"Cannot join the mlflow_user slack channel",
        "Question_created_time":"2019-10-11T07:35:17",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/MP1DcwqnXAI",
        "Question_comment_count":15,
        "Question_view_count":105,
        "Question_body":"Hello,\n\n\nI'm trying to join the mlflow-users slack channel but I'm facing 2 issues :\n\n\n1\/ The link on the MLflow.org main page bring me to a slack page saying that the invitation link is no longer active :\u00a0public Slack server\n2\/ If I try to connect to https:\/\/mlflow-users.slack.com\nI need a @databricks.com email to be able to create an account.\n\n\nRegards"
    },
    {
        "Question_title":"MLflow 1.20.1 released!",
        "Question_created_time":"2021-08-26T04:06:12",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/OxR3LPYxfgU",
        "Question_comment_count":0,
        "Question_view_count":8,
        "Question_body":"We are happy to announce the availability of\u00a0MLflow 1.20.1!\n\nNote: The MLflow R package for 1.20.1 is not yet available but will be in a week because CRAN's submission system will be offline until September 1st.\n\nMLflow 1.20.1 is a patch release for the MLflow Python and R packages containing the following bug fixes:\n\n-\u00a0Avoid calling\u00a0`importlib_metadata.packages_distributions`\u00a0upon\u00a0`mlflow.utils.requirements_utils`\u00a0import (#4741, @dbczumar)\n-\u00a0Avoid depending on\u00a0`importlib_metadata==4.7.0`\u00a0(#4740, @dbczumar)\n\nFor a comprehensive list of changes, see the\u00a0release change log, and check out the latest documentation on\u00a0mlflow.org."
    },
    {
        "Question_title":"MLFlow tracking using file",
        "Question_created_time":"2022-12-05T12:00:08",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/BkQcFNXbdZY",
        "Question_comment_count":0,
        "Question_view_count":20,
        "Question_body":"Hi all,\nI was exploring using an alternate location other than mlruns for local file based tracking. using the default mlruns works as expected. However, if i specify a location using file:\/\/ syntax, the leading or the root path gets stripped out. For example, if i want to save the runs in\n\/workspace\/user1\/mlruns\nand pass name as\u00a0\ntracking_uri = \"file:\/\/\" + \"\/workspace\/user1\/\"\u00a0\nthe code fails because somewhere in the runtime, it strips off \"\/workspace\/\" and looks only for \"\/user1\". Since there \"\/user1\" does not exist, programme crashes. i have tried debugging to see where the stripping happens but unfortunately it is beyond my capability.\nFor now, I do not specify any location and the default mlruns works well as i mentioned.\nmlflow version is 1.28.0.\nany suggestion welcome!\nthanks"
    },
    {
        "Question_title":"Organizations using MLFlow",
        "Question_created_time":"2020-11-11T03:53:30",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/vZStty0zqYo",
        "Question_comment_count":0,
        "Question_view_count":34,
        "Question_body":"Hi\n\n\u00a0\n\nWe at Genpact (https:\/\/www.genpact.com) are using MLFlow extensively in an in-house Machine Learning platform and would like to contribute to it. Please add our organization to the list on your website.\n\n\u00a0\n\nRegards\n\nDhanesh\n\n\u00a0\n\n--\u00a0\n\n\u00a0\n\nDhanesh Padmanabhan\n\nVP, Cora Analytics & ML Products\n\nGenpact Digital\n\n\u00a0\n\n\u00a0\n\n\n______________________________________________________________________\nThis e-mail (and any attachments), is confidential and may be privileged. It may be read, copied and used only by intended recipients. Unauthorized access to this e-mail (or attachments) and disclosure or copying of its contents or any action taken in reliance on it is unlawful. Unintended recipients must notify the sender immediately by e-mail\/phone & delete it from their system without making any copies or disclosing it to a third person.\n______________________________________________________________________"
    },
    {
        "Question_title":"Scheduling an MLflow meetup in the next few weeks",
        "Question_created_time":"2018-06-19T16:33:06",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/dlTQmJNTnqI",
        "Question_comment_count":2,
        "Question_view_count":83,
        "Question_body":"Hi all,\n\nWe're planning to schedule an in-person MLflow meetup at Databricks in\nthe next few weeks to give people an overview of the project and get\ninput on the roadmap. If you'd like to attend, can you tell us your\ndate preferences at https:\/\/goo.gl\/forms\/8ZEnF9DXEVBWJlKU2? We'll also\nrecord the content presented for people not in the Bay Area.\n\nThis initial meetup will cover:\n\n* Introductory concepts and MLflow tutorial\n* Deploying MLflow\n* Project roadmap\n* How to contribute to MLflow\n\nAll the best,\n\nMatei and the MLflow team"
    },
    {
        "Question_title":"Trying to add the log_param() function",
        "Question_created_time":"2018-10-18T20:52:25",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/CxuBUiu1gys",
        "Question_comment_count":1,
        "Question_view_count":11,
        "Question_body":"with mlflow.start_run(nested =True):\n### instantiate the RNN model object\u00a0\n\u00a0 \u00a0 regr = Sequential()\u00a0\n\n\n### add the input and LSTM layers\u00a0\nregr.add(LSTM(units =4, activation ='sigmoid', input_shape =(None, 1)))\u00a0 \u00a0\u00a0\n\n\n### add the output layer\nregr.add(Dense(units =1))\n\n\n### compile the RNN\u00a0\noptimizer = 'adam'\nloss = 'mean_squared_error'\nmetrics = ['accuracy']\u00a0\nregr.compile(optimizer, loss , metrics)\u00a0\n\n\n### fit the model on the training set\u00a0\nbatch_size = 5\nepochs = 1\nregr.fit(X_train, y_train, batch_size, epochs)\u00a0\n\n\nlog_param(\"loss\", loss)\u00a0\nlog_param(\"epochs\", epochs)\nlog_param(\"optimizer\", optimizer)\nlog_param(\"batch_size\", batch_size)\nlog_param(\"metrics\", metrics)"
    },
    {
        "Question_title":"Model Serving support on-prem implementation and dockers",
        "Question_created_time":"2021-04-17T22:37:20",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/rA7itpkqVug",
        "Question_comment_count":3,
        "Question_view_count":19,
        "Question_body":"Hello All,\n\n\nCould anyone suggest me how to use a model serving in an on-prem setup (outside a databricks environment)?\n\n\nAlso like to understand how to deploy in Kubernetes and Containers \/Pod? My requirement is follows.we have built some models and are selling to multiple customers where each one ask to use a certain setup i.e. their own container \/ pod setup or private cloud etc...\n\n\nThanking anticipation.\n\n\nRegards,\nNagaraj"
    },
    {
        "Question_title":"Autologging metrics",
        "Question_created_time":"2021-08-22T23:54:30",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/dwowhoJAG-M",
        "Question_comment_count":0,
        "Question_view_count":12,
        "Question_body":"Hello everyone,\nI have a question about autologging. I use it and I want to record another metrics.\nCan I change the recorded metrics for autologging?\n\nThanks,\nIrina"
    },
    {
        "Question_title":"MLflow 1.10 released!",
        "Question_created_time":"2020-07-22T15:18:14",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/XiJyetdLrdg",
        "Question_comment_count":0,
        "Question_view_count":22,
        "Question_body":"Hi all,\n\nWe are happy to announce the availability of\u00a0MLflow 1.10.0!\n\nIn addition to bug and documentation fixes, MLflow 1.10.0 includes the following features and improvements:\n\nMlflowClient.transition_model_version_stage\u00a0now supports an\narchive_existing_versions\u00a0argument for archiving existing staging or production model\nversions when transitioning a new model version to staging or production (#3095,\u00a0@harupy)\nAdded\u00a0set_registry_uri,\u00a0get_registry_uri\u00a0APIs. Setting the model registry URI causes\nfluent APIs like\u00a0mlflow.register_model\u00a0to communicate with the model registry at the specified\nURI (#3072,\u00a0@sueann)\nAdded paginated\u00a0MlflowClient.search_registered_models\u00a0API (#2939,\u00a0#3023,\u00a0#3027\u00a0@ankitmathur-db;\u00a0#2966,\u00a0@mparkhe)\nAdded syntax highlighting when viewing text files (YAML etc) in the MLflow runs UI (#3041,\u00a0@harupy)\n\nFor a comprehensive list of changes, see the\u00a0release change log.\u00a0The latest documentation will be available soon on mlflow.org\n\nThanks!\nSid"
    },
    {
        "Question_title":"Organizations using MLflow - Cabify",
        "Question_created_time":"2022-06-23T09:45:19",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/Ji1EvN2DRGk",
        "Question_comment_count":0,
        "Question_view_count":30,
        "Question_body":"Hey there,\n\nAt Cabify, we use MLflow since 2019 as part of our in-house ML platform named Lykeion. It has brought a lot of good things.\n\nWe would love to appear in the website as a company using MLflow. Please find attached our logo. \ud83d\ude00\n\nThanks,"
    },
    {
        "Question_title":"Can't run MLflow web-based user interface",
        "Question_created_time":"2018-06-27T09:47:29",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/BoUzYBMGml4",
        "Question_comment_count":1,
        "Question_view_count":34,
        "Question_body":"Hello,\n\n\nI have problem running MLflow web-based user interface. I gave the details in the following StackOverflow question:\n\n\n\u00a0\u00a0 https:\/\/stackoverflow.com\/questions\/51064366\/cant-run-mlflow-web-based-user-interface\n\n\nAny ideas?\n\n\n--\nEmre"
    },
    {
        "Question_title":"Issue 3962",
        "Question_created_time":"2021-01-20T14:59:13",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/yY-qH8rC_0c",
        "Question_comment_count":1,
        "Question_view_count":8,
        "Question_body":"Hi,\n\n\nI posted Issue 3962 12 days ago. When should I expect a response from the team?\n\n\nThank you,\nJuan"
    },
    {
        "Question_title":"MLflow Security Vulnerability",
        "Question_created_time":"2023-03-24T13:21:28",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/44k1pceRrB0",
        "Question_comment_count":0,
        "Question_view_count":14,
        "Question_body":"Hi MLflow users,\n\n\n\n\nI am writing to inform you of two security vulnerabilities in the MLflow Open Source Project code base that were recently patched: https:\/\/github.com\/mlflow\/mlflow\/security\/advisories\/GHSA-xg73-94fp-g449 and https:\/\/github.com\/mlflow\/mlflow\/security\/advisories\/GHSA-wp72-7hj9-5265.\n\n\n\n\nImpact\n\n\n\n\nUsers of the MLflow Open Source Project who are hosting the MLflow Model Registry using the mlflow server or mlflow ui commands using an MLflow version older than MLflow 2.2.1 may be vulnerable to a remote file access exploit if they are not limiting who can query their server (for example, by using a cloud VPC, an IP allowlist for inbound requests, or authentication \/ authorization middleware).\n\n\n\n\nThis issue only affects users and integrations that run the mlflow server and mlflow ui commands. Integrations that do not make use of mlflow server or mlflow ui are unaffected; for example, the Databricks Managed MLflow product and MLflow on Azure Machine Learning do not make use of these commands and are not impacted by these vulnerabilities in any way.\n\n\n\n\nThe vulnerability addressed in https:\/\/github.com\/mlflow\/mlflow\/security\/advisories\/GHSA-xg73-94fp-g449 enables an actor to download arbitrary files unrelated to MLflow from the host server, including any files stored in remote locations to which the host server has access. The vulnerability addressed in \u00a0https:\/\/github.com\/mlflow\/mlflow\/security\/advisories\/GHSA-wp72-7hj9-5265 enables an actor to check for the existence of any such files.\n\n\n\n\nPatches\n\n\n\n\nThis vulnerability has been patched in MLflow 2.2.1, which was released to PyPI on March 2nd, 2023. If you are using mlflow server or mlflow ui with the MLflow Model Registry, we recommend upgrading to MLflow 2.2.1 as soon as possible.\n\n\n\n\nWorkarounds and recommendations\n\n\n\n\nIf you are using the MLflow open source mlflow server or mlflow ui commands, we strongly recommend limiting who can access your MLflow Model Registry and MLflow Tracking servers using a cloud VPC, an IP allowlist for inbound requests, authentication \/ authorization middleware, or another access restriction mechanism of your choosing.\n\n\n\n\nIf you are using the MLflow open source mlflow server or mlflow ui commands, we also strongly recommend limiting the remote files to which your MLflow Model Registry and MLflow Tracking servers have access. For example, if your MLflow Model Registry or MLflow Tracking server uses cloud-hosted blob storage for MLflow artifacts, make sure to restrict the scope of your server's cloud credentials such that it can only access files and directories related to MLflow.\n\nReferences\n\n\n\n\nMore information about the vulnerabilities will be available shortly at https:\/\/nvd.nist.gov\/vuln\/detail\/CVE-2023-1177 and https:\/\/nvd.nist.gov\/vuln\/detail\/CVE-2023-1176.\n\n\n\n\nIf you have any questions about the patched vulnerabilities, please reach out to the MLflow Open Source Project maintainers in the mlflow-users mail group, the MLflow open source Slack channel, or the Issues section of the MLflow GitHub repository.\n\n\n\n--\n\nCarly Akerly\ncak...@contractor.linuxfoundation.org"
    },
    {
        "Question_title":"MLFlow Layout\/Language\/Term Question",
        "Question_created_time":"2023-06-07T11:51:08",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/cbfbs2dBvYw",
        "Question_comment_count":2,
        "Question_view_count":5,
        "Question_body":"I'm confused or missing something fundamental about MLflow, can someone tell me how I would set this up.\u00a0\n\n\nI have 3 projects that I am working on,\u00a0\n\n\nProject-1) Apples vs Oranges classifier\nProject-2) Housing Price Regression\nProject-3) News Outlet named entity recognition\n\n\nThey are all different and I would like to keep experimentation separate between them, but I would like them all to be logged to MLFlow.\u00a0\n\n\nWhat is the configuration that I need? Do I need separate instances of an mlflow server? Do I need separate logins? I'm confused as to what the correct mlflow language is to describe this, I call them \"Projects\" but I don't necessarily feel like they fall into what mlflow calls a \"Project\".\u00a0\n\n\nPlease help!\n\n\n\n\nIf it helps, I really want to host only one MLflow server\/Postgres\/S3 store.\u00a0\u00a0\n\n\n\n\nMany Thanks,\u00a0\nKamil"
    },
    {
        "Question_title":"MLflow 1.20.2 released!",
        "Question_created_time":"2021-09-03T21:00:51",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/LO5wYh97kk4",
        "Question_comment_count":0,
        "Question_view_count":16,
        "Question_body":"We are happy to announce the availability of\u00a0MLflow\u00a01.20.2!\n\nMLflow 1.20.2 is a patch release containing the following features and bug fixes:\n\nFeatures:\n\n- Enabled auto dependency inference in spark flavor in autologging (#4759, @harupy)\n\nBug fixes and documentation updates:\n\n- Increased MLflow client HTTP request timeout from 10s to 120s (#4764, @jinzhang21)\n- Fixed autologging compatibility bugs with TensorFlow and Keras version 2.6.0 (#4766, @dbczumar)\n\nSmall bug fixes and doc updates (#4770, @WeichenXu123)\n\nFor a comprehensive list of changes, see the\u00a0release change log, and check out the latest documentation on\u00a0mlflow.org."
    },
    {
        "Question_title":"Help us with the MLflow Features",
        "Question_created_time":"2019-01-21T11:38:39",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/QQ7ycCYpeGE",
        "Question_comment_count":0,
        "Question_view_count":28,
        "Question_body":"Hello,\n\n\n\n\nWe would like to continue our momentum of building new MLflow features at the same pace as we did in the past six months. We need your help. Give us your feedback by taking\n\nthis user\u00a0feedback survey.\n\n\n\n\nYou can also read Matei's blog: Kicking off 2019 with an MLflow Survey.\u00a0\n\n\n\n\nThank you for help.\n\n\n\n\nCheers,\n\nJules\n\n--\u00a0\n\n\nThe Best Ideas are Simple\n\nJules S. Damji\n\nApache Spark Developer & Community Advocate\n\nDatabricks, Inc.\n\nju...@databricks.com\n\n(510) 304-7686\n\ndatabricks.com"
    },
    {
        "Question_title":"statsmodels",
        "Question_created_time":"2020-07-20T12:28:38",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/5jPXLRBZ6sY",
        "Question_comment_count":1,
        "Question_view_count":24,
        "Question_body":"Hello:\n\n\nThe MLFlow documentation shows this list of built-in flavors.\n\n\n\nPython Function (python_function)\n\nR Function (crate)\n\nH2O (h2o)\n\nKeras (keras)\n\nMLeap (mleap)\n\nPyTorch (pytorch)\n\nScikit-learn (sklearn)\n\nSpark MLlib (spark)\n\nTensorFlow (tensorflow)\n\nONNX (onnx)\n\nMXNet Gluon (gluon)\n\nXGBoost (xgboost)\n\nLightGBM (lightgbm)\n\nI need to deploy a statsmodels.Logit model, which is not built-in.\u00a0 Has somebody already added statsmodels to MLFlow?\u00a0 What would be the best way to accomplish this?\n\n\nFor reference:\u00a0https:\/\/www.statsmodels.org\/stable\/generated\/statsmodels.discrete.discrete_model.Logit.html#statsmodels.discrete.discrete_model.Logit\n\n\nThanks,\n\n\nRay"
    },
    {
        "Question_title":"Issue with MLFlow remote tracking server and Databricks-connect",
        "Question_created_time":"2021-03-31T15:40:00",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/nrQ7-1wDTO4",
        "Question_comment_count":0,
        "Question_view_count":94,
        "Question_body":"Hi all,\n\n\nI'm not able\u00a0 to load a MLFlow model from a remote server located in Databricks dbfs.\n\n\nI'm using Kedro package locally for my project structure and I run the pipelines using the package databricks-connect to send the computation instructions to my cluster on Databricks.\n\n\nCurrently, I have a MLFLow model in a dbfs path which I can retrieve successfully from the Databricks workspace (Databricks web interface) using the command: mlflow.spark.load_model('dbfs:\/<path>) on the notebooks.\n\n\nUnfortunately, when I try to replicate this locally (from my kedro project) with these lines:\nmlflow.set_tracking_uri('databricks')\nmlflow.spark.load_model('dbfs:\/<path>)\n\n\nI get the following error message:\n\"An error occurred while calling z:org.apache.spark.api.python.PythonRDD.runJob.\n: java.io.IOException: Illegal file pattern: Illegal\/unsupported escape sequence near index 8\nsparkml\\metadata\"\n\n\nThanks,\nRodrigo."
    },
    {
        "Question_title":"Tracking URI",
        "Question_created_time":"2021-05-21T07:46:42",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/kJOp3qmaqdI",
        "Question_comment_count":3,
        "Question_view_count":13,
        "Question_body":"Hello Community\n\n\nI am trying to save and register only the last 5 runs and one older run among the 20 runs registered is there a way to delete it all at once instead of using the ui\n\n\n\n\nRegards,\nAarthi"
    },
    {
        "Question_title":"MLflow 1.27.0 released, including new MLflow Pipelines component!",
        "Question_created_time":"2022-06-28T23:57:22",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/7H5WdbTpuYk",
        "Question_comment_count":0,
        "Question_view_count":25,
        "Question_body":"We are very excited to announce the availability of\u00a0MLflow\u00a01.27.0!\n\n\n\n\nMLflow 1.27.0 includes several major features and improvements:\n\n[Pipelines] With MLflow 1.27.0, we are excited to announce the release of\nMLflow Pipelines, an opinionated framework for\nstructuring MLOps workflows that simplifies and standardizes machine learning application development\nand productionization. MLflow Pipelines makes it easy for data scientists to follow best practices\nfor creating production-ready ML deliverables, allowing them to focus on developing excellent models.\nMLflow Pipelines also enables ML engineers and DevOps teams to seamlessly deploy models to production\nand incorporate them into applications. To get started with MLflow Pipelines, check out the documentation at\nhttps:\/\/mlflow.org\/docs\/latest\/pipelines.html. (#6115)\n\n[UI] Introduce UI support for searching and comparing runs across multiple Experiments (#5971,\u00a0@r3stl355)\n\nMore features:\n\n[Tracking] When using batch logging APIs, automatically split large sets of metrics, tags, and params into multiple requests (#6052,\u00a0@nzw0301)\n[Tracking] When an Experiment is deleted, SQL-based backends also move the associate Runs to the \"deleted\" lifecycle stage (#6064,\u00a0@AdityaIyengar27)\n[Tracking] Add support for logging single-element\u00a0ndarray\u00a0and tensor instances as metrics via the\u00a0mlflow.log_metric()\u00a0API (#5756,\u00a0@ntakouris)\n[Models] Add support for\u00a0CatBoostRanker\u00a0models to the\u00a0mlflow.catboost\u00a0flavor (#6032,\u00a0@danielgafni)\n[Models] Integrate SHAP's\u00a0KernelExplainer\u00a0with\u00a0mlflow.evaluate(), enabling model explanations on categorical data (#6044,\u00a0#5920,\u00a0@WeichenXu123)\n[Models] Extend\u00a0mlflow.evaluate()\u00a0to automatically log the\u00a0score()\u00a0outputs of scikit-learn models as metrics (#5935,\u00a0#5903,\u00a0@WeichenXu123)\n\nBug fixes and documentation updates:\n\n[UI] Fix broken model links in the Runs table on the MLflow Experiment Page (#6014,\u00a0@hctpbl)\n[Tracking\/Installation] Require\u00a0sqlalchemy>=1.4.0\u00a0upon MLflow installation, which is necessary for usage of SQL-based MLflow Tracking backends (#6024,\u00a0@sniafas)\n[Tracking] Fix a regression that caused\u00a0mlflow server\u00a0to reject\u00a0LogParam\u00a0API requests containing empty string values (#6031,\u00a0@harupy)\n[Tracking] Fix a failure in scikit-learn autologging that occurred when\u00a0matplotlib\u00a0was not installed on the host system (#5995,\u00a0@fa9r)\n[Tracking] Fix a failure in TensorFlow autologging that occurred when training models on\u00a0tf.data.Dataset\u00a0inputs (#6061,\u00a0@dbczumar)\n[Artifacts] Address artifact download failures from SFTP locations that occurred due to mismanaged concurrency (#5840,\u00a0@rsundqvist)\n[Models] Fix a bug where MLflow Models did not restore bundled code properly if multiple models use the same code module name (#5926,\u00a0@BFAnas)\n[Models] Address an issue where\u00a0mlflow.sklearn.model()\u00a0did not properly restore bundled model code (#6037,\u00a0@WeichenXu123)\n[Models] Fix a bug in\u00a0mlflow.evaluate()\u00a0that caused input data objects to be mutated when evaluating certain scikit-learn models (#6141,\u00a0@dbczumar)\n[Models] Fix a failure in\u00a0mlflow.pyfunc.spark_udf\u00a0that occurred when the UDF was invoked on an empty RDD partition (#6063,\u00a0@WeichenXu123)\n[Models] Fix a failure in\u00a0mlflow models build-docker\u00a0that occurred when\u00a0env-manager=local\u00a0was specified (#6046,\u00a0@bneijt)\n[Projects] Improve robustness of the git repository check that occurs prior to MLflow Project execution (#6000,\u00a0@dkapur17)\n[Projects] Address a failure that arose when running a Project that does not have a\u00a0master\u00a0branch (#5889,\u00a0@harupy)\n[Docs] Correct several typos throughout the MLflow docs (#5959,\u00a0@ryanrussell)\n\nFor a comprehensive list of changes, see the\u00a0release change log, and check out the latest documentation on\u00a0mlflow.org."
    },
    {
        "Question_title":"Data hackathon",
        "Question_created_time":"2023-06-15T18:55:00",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/sKIEcqY1L2Q",
        "Question_comment_count":1,
        "Question_view_count":4,
        "Question_body":"Hi all,\n\n\nNew to the group here.\n\nTo be brief - we are hosting our first hackathon this October 2023 (exact date to be decided)\n\n\nMy experience is in insurance. I have noticed that a lot of the market is heavily centred around propriety software namely Willis Towers Watson but they have (of yet) been able to keep pace with the open source community - and the advances made in ML\/AI at the same pace the open source community does.\n\n\nLong story short, our aim is to build a new community to disrupt & introduce new practises for the way Insurance models are built.\u00a0\n\nBUT the project is not limited to insurance. The scope ranges from\n\n\ninsurance\nrisk\npublic sector\nprivate sector\u00a0\nagriculture\n\u00a0- the list goes on\nWe are only just starting - find out more about us Here!\n\n\n\n\n\n\nBest,\nAlex"
    },
    {
        "Question_title":"Model Monitoring with mlflow",
        "Question_created_time":"2019-09-20T05:03:12",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/Gam2UGs84sE",
        "Question_comment_count":1,
        "Question_view_count":15,
        "Question_body":"Hi,\u00a0\nI have deployed a network with mlflow and can get the predictions be hitting the endpoint. Is there any way to monitor the predictions being made by my model, for example i want to be able to monitor all the prediction calls received by my model and the predictions produced by it and I want to view it in the mlflow UI."
    },
    {
        "Question_title":"adding pyspark.ml.recommendation.ALS to allowlist for mlflow.pyspark.ml.autolog?",
        "Question_created_time":"2022-06-24T09:04:50",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/gOopnnYcaas",
        "Question_comment_count":0,
        "Question_view_count":27,
        "Question_body":"Hi, so\u00a0 mlflow.pyspark.ml.autolog by default excludes\u00a0pyspark.ml.recommendation.ALS from the allowlist.\u00a0\n\n\nI have two questions:\nIf I add it to a custom allowlist, is there a maximum model size that will cause a problem?\nIf I cannot do an autolog, how am I supposed to log and use the model with mlflow on databricks?\n\n\nThanks!"
    },
    {
        "Question_title":"MLflow 1.14.1 released!",
        "Question_created_time":"2021-03-01T20:56:25",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/lSEtCZf7CrI",
        "Question_comment_count":0,
        "Question_view_count":7,
        "Question_body":"Hi all, we are happy to announce the availability of\u00a0MLflow 1.14.1!\n\n\nMLflow 1.14.1 is a patch release containing the following bug fix:\nFix issues in handling flexible numpy datatypes in TensorSpec (#4147,\u00a0@arjundc-db)\nThis information is also available in the\u00a0release change log, and you can check out the latest documentation for MLflow 1.14.1 on\u00a0mlflow.org."
    },
    {
        "Question_title":"ML flow artifact save to Azure Blob Storage",
        "Question_created_time":"2019-09-23T02:30:38",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/9xW4OfPGdEI",
        "Question_comment_count":1,
        "Question_view_count":8,
        "Question_body":"I am running mlflow sklearn_elasticnet_wine example. It saves the model locally to my computer. I want to modify the example so that I can save the model to Azure Blob and later deploy the model to Azure ACI. Can anyone guide me on how can I do it."
    },
    {
        "Question_title":"mlflow ui error",
        "Question_created_time":"2019-10-18T18:57:03",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/ELSSZ5ibVe4",
        "Question_comment_count":4,
        "Question_view_count":553,
        "Question_body":"I am on Mac Mojave, python 3.7.3\n\n\nI am trying Mlflow for first time.\n\n\nI successfully ran\u00a0python examples\/sklearn_elasticnet_wine\/train.py from tutorial page.\n\n\n\n\nI getting this when I run, I can see ui at\u00a0http:\/\/127.0.0.1:5000\/\u00a0but no data shows\n\n\n\n$mlflow ui\n\n\n\n\n[2019-10-18 15:49:00 -0700] [26101] [INFO] Starting gunicorn 19.9.0\n\n[2019-10-18 15:49:00 -0700] [26101] [INFO] Listening at: http:\/\/127.0.0.1:5000 (26101)\n\n[2019-10-18 15:49:00 -0700] [26101] [INFO] Using worker: sync\n\n[2019-10-18 15:49:00 -0700] [26104] [INFO] Booting worker with pid: 26104\n\n[2019-10-18 15:49:32 -0700] [26101] [INFO] Handling signal: winch\n\n[2019-10-18 15:49:32 -0700] [26101] [INFO] Handling signal: winch\n\n......\n\n[2019-10-18 15:49:33 -0700] [26101] [INFO] Handling signal: winch\n\n[2019-10-18 15:49:33 -0700] [26101] [INFO] Handling signal: winch\n\n[2019-10-18 15:49:33 -0700] [26101] [INFO] Handling signal: winch\n\n[2019-10-18 15:49:33 -0700] [26101] [INFO] Handling signal: winch\n\n[2019-10-18 15:49:33 -0700] [26101] [INFO] Handling signal: winch\n\n[2019-10-18 15:50:37 -0700] [26101] [CRITICAL] WORKER TIMEOUT (pid:26104)\n\n[2019-10-18 15:50:37 -0700] [26104] [INFO] Worker exiting (pid: 26104)\n\n[2019-10-18 15:50:37 -0700] [26219] [INFO] Booting worker with pid: 26219\n\n\n\n\nAny clue what could be wrong?"
    },
    {
        "Question_title":"MLflow tracking remote mysql database connection failed",
        "Question_created_time":"2019-09-27T06:11:11",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/wBN1p_C0KhI",
        "Question_comment_count":1,
        "Question_view_count":8,
        "Question_body":"I have setup mysql database and used mflow_set_tracking_uri to setup connection to the database. It runs fine from the local machine. However when i run the same file from another machine It does not connect to the database.\nmlflow.set_tracking_uri(\"mysql+pymysql:\/\/mlflow:*****@10.32.129.62:3306\/mlflow_tracking\")"
    },
    {
        "Question_title":"mlflow load_model - no host supplied",
        "Question_created_time":"2022-09-16T10:38:29",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/jHikb5beQ9I",
        "Question_comment_count":0,
        "Question_view_count":9,
        "Question_body":"In the below image, I mention tracking URI and trying to load the model but facing an error in no host supplied."
    },
    {
        "Question_title":"MLflow 1.5.0 released!",
        "Question_created_time":"2019-12-19T20:24:06",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/aLPUvzEx2KY",
        "Question_comment_count":0,
        "Question_view_count":14,
        "Question_body":"Hi all,\n\n\nWe are happy to announce the availability of\u00a0MLflow 1.5.0!^\u00a0 In addition to bug and documentation fixes, MLflow 1.5.0 includes several major features and improvements, including:\n\n\n* New support for a LightGBM flavor (#2136, @harupy)\n* New support for a XGBoost flavor (#2124, @harupy)\n* New support for a Gluon flavor and autologging (#1973, @cosmincatalin)\n* Runs created by mlflow.tensorflow.autolog() and mlflow.keras.autolog() (#2088) are now automatically ended after training (#2094, @juntai-zheng)\n\n* When using the mlflow server CLI command, you can now expose metrics on \/metrics for Prometheus via the optional --activate-parameter argument (#2097, @t-henri)\n\n\n\nFor a comprehensive list of changes, see the\u00a0release change log, and check out the latest documentation on\u00a0mlflow.org.\n\n\nThanks,\n\nSid"
    },
    {
        "Question_title":"The deleting icon for environment is missing on mlflow 1.28",
        "Question_created_time":"2022-08-23T09:22:15",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/RhimnwZxXMU",
        "Question_comment_count":0,
        "Question_view_count":13,
        "Question_body":"After upgrading to mlflow 1.28,\u00a0 I found\u00a0 the deleting icon is gone. The following is the 1.28.\u00a0\n\n\nThis is version 1.25.1 having deleting icon\n\n\nIs this expected or my version has issues? Thank you!"
    },
    {
        "Question_title":"Set Github as Artifacts location",
        "Question_created_time":"2019-06-27T14:19:09",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/QKRO33wr3hM",
        "Question_comment_count":5,
        "Question_view_count":23,
        "Question_body":"Im testing MLFLOW 1.0.0. I run MLFLOW in docker container, myArifacts location is Minio bucket (Minio is running in its own docker container), backend store is Postgres ( running in its own docker container); I train my model in Jupiter notebook ( also in its own docker container). Is it possible to use Github as an artifact location?\n\n\nThank you."
    },
    {
        "Question_title":"pipelines in mlflow",
        "Question_created_time":"2023-01-31T05:54:27",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/CJtu9BeZHYw",
        "Question_comment_count":0,
        "Question_view_count":27,
        "Question_body":"Hi Team ,\u00a0\n\n\n\u00a0 \u00a0New to ML flow . Need help in constructing a pipeline. I have a set of four pyspark scripts which needs to be triggered one by one as the output of script#1 is the input to script#2 and so on. Final output needs to be saved as a csv file. This needs to be triggered in databricks cluster in Azure . These scripts needs to be integrated together scheduled to run in batch model . Can we acheive this using ML Flow . Any help will be appreciated.\u00a0\n\n\nThanks\nSabya"
    },
    {
        "Question_title":"Performance issue of UI with O(100) runs?",
        "Question_created_time":"2019-06-11T13:51:32",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/Nh23E3ncxzw",
        "Question_comment_count":6,
        "Question_view_count":67,
        "Question_body":"Hi all,\n\nwe have been using MLFlow (only the tracking API) for some time now and\nhave recently upgraded to MLFlow 1.0.0 with a MySQL tracking store. Over\ntime, we have accumulated a (still moderate) number of runs in our\nlarger experiments, and the first signs of a performance issue start to\nshow up:\n\nWe have experiments with typically ~100 runs in them. This is enough so\nthat it takes the web UI several seconds (> 5s) to display the list of\nruns initially (before I can even add search queries). I have not done\nmore detailed profiling so far, but it seems strange to me to see such a\nresponse time in a still rather small setup.\n\nThus my question: Are there people around with large production setups\n(I would expect that larger databases with thousands of runs in a single\nexperiment could be quite common)? How well can MLFlow handle this? Or\nare you keeping single experiments small with only few runs (which does\nnot seem viable to me, since I cannot compare runs between different\nexperiments in the UI)?\n\nAny experience would be highly appreciated! Could well be that we just\nhave a badly configured SQL server, but I do not really know what to expect.\n\nThanks a lot!\n\nDa"
    },
    {
        "Question_title":"Predicting H2O-models stored as pyfunc-models",
        "Question_created_time":"2019-05-16T08:32:59",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/y8hhL4ecb7k",
        "Question_comment_count":3,
        "Question_view_count":30,
        "Question_body":"Hi,\n\n\u00a0\n\nMe and my team are trying to run H2O models (stored as pyfunc-models) on our Hadoop-cluster using spark.\nBasically not much more than this: \u00a0\n\nimport mlflow\n\nimport mlflow.pyfunc\n\n\u00a0\n\nfeatures = spark.read.parquet(\u201c\u2026\/features.parquet\u201d) \\\n\npredict_udf = mlflow.pyfunc.spark_udf(spark,\"..\/mlruns\/0\/f4ff13d1d93f4baab67dea545effca9b\/artifacts\/model_pyfunc\/\")\n\n\u00a0\n\npredictions = features.withColumn(\"prediction\", predict_udf('FML_Saved_vs_AUM_Ratio','TOT_IVT_AM','IND_Saved_vs_AUM_Ratio','SOL_SMT_CD','FML_PSN_FUND_AM')\n\npredictions.show(100,False)\n\n\u00a0\n\n\u00a0\n\nWe get the same prediction for each row.\n\n\n\n\nAfter taking a closer look at what happens during the prediction I see that the column names on which the data is trained are not recognized within the dataset that is being predicted.\n\n\n\n\/hadoop\/sdj1\/yarn\/local\/usercache\/jd05953\/appcache\/application_1557817794126_12227\/container_e312_1557817794126_12227_01_000002\/env\/mlflow_h2o\/lib\/python2.7\/site-packages\/h2o\/job.py:69: UserWarning: Test\/Validation dataset is missing column 'FML_Saved_vs_AUM_Ratio': substituting in a column of NaN\n\n\u00a0 warnings.warn(w)\n\n\/hadoop\/sdj1\/yarn\/local\/usercache\/jd05953\/appcache\/application_1557817794126_12227\/container_e312_1557817794126_12227_01_000002\/env\/mlflow_h2o\/lib\/python2.7\/site-packages\/h2o\/job.py:69: UserWarning: Test\/Validation dataset is missing column 'TOT_IVT_AM': substituting in a column of NaN\n\n\u00a0 warnings.warn(w)\n\n\/hadoop\/sdj1\/yarn\/local\/usercache\/jd05953\/appcache\/application_1557817794126_12227\/container_e312_1557817794126_12227_01_000002\/env\/mlflow_h2o\/lib\/python2.7\/site-packages\/h2o\/job.py:69: UserWarning: Test\/Validation dataset is missing column 'IND_Saved_vs_AUM_Ratio': substituting in a column of NaN\n\n\u00a0 warnings.warn(w)\n\n\/hadoop\/sdj1\/yarn\/local\/usercache\/jd05953\/appcache\/application_1557817794126_12227\/container_e312_1557817794126_12227_01_000002\/env\/mlflow_h2o\/lib\/python2.7\/site-packages\/h2o\/job.py:69: UserWarning: Test\/Validation dataset is missing column 'SOL_SMT_CD': substituting in a column of NaN\n\n\u00a0 warnings.warn(w)\n\n\/hadoop\/sdj1\/yarn\/local\/usercache\/jd05953\/appcache\/application_1557817794126_12227\/container_e312_1557817794126_12227_01_000002\/env\/mlflow_h2o\/lib\/python2.7\/site-packages\/h2o\/job.py:69: UserWarning: Test\/Validation dataset is missing column 'FML_PSN_FUND_AM': substituting in a column of NaN\n\n\u00a0 warnings.warn(w)\n\n\u00a0\n\n\u00a0\n\nWhen I take a look at the dataframe which is actually being used for the prediction (generated within the pandas UDF of the pyfunc-module)\u00a0 \u2026\n\n\u00a0\u00a0\u00a0 def predict(*args):\n\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 model = SparkModelCache.get_or_load(archive_path)\n\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 schema = {str(i): arg for i, arg in enumerate(args)}\n\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 # Explicitly pass order of columns to avoid lexicographic ordering (i.e., 10 < 2)\n\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 columns = [str(i) for i, _ in enumerate(args)]\n\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 pdf = pandas.DataFrame(schema, columns=columns)\n\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 result = model.predict(pdf)\n\n\u00a0\n\n\u2026 I do indeed see that the column names are replaced by numeric values:\n\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 1\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 2\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 3\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 4\u00a0\u00a0\u00a0\u00a0\u00a0\n\n0\u00a0\u00a0\u00a0\u00a0 0.826852\u00a0\u00a0\u00a0 2891.36\u00a0 0.825862\u00a0\u00a0\u00a0\u00a0\u00a0 123.62\u00a0\u00a0 0.00\u00a0\u00a0\u00a0\n\n1\u00a0\u00a0\u00a0\u00a0 0.656996\u00a0\u00a0\u00a0 7227.10\u00a0 0.000000\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 0.00\u00a0\u00a0\u00a0 0.00\u00a0\u00a0\u00a0\u00a0\u00a0\n\n2\u00a0\u00a0\u00a0\u00a0 0.011852\u00a0\u00a0\u00a0 1498.00\u00a0 0.000000\u00a0 \u00a0\u00a0\u00a065.25\u00a0\u00a0\u00a0\u00a0 0.00\n\n\u00a0\n\n\u00a0\n\nSo it seems I\u2019m getting the same prediction because everything is predicted on NaN-values.\n\n\u00a0\n\nIn Scikit-learn the order of the column is used so this should not be a problem. However, in H2O, the column names are used.\n\nSo I don\u2019t see how I can score my H2O-model properly? Am I missing something?\u00a0\n\n\n\n\nkind regards\n\nTomasz"
    },
    {
        "Question_title":"MLflow 1.4.0 Released!",
        "Question_created_time":"2019-10-30T21:11:45",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/y91s3pdmTwU",
        "Question_comment_count":0,
        "Question_view_count":16,
        "Question_body":"Hi all,\nWe are happy to announce the availability of MLflow 1.4.0!^\u00a0 In addition to bug and documentation fixes, MLflow 1.4.0 includes several major features and improvements, including:\n\n\n* Model Registry (Beta). MLflow 1.4.0 adds an experimental model registry feature, where you can manage, version, and keep lineage of your production models.\n* TensorFlow updates\n\u00a0 * MLflow Keras model saving, loading, and logging has been updated to be compatible with TensorFlow 2.0.\n\u00a0 * Autologging for `tf.estimator` and `tf.keras` models has been updated to be compatible with TensorFlow 2.0. The same functionalities of autologging in TensorFlow 1.x are available in TensorFlow 2.0, namely when fitting `tf.keras` models and when exporting saved `tf.estimator` models.\n\u00a0 * Examples and READMEs for both TensorFlow 1.X and TensorFlow 2.0 have been added to `mlflow\/examples\/tensorflow`.\n\n\nFor a comprehensive list of changes, see the release change log, and check out the latest documentation on mlflow.org.\n\n\nThanks,\n\nSue Ann\n\n\n\n--\u00a0\n\n\n\n\u00a0\n\n\nSue Ann Hong\n\n\nSoftware Engineer - Machine Learning\n\nDatabricks, Inc."
    },
    {
        "Question_title":"Mlflow licensed version",
        "Question_created_time":"2021-03-24T19:02:06",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/3DIZAVPgqeI",
        "Question_comment_count":2,
        "Question_view_count":310,
        "Question_body":"Hi ,\n\n\nIs there a licensed version of mlflow? If not, how is everyone who is leveraging mlflow able to incorporate permissions to access the underlying models?\n\n\nThank you,\u00a0\nPuja"
    },
    {
        "Question_title":"We would like to be listed in the MLflow users\/contributors list",
        "Question_created_time":"2020-11-05T14:20:50",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/RXIK8zSzZPU",
        "Question_comment_count":0,
        "Question_view_count":23,
        "Question_body":"Hello,\n\n\nAt InfinStor, we are users of MLflow, we have a free MLflow SaaS offering in the cloud, and we hope to contribute to the MLflow open source project.\n\n\nWe would like to be listed in the users\/contributors list.\n\n\nThanks to the MLflow contributors for creating such an awesome project. Kudos to the architects of MLflow - it is a truly extensible piece of software.\n\n\nBest\nJagane\n\n\nPS: Included with this email is a logo of InfinStor"
    },
    {
        "Question_title":"MLflow Release 0.4.2",
        "Question_created_time":"2018-08-07T21:52:29",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/NH0x9ch4MW0",
        "Question_comment_count":0,
        "Question_view_count":17,
        "Question_body":"Hi mlflow-users,\n\nMLflow Release 0.4.2 is ready, released 2018-08-07. The release is available on\u00a0PyPI\u00a0and docs are\u00a0updated. Here are the release notes (also available\u00a0on GitHub):\n\n\n\nBreaking changes: None\n\nFeatures:\n\nMLflow experiments REST API and\u00a0mlflow experiments create\u00a0now support providing\u00a0--artifact-location\u00a0(#232,\u00a0@aarondav)\n[UI] Runs can now be sorted by columns, and added a Select All button (#227,\u00a0@ToonKBC)\nDatabricks File System (DBFS) artifactory support added (#226,\u00a0@andrewmchen)\ndatabricks-cli version upgraded to >= 0.8.0 to support new DatabricksConfigProvider interface (#257,\u00a0@aarondav)\n\nBug fixes:\n\nMLflow client sends REST API calls using snake_case instead of camelCase field names (#232,\u00a0@aarondav)\nMinor bug fixes (#243,\u00a0#242,\u00a0@aarondav;\u00a0#251,\u00a0@javierluraschi;\u00a0#245,\u00a0@smurching;\u00a0#252,\u00a0@mateiz)"
    },
    {
        "Question_title":"MLflow 1.28.0 released!",
        "Question_created_time":"2022-08-11T06:29:58",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/2BtF8qwt0Zc",
        "Question_comment_count":0,
        "Question_view_count":49,
        "Question_body":"Hi all,\n\nWe are happy to announce the availability of\u00a0MLflow\u00a01.28.0\u00a0!\n\n\nMLflow\u00a01.28.0 includes several major features and improvements:\n\nFeatures:\n\n[Pipelines] Log the full Pipeline runtime configuration to MLflow Tracking during Pipeline execution (#6359,\u00a0@jinzhang21)\n[Pipelines] Add\u00a0pipeline.yaml\u00a0configurations to specify the Model Registry backend used for model registration (#6284,\u00a0@sunishsheth2009)\n[Pipelines] Support optionally skipping the\u00a0transform\u00a0step of the scikit-learn regression pipeline (#6362,\u00a0@sunishsheth2009)\n[Pipelines] Add UI links to Runs and Models in Pipeline Step Cards on Databricks (#6294,\u00a0@dbczumar)\n[Tracking] Introduce\u00a0mlflow.search_experiments()\u00a0API for searching experiments by name and by tags (#6333,\u00a0@WeichenXu123;\u00a0#6227,\u00a0#6172,\u00a0#6154,\u00a0@harupy)\n[Tracking] Increase the maximum parameter value length supported by File and SQL backends to 500 characters (#6358,\u00a0@johnyNJ)\n[Tracking] Introduce an\u00a0--older-than\u00a0flag to\u00a0mlflow gc\u00a0for removing runs based on deletion time (#6354,\u00a0@Jason-CKY)\n[Tracking] Add\u00a0MLFLOW_SQLALCHEMYSTORE_POOL_RECYCLE\u00a0environment variable for recycling SQLAlchemy connections (#6344,\u00a0@postrational)\n[UI] Display deeply nested runs in the Runs Table on the Experiment Page (#6065,\u00a0@tospe)\n[UI] Add box plot visualization for metrics to the Compare Runs page (#6308,\u00a0@ahlag)\n[UI] Display tags on the Compare Runs page (#6164,\u00a0@CaioCavalcanti)\n[UI] Use scientific notation for axes when viewing metric plots in log scale (#6176,\u00a0@RajezMariner)\n[UI] Add button to Metrics page for downloading metrics as CSV (#6048,\u00a0@rafaelvp-db)\n[UI] Include NaN and +\/- infinity values in plots on the Metrics page (#6422,\u00a0@hubertzub-db)\n[Tracking \/ Model Registry] Introduce environment variables to control retry behavior and timeouts for REST API requests (#5745,\u00a0@peterdhansen)\n[Tracking \/ Model Registry] Make\u00a0MlflowClient\u00a0importable as\u00a0mlflow.MlflowClient\u00a0(#6085,\u00a0@subramaniam02)\n[Model Registry] Add support for searching registered models and model versions by tags (#6413,\u00a0#6411,\u00a0#6320,\u00a0@WeichenXu123)\n[Model Registry] Add\u00a0stage\u00a0parameter to\u00a0set_model_version_tag()\u00a0(#6185,\u00a0@subramaniam02)\n[Model Registry] Add\u00a0--registry-store-uri\u00a0flag to\u00a0mlflow server\u00a0for specifying the Model Registry backend URI (#6142,\u00a0@Secbone)\n[Models] Improve performance of Spark Model logging on Databricks (#6282,\u00a0@bbarnes52)\n[Models] Include Pandas Series names in inferred model schemas (#6361,\u00a0@RynoXLI)\n[Scoring] Make\u00a0model_uri\u00a0optional in\u00a0mlflow models build-docker\u00a0to support building generic model serving images (#6302,\u00a0@harupy)\n[R] Support logging of NA and NaN parameter values (#6263,\u00a0@nathaneastwood)\n\nBug fixes and documentation updates:\n\n[Pipelines] Improve scikit-learn regression pipeline latency by limiting dataset profiling to the first 100 columns (#6297,\u00a0@sunishsheth2009)\n[Pipelines] Use\u00a0xdg-open\u00a0instead of\u00a0open\u00a0for viewing Pipeline results on Linux systems (#6326,\u00a0@strangiato)\n[Pipelines] Fix a bug that skipped Step Card rendering in Jupyter Notebooks (#6378,\u00a0@apurva-koti)\n[Tracking] Use the 401 HTTP response code in authorization failure REST API responses, instead of 500 (#6106,\u00a0@balvisio)\n[Tracking] Correctly classify artifacts as files and directories when using Azure Blob Storage (#6237,\u00a0@nerdinand)\n[Tracking] Fix a bug in the File backend that caused run metadata to be lost in the event of a failed write (#6388,\u00a0@dbczumar)\n[Tracking] Adjust\u00a0mlflow.pyspark.ml.autolog()\u00a0to only log model signatures for supported input \/ output data types (#6365,\u00a0@harupy)\n[Tracking] Adjust\u00a0mlflow.tensorflow.autolog()\u00a0to log TensorFlow early stopping callback info when\u00a0log_models=False\u00a0is specified (#6170,\u00a0@WeichenXu123)\n[Tracking] Fix signature and input example logging errors in\u00a0mlflow.sklearn.autolog()\u00a0for models containing transformers (#6230,\u00a0@dbczumar)\n[Tracking] Fix a failure in\u00a0mlflow gc\u00a0that occurred when removing a run whose artifacts had been previously deleted (#6165,\u00a0@dbczumar)\n[Tracking] Add missing\u00a0sqlparse\u00a0library to MLflow Skinny client, which is required for search support (#6174,\u00a0@dbczumar)\n[Tracking \/ Model Registry] Fix an\u00a0mlflow server\u00a0bug that rejected parameters and tags with empty string values (#6179,\u00a0@dbczumar)\n[Model Registry] Fix a failure preventing model version schemas from being downloaded with\u00a0--serve-arifacts\u00a0enabled (#6355,\u00a0@abbas123456)\n[Scoring] Patch the Java Model Server to support MLflow Models logged on recent versions of the Databricks Runtime (#6337,\u00a0@dbczumar)\n[Scoring] Verify that either the deployment name or endpoint is specified when invoking the\u00a0mlflow deployments predict\u00a0CLI (#6323,\u00a0@dbczumar)\n[Scoring] Properly encode datetime columns when performing batch inference with\u00a0mlflow.pyfunc.spark_udf()\u00a0(#6244,\u00a0@harupy)\n[Projects] Fix an issue where local directory paths were misclassified as Git URIs when running Projects (#6218,\u00a0@ElefHead)\n[R] Fix metric logging behavior for +\/- infinity values (#6271,\u00a0@nathaneastwood)\n[Docs] Move Python API docs for\u00a0MlflowClient\u00a0from\u00a0mlflow.tracking\u00a0to\u00a0mlflow.client\u00a0(#6405,\u00a0@dbczumar)\n[Docs] Document that MLflow Pipelines requires Make (#6216,\u00a0@dbczumar)\n[Docs] Improve documentation for developing and testing MLflow JS changes in\u00a0CONTRIBUTING.rst\u00a0(#6330,\u00a0@ahlag)\nFor a comprehensive list of changes, see the\u00a0release change log, and check out the latest documentation on\u00a0mlflow.org."
    },
    {
        "Question_title":"Cannot save Spark Pipeline model as pyfunc",
        "Question_created_time":"2020-02-24T13:40:38",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/IRaESID1o5g",
        "Question_comment_count":0,
        "Question_view_count":11,
        "Question_body":"I have a Spark Pipeline model saved using mlflow.spark.save_model().Then load it back as a Pyfunc model (mlflow.pyfunc.load_pyfunc). But it is not getting saved on my local machine using the mlflow.pyfunc.save_model command. Why not able to save using mlflow.pyfunc.save_model () ?"
    },
    {
        "Question_title":"MLflow 1.19.0 Released!",
        "Question_created_time":"2021-07-14T05:58:36",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/FP1sQyuLlxM",
        "Question_comment_count":0,
        "Question_view_count":17,
        "Question_body":"Hi all,\n\n\nWe are happy to announce the availability of\u00a0MLflow 1.19.0!\n\n\nIn addition to bug and documentation fixes, MLflow 1.19.0 includes the following features and improvements:\nAdd support for plotting per-class feature importance computed on linear boosters in XGBoost autologging (#4523,\u00a0@dbczumar)\nAdd\u00a0mlflow_create_registered_model\u00a0and\u00a0mlflow_delete_registered_model\u00a0for R to create\/delete registered models.\nAdd support for setting tags while resuming a run (#4497,\u00a0@dbczumar)\nMLflow UI updates (#4490,\u00a0@sunishsheth2009)\nAdd framework for internationalization support.\nMove metric columns before parameter and tag columns in the runs table.\nChange the display format of run start time to elapsed time (e.g. 3 minutes ago) from timestamp (e.g. 2021-07-14 14:02:10) in the runs table.\nFor a comprehensive list of changes, see the\u00a0release change log, and check out the latest documentation on\u00a0mlflow.org."
    },
    {
        "Question_title":"MLflow 1.9.0 released!",
        "Question_created_time":"2020-06-19T13:32:00",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/M525psdvxds",
        "Question_comment_count":0,
        "Question_view_count":10,
        "Question_body":"Hi all,\n\nWe are happy to announce the availability of MLflow 1.9.0! Some highlights from this release:\n\n\nlog_model and save_model APIs now support saving model signatures (the model's input and output schema) and example input along with the model itself \u00a0(#2698, #2775, @tomasatdatabricks). Model signatures are used to reorder and validate input fields when scoring\/serving models using the pyfunc flavor, mlflow models CLI commands, or mlflow.pyfunc.spark_udf (#2920, @tomasatdatabricks and @aarondav)\nIntroduce fastai model persistence and autologging APIs under mlflow.fastai (#2619, #2689 @antoniomdk)\nAdd pluggable mlflow.deployments API and CLI for deploying models to custom serving tools, e.g. RedisAI (#2327, @hhsecond)\nAdd plugin interface for executing MLflow projects against custom backends (#2566, @jdlesage)\nEnable viewing PDFs logged as artifacts from the runs UI \u00a0(#2859, @ankmathur96)\nSignificant performance and scalability improvements to metric comparison and scatter plots in the UI (#2447, @mjlbach)\nFor a comprehensive list of changes, see the\u00a0release change log (https:\/\/github.com\/mlflow\/mlflow\/releases\/tag\/v1.9.0), and check out the latest documentation on\u00a0mlflow.org."
    },
    {
        "Question_title":"Track images",
        "Question_created_time":"2023-07-19T07:29:28",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/5spd11tooeE",
        "Question_comment_count":0,
        "Question_view_count":2,
        "Question_body":"Hello, how can I log debug images with pytorch and mlflow?\nI want to then similar to tensorboard switch between epochs and view the images"
    },
    {
        "Question_title":"MLflow 1.20 released!",
        "Question_created_time":"2021-08-25T22:51:37",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/S36kTwPILeM",
        "Question_comment_count":0,
        "Question_view_count":9,
        "Question_body":"We are happy to announce the availability of MLflow 1.20.0!\n\nNote: The MLflow R package for 1.20.0 is not yet available but will be in a week because CRAN's submission system will be offline until September 1st.\n\nIn addition to bug and documentation fixes, MLflow 1.20.0 includes the following features and improvements:\n\n- Autologging for scikit-learn now records post training metrics when scikit-learn evaluation APIs, such as `sklearn.metrics.mean_squared_error`, are called (#4491, #4628 #4638, @WeichenXu123)\n- Autologging for PySpark ML now records post training metrics when model evaluation APIs, such as `Evaluator.evaluate()`, are called (#4686, @WeichenXu123)\n- Add `pip_requirements` and `extra_pip_requirements` to `mlflow.*.log_model` and `mlflow.*.save_model` for directly specifying the pip requirements of the model to log \/ save (#4519, #4577, #4602, @harupy)\n- Added `stdMetrics` entries to the training metrics recorded during PySpark CrossValidator autologging (#4672, @WeichenXu123)\n- MLflow UI updates:\n1. Improved scalability of the parallel coordinates plot for run performance comparison,\n2. Added support for filtering runs based on their start time on the experiment page,\n3. Added a dropdown for runs table column sorting on the experiment page,\n4. Upgraded the AG Grid plugin, which is used for runs table loading on the experiment page, to version 25.0.0,\n5. Fixed a bug on the experiment page that caused the metrics section of the runs table to collapse when selecting columns from other table sections (#4712, @dbczumar)\n- Added support for distributed execution to autologging for PyTorch Lightning (#4717, @dbczumar)\n- Expanded R support for Model Registry functionality (#4527, @bramrodenburg)\n- Added model scoring server support for defining custom prediction response wrappers (#4611, @Ark-kun)\n- `mlflow.*.log_model` and `mlflow.*.save_model` now automatically infer the pip requirements of the model to log \/ save based on the current software environment (#4518, @harupy)\n- Introduced support for running Sagemaker Batch Transform jobs with MLflow Models (#4410, #4589, @YQ-Wang)\n\nFor a comprehensive list of changes, see the release change log, and check out the latest documentation on mlflow.org."
    },
    {
        "Question_title":"Artifacts are not shown in UI",
        "Question_created_time":"2019-06-19T17:28:41",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/-WkRc1NoH5g",
        "Question_comment_count":2,
        "Question_view_count":669,
        "Question_body":"I run mlflow server with Postgres backend and local directory as default artifact root. When I run my experiments\/runs I do see them in mlflow uI, however, artifacts are not shown. Artifacts are created in the local directory ( subdirectory from which I train model), but they are not showing in UI."
    },
    {
        "Question_title":"RFC: Migrating Python RunData interface to expose metrics, params, tags as dicts",
        "Question_created_time":"2019-04-03T19:25:03",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/TkPB76lf_fY",
        "Question_comment_count":0,
        "Question_view_count":10,
        "Question_body":"Hi all, in the next MLflow release we're thinking of updating the Python RunData interface to make it easier to look up metric\/param\/tag values by key.\n\n\nWe're considering a few possible ways to make this happen (TL;DR we want to make metrics\/params\/tags dicts) & would love to get your feedback on the APIs, especially around use cases we should strive to make easy: https:\/\/gist.github.com\/smurching\/f60f7c418ec03f2bcee0f3374bfa1d81\n\nThanks!\nSid"
    },
    {
        "Question_title":"Using mlflow.models.FlavorBackend(config, **kwargs)",
        "Question_created_time":"2019-06-12T02:12:17",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/mjlgu0lDAJM",
        "Question_comment_count":1,
        "Question_view_count":14,
        "Question_body":"Hi,\nI am trying to use\u00a0mlflow.models.FlavorBackend(config,\u00a0**kwargs) to serve the model from python. What should be the values of config and what all params do we need to specify? Any kind of help would be appreciated."
    },
    {
        "Question_title":"MLflow 1.30.0 release",
        "Question_created_time":"2022-10-20T18:24:02",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/h0AobjGBZ6Q",
        "Question_comment_count":0,
        "Question_view_count":12,
        "Question_body":"We are happy to announce the availability of MLflow 1.30.0!\n\nMLflow 1.30.0 includes several major features and improvements\n\nFeatures:\n[Pipelines] Introduce hyperparameter tuning support to MLflow Pipelines (#6859, @prithvikannan)\n[Pipelines] Introduce support for prediction outlier comparison to training data set (#6991, @jinzhang21)\n[Pipelines] Introduce support for recording all training parameters for reproducibility (#7026, #7094, @prithvikannan)\n[Pipelines] Add support for Delta tables as a datasource in the ingest step (#7010, @sunishsheth2009)\n[Pipelines] Add expanded support for data profiling up to 10,000 columns (#7035, @prithvikanna)\n[Pipelines] Add support for AutoML in MLflow Pipelines using FLAML (#6959, @mshtelma)\n[Pipelines] Add support for simplified transform step execution by allowing for unspecified configuration (#6909, @Apurva Koti)\n[Pipelines] Introduce a data preview tab to the transform step card (#7033, @prithvikannan)\n[Tracking] Introduce run_name attribute for create_run, get_run and update_run APIs (#6782, #6798 @Apurva Koti)\n[Tracking] Add support for searching by creation_time and last_update_time for the search_experiments API (#6979, @harupy)\n[Tracking] Add support for search terms run_id IN and run ID NOT IN for the search_runs API (#6945, @harupy)\n[Tracking] Add support for searching by user_id and end_time for the search_runs API (#6881, #6880 @subramaniam02)\n[Tracking] Add support for searching by run_name and run_id for the search_runs API (#6899, @harupy; #6952, @alexacole)\n[Tracking] Add support for synchronizing run name attribute and mlflow.runName tag (#6971, @BenWilson2)\n[Tracking] Add support for signed tracking server requests using AWSSigv4 and AWS IAM (#7044, @pdifranc)\n[Tracking] Introduce the update_run() API for modifying the status and name attributes of existing runs (#7013, @gabrielfu)\n[Tracking] Add support for experiment deletion in the mlflow gc cli API (#6977, @shaikmoeed)\n[Models] Add support for environment restoration in the evaluate() API (#6728, @jerrylian-db)\n[Models] Remove restrictions on binary classification labels in the evaluate() API (#7077, @dbczumar)\n[Scoring] Add support for BooleanType to mlflow.pyfunc.spark_udf() (#6913, @BenWilson2)\n[SQLAlchemy] Add support for configurable Pool class options for SqlAlchemyStore (#6883, @mingyu89)\n\nBug fixes:\n[Pipelines] Enable Pipeline subprocess commands to create a new SparkSession if one does not exist (#6846, @prithvikannan)\n[Pipelines] Fix a rendering issue with bool column types in Step Card data profiles (#6907, @sunishsheth2009)\n[Pipelines] Add validation and an exception if required step files are missing (#7067, @mingyu89)\n[Pipelines] Change step configuration validation to only be performed during runtime execution of a step (#6967, @prithvikannan)\n[Tracking] Fix infinite recursion bug when inferring the model schema in mlflow.pyspark.ml.autolog() (#6831, @harupy)\n[UI] Remove the browser error notification when failing to fetch artifacts (#7001, @kevingreer)\n[Models] Allow mlflow-skinny package to serve as base requirement in MLmodel requirements (#6974, @BenWilson2)\n[Models] Fix an issue with code path resolution for loading SparkML models (#6968, @dbczumar)\n[Models] Fix an issue with dependency inference in logging SparkML models (#6912, @BenWilson2)\n[Models] Fix an issue involving potential duplicate downloads for SparkML models (#6903, @Serena Ruan)\n[Models] Add missing pos_label to sklearn.metrics.precision_recall_curve in mlflow.evaluate() (#6854, @dbczumar)\n[SQLAlchemy] Fix a bug in SqlAlchemyStore where set_tag() updates the incorrect tags (#7027, @gabrielfu)\n\nDocumentation updates:\n[Models] Update details regarding the default Keras serialization format (#7022, @balvisio)\n\nFor a comprehensive list of changes, see the release change log, and check out the latest documentation on mlflow.org."
    },
    {
        "Question_title":"Mlflow integration with Google's Vertex AI",
        "Question_created_time":"2022-02-18T06:31:06",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/q9759ED2C2A",
        "Question_comment_count":0,
        "Question_view_count":113,
        "Question_body":"Hi,\n\n\n\u00a0 Is there any way through which we can integrate mlflow with vertex AI ?\u00a0\nAny articles or resources I can go through ?\n\nThanks\nAvinash"
    },
    {
        "Question_title":"MLflow Release 0.3.0",
        "Question_created_time":"2018-07-23T15:25:49",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/oD6P1_dPotI",
        "Question_comment_count":1,
        "Question_view_count":20,
        "Question_body":"Hi mlflow-users,\n\n\nMLflow Release 0.3.0 is ready"
    },
    {
        "Question_title":"MLflow 1.15.0 Released!",
        "Question_created_time":"2021-03-26T16:42:28",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/hxFNU7qIBRw",
        "Question_comment_count":0,
        "Question_view_count":15,
        "Question_body":"We are happy to announce the availability of\u00a0MLflow 1.15.0!\nIn addition to bug and documentation fixes, MLflow 1.15.0 includes the following features and improvements:\nAdd\u00a0silent=False\u00a0option to all autologging APIs, to allow suppressing MLflow warnings and logging statements during autologging setup and training (#4173, @dbczumar)\nAdd\u00a0disable_for_unsupported_versions=False\u00a0option to all autologging APIs, to disable autologging for versions of ML frameworks that have not been explicitly tested against the current version of the MLflow client (#4119, @WeichenXu123)\nFor a comprehensive list of changes, see the\u00a0release change log, and check out the latest documentation on\u00a0mlflow.org.\n\n\nThanks,\nSid"
    },
    {
        "Question_title":"MLflow 1.26.0 released!",
        "Question_created_time":"2022-05-16T07:15:50",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/CbY7AAjpX8o",
        "Question_comment_count":0,
        "Question_view_count":6,
        "Question_body":"Hi all,\n\nWe are happy to announce the availability of MLflow 1.26.0\u00a0!\n\n\nMLflow 1.26.0 includes several major features and improvements:\n\nFeatures:\n\n[CLI] Add endpoint naming and options configuration to the deployment CLI (#5731,\u00a0@trangevi)\n[Build,Doc] Add development environment setup script for Linux and MacOS x86 Operating Systems (#5717,\u00a0@BenWilson2)\n[Tracking] Update\u00a0mlflow.set_tracking_uri\u00a0to add support for paths defined as\u00a0pathlib.Path\u00a0in addition to existing\u00a0str\u00a0path declarations (#5824,\u00a0@cacharle)\n[Scoring] Add custom timeout override option to the scoring server CLI to support high latency models (#5663,\u00a0@sniafas)\n[UI] Add sticky header to experiment run list table to support column name visibility when scrolling beyond page fold (#5818,\u00a0@hubertzub-db)\n[Artifacts] Add GCS support for MLflow garbage collection (#5811,\u00a0@aditya-iyengar-rtl-de)\n[Evaluate] Add\u00a0pos_label\u00a0argument for\u00a0eval_and_log_metrics\u00a0API to support accurate binary classifier evaluation metrics (#5807,\u00a0@yxiong)\n[UI] Add fields for latest, minimum and maximum metric values on metric display page (#5574,\u00a0@adamreeve)\n[Models] Add support for\u00a0input_example\u00a0and\u00a0signature\u00a0logging for pyspark ml flavor when using autologging (#5719,\u00a0@bali0019)\n[Models] Add\u00a0virtualenv\u00a0environment manager support for\u00a0mlflow models docker-build\u00a0CLI (#5728,\u00a0@harupy)\n[Models] Add support for wildcard module matching in log_model_allowlist for PySpark models (#5723,\u00a0@serena-ruan)\n[Projects] Add\u00a0virtualenv\u00a0environment manager support for MLflow projects (#5631,\u00a0@harupy)\n[Models] Add\u00a0virtualenv\u00a0environment manager support for MLflow Models (#5380,\u00a0@harupy)\n[Models] Add\u00a0virtualenv\u00a0environment manager support for\u00a0mlflow.pyfunc.spark_udf\u00a0(#5676,\u00a0@WeichenXu123)\n[Models] Add support for\u00a0input_example\u00a0and\u00a0signature\u00a0logging for\u00a0tensorflow\u00a0flavor when using autologging (#5510,\u00a0@bali0019)\n[Server-infra] Add JSON Schema Type Validation to enable raising 400 errors on malformed requests to REST API endpoints (#5458,\u00a0@mrkaye97)\n[Scoring] Introduce abstract\u00a0endpoint\u00a0interface for mlflow deployments (#5378,\u00a0@trangevi)\n[UI] Add\u00a0End Time\u00a0and\u00a0Duration\u00a0fields to run comparison page (#3378,\u00a0@RealArpanBhattacharya)\n[Serving] Add schema validation support when parsing input csv data for model serving (#5531,\u00a0@vvijay-bolt)\n\nBug fixes and documentation updates:\n\n[Models] Fix REPL ID propagation from datasource listener to publisher for Spark data sources (#5826,\u00a0@dbczumar)\n[UI] Update\u00a0ag-grid\u00a0and implement\u00a0getRowId\u00a0to improve performance in the runs table visualization (#5725,\u00a0@adamreeve)\n[Serving] Fix\u00a0tf-serving\u00a0parsing to support columnar-based formatting (#5825,\u00a0@arjundc-db)\n[Artifacts] Update\u00a0log_artifact\u00a0to support models larger than 2GB in HDFS (#5812,\u00a0@hitchhicker)\n[Models] Fix autologging to support\u00a0lightgbm\u00a0metric names with \"@\" symbols within their names (#5785,\u00a0@mengchendd)\n[Models] Pyfunc: Fix code directory resolution of subdirectories (#5806,\u00a0@dbczumar)\n[Server-Infra] Fix mlflow-R server starting failure on windows (#5767,\u00a0@serena-ruan)\n[Docs] Add documentation for\u00a0virtualenv\u00a0environment manager support for MLflow projects (#5727,\u00a0@harupy)\n[UI] Fix artifacts display sizing to support full width rendering in preview pane (#5606,\u00a0@szczeles)\n[Models] Fix local hostname issues when loading spark model by binding driver address to localhost (#5753,\u00a0@WeichenXu123)\n[Models] Fix autologging validation and batch_size calculations for\u00a0tensorflow\u00a0flavor (#5683,\u00a0@MarkYHZhang)\n[Artifacts] Fix\u00a0SqlAlchemyStore.log_batch\u00a0implementation to make it log data in batches (#5460,\u00a0@erensahin)\nFor a comprehensive list of changes, see the release change log, and check out the latest documentation on mlflow.org."
    },
    {
        "Question_title":"No module named pandas when \" mlflow run\"",
        "Question_created_time":"2018-06-19T10:40:55",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/QnASq7ITAoI",
        "Question_comment_count":1,
        "Question_view_count":59,
        "Question_body":"Hi all,\n\u00a0\nI have pandas 0.22.0 installed in ubuntu16.04, it successfully run\u00a0python example\/tutorial\/train.py:\npython example\/tutorial\/train.py\u00a0\nElasticnet model (alpha=0.500000, l1_ratio=0.500000):\n\u00a0 RMSE: 0.82224284976\n\u00a0 MAE: 0.627876141016\n\u00a0 R2: 0.126787219728\n\n\nbut failed as below:\n\u00a0mlflow run example\/tutorial -P alpha=0.5 --no-conda\n\n=== Fetching project from example\/tutorial ===\n=== Work directory for this run: example\/tutorial ===\n=== Created directory \/tmp\/tmpigdg385u for downloading remote URIs passed to arguments of type 'path' ===\n=== Running command: python train.py 0.5 0.1 ===\nTraceback (most recent call last):\n\u00a0 File \"train.py\", line 9, in <module>\n\u00a0 \u00a0 import pandas as pd\nImportError: No module named pandas\n=== Run failed ===\n\n\n\n\ndouble checked that pandas installed:\n$ python\nPython 3.5.1+ (default, Mar 30 2016, 22:46:26)\u00a0\n[GCC 5.3.1 20160330] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import pandas as pd\n>>>\u00a0\n\n\n\n\nAny advice or work around?\n\n\nThanks,\nForest"
    },
    {
        "Question_title":"Reproducible runs with Mlflow Projects Problem Authenticating databrics",
        "Question_created_time":"2019-09-30T06:22:25",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/GzWFU13yNoc",
        "Question_comment_count":1,
        "Question_view_count":11,
        "Question_body":"I am running the tutorial\u00a0https:\/\/docs.databricks.com\/applications\/mlflow\/projects.html#prerequisites\nto create an experiement in databrics and run an MLflow project from my local machine. I have setup the databrics cli authentication and MLFLOW_TRACKING_URI=databrics\n\n\nWhen I run the command\u00a0mlflow\u00a0run\u00a0examples\/sklearn_elasticnet_wine\/\u00a0-b\u00a0databricks\u00a0-c\u00a0clusterspec.json\u00a0--experiment-id\u00a03914263189079640\u00a0-P\u00a0alpha=0.5\n\n\nI get the following error\n2019\/09\/30\u00a015:15:36\u00a0ERROR\u00a0mlflow.utils.rest_utils:\u00a0API\u00a0request\u00a0to\u00a0https:\/\/westeurope.azuredatabricks.net\/?o=7680777384243007\/api\/2.0\/mlflow\/runs\/create\u00a0failed\u00a0with\u00a0code\u00a0500\u00a0!=\u00a0200,\u00a0retrying\u00a0up\u00a0to\u00a02\u00a0more\u00a0times.\u00a0API\u00a0response\u00a0body:\u00a0<html>\n<head>\n<meta\u00a0http-equiv=\"Content-Type\"\u00a0content=\"text\/html;charset=ISO-8859-1\"\/>\n<title>Error\u00a0500\u00a0<\/title>\n<\/head>\n<body>\n<h2>HTTP\u00a0ERROR:\u00a0500<\/h2>\n<p>Problem\u00a0accessing\u00a0\/login.html.\u00a0Reason:\n<pre>\u00a0\u00a0\u00a0\u00a0java.lang.NumberFormatException:\u00a0For\u00a0input\u00a0string:\u00a0&quot;7680777384243007\/api\/2.0\/mlflow\/runs\/create&quot;<\/pre><\/p>\n<hr\u00a0\/>\n<\/body>\n<\/html>\n\n\n2019\/09\/30\u00a015:15:40\u00a0ERROR\u00a0mlflow.utils.rest_utils:\u00a0API\u00a0request\u00a0to\u00a0https:\/\/westeurope.azuredatabricks.net\/?o=7680777384243007\/api\/2.0\/mlflow\/runs\/create\u00a0failed\u00a0with\u00a0code\u00a0500\u00a0!=\u00a0200,\u00a0retrying\u00a0up\u00a0to\u00a01\u00a0more\u00a0times.\u00a0API\u00a0response\u00a0body:\u00a0<html>\n<head>\n<meta\u00a0http-equiv=\"Content-Type\"\u00a0content=\"text\/html;charset=ISO-8859-1\"\/>\n<title>Error\u00a0500\u00a0<\/title>\n<\/head>\n<body>\n<h2>HTTP\u00a0ERROR:\u00a0500<\/h2>\n<p>Problem\u00a0accessing\u00a0\/login.html.\u00a0Reason:\n<pre>\u00a0\u00a0\u00a0\u00a0java.lang.NumberFormatException:\u00a0For\u00a0input\u00a0string:\u00a0&quot;7680777384243007\/api\/2.0\/mlflow\/runs\/create&quot;<\/pre><\/p>\n<hr\u00a0\/>\n<\/body>\n<\/html>\n\n\n2019\/09\/30\u00a015:15:44\u00a0ERROR\u00a0mlflow.utils.rest_utils:\u00a0API\u00a0request\u00a0to\u00a0https:\/\/westeurope.azuredatabricks.net\/?o=7680777384243007\/api\/2.0\/mlflow\/runs\/create\u00a0failed\u00a0with\u00a0code\u00a0500\u00a0!=\u00a0200,\u00a0retrying\u00a0up\u00a0to\u00a00\u00a0more\u00a0times.\u00a0API\u00a0response\u00a0body:\u00a0<html>\n<head>\n<meta\u00a0http-equiv=\"Content-Type\"\u00a0content=\"text\/html;charset=ISO-8859-1\"\/>\n<title>Error\u00a0500\u00a0<\/title>\n<\/head>\n<body>\n<h2>HTTP\u00a0ERROR:\u00a0500<\/h2>\n<p>Problem\u00a0accessing\u00a0\/login.html.\u00a0Reason:\n<pre>\u00a0\u00a0\u00a0\u00a0java.lang.NumberFormatException:\u00a0For\u00a0input\u00a0string:\u00a0&quot;7680777384243007\/api\/2.0\/mlflow\/runs\/create&quot;<\/pre><\/p>\n<hr\u00a0\/>\n<\/body>\n<\/html>\n\n\nTraceback\u00a0(most\u00a0recent\u00a0call\u00a0last):\n\u00a0\u00a0File\u00a0\"\/root\/mlflow\/new-venv\/bin\/mlflow\",\u00a0line\u00a010,\u00a0in\u00a0<module>\n\u00a0\u00a0\u00a0\u00a0sys.exit(cli())\n\u00a0\u00a0File\u00a0\"\/root\/mlflow\/new-venv\/lib\/python3.5\/site-packages\/click\/core.py\",\u00a0line\u00a0764,\u00a0in\u00a0__call__\n\u00a0\u00a0\u00a0\u00a0return\u00a0self.main(*args,\u00a0**kwargs)\n\u00a0\u00a0File\u00a0\"\/root\/mlflow\/new-venv\/lib\/python3.5\/site-packages\/click\/core.py\",\u00a0line\u00a0717,\u00a0in\u00a0main\n\u00a0\u00a0\u00a0\u00a0rv\u00a0=\u00a0self.invoke(ctx)\n\u00a0\u00a0File\u00a0\"\/root\/mlflow\/new-venv\/lib\/python3.5\/site-packages\/click\/core.py\",\u00a0line\u00a01137,\u00a0in\u00a0invoke\n\u00a0\u00a0\u00a0\u00a0return\u00a0_process_result(sub_ctx.command.invoke(sub_ctx))\n\u00a0\u00a0File\u00a0\"\/root\/mlflow\/new-venv\/lib\/python3.5\/site-packages\/click\/core.py\",\u00a0line\u00a0956,\u00a0in\u00a0invoke\n\u00a0\u00a0\u00a0\u00a0return\u00a0ctx.invoke(self.callback,\u00a0**ctx.params)\n\u00a0\u00a0File\u00a0\"\/root\/mlflow\/new-venv\/lib\/python3.5\/site-packages\/click\/core.py\",\u00a0line\u00a0555,\u00a0in\u00a0invoke\n\u00a0\u00a0\u00a0\u00a0return\u00a0callback(*args,\u00a0**kwargs)\n\u00a0\u00a0File\u00a0\"\/root\/mlflow\/new-venv\/lib\/python3.5\/site-packages\/mlflow\/cli.py\",\u00a0line\u00a0137,\u00a0in\u00a0run\n\u00a0\u00a0\u00a0\u00a0run_id=run_id\n\u00a0\u00a0File\u00a0\"\/root\/mlflow\/new-venv\/lib\/python3.5\/site-packages\/mlflow\/projects\/__init__.py\",\u00a0line\u00a0266,\u00a0in\u00a0run\n\u00a0\u00a0\u00a0\u00a0use_conda=use_conda,\u00a0storage_dir=storage_dir,\u00a0synchronous=synchronous,\u00a0run_id=run_id)\n\u00a0\u00a0File\u00a0\"\/root\/mlflow\/new-venv\/lib\/python3.5\/site-packages\/mlflow\/projects\/__init__.py\",\u00a0line\u00a094,\u00a0in\u00a0_run\n\u00a0\u00a0\u00a0\u00a0active_run\u00a0=\u00a0_create_run(uri,\u00a0experiment_id,\u00a0work_dir,\u00a0entry_point)\n\u00a0\u00a0File\u00a0\"\/root\/mlflow\/new-venv\/lib\/python3.5\/site-packages\/mlflow\/projects\/__init__.py\",\u00a0line\u00a0622,\u00a0in\u00a0_create_run\n\u00a0\u00a0\u00a0\u00a0active_run\u00a0=\u00a0tracking.MlflowClient().create_run(experiment_id=experiment_id,\u00a0tags=tags)\n\u00a0\u00a0File\u00a0\"\/root\/mlflow\/new-venv\/lib\/python3.5\/site-packages\/mlflow\/tracking\/client.py\",\u00a0line\u00a088,\u00a0in\u00a0create_run\n\u00a0\u00a0\u00a0\u00a0tags=[RunTag(key,\u00a0value)\u00a0for\u00a0(key,\u00a0value)\u00a0in\u00a0iteritems(tags)]\n\u00a0\u00a0File\u00a0\"\/root\/mlflow\/new-venv\/lib\/python3.5\/site-packages\/mlflow\/store\/rest_store.py\",\u00a0line\u00a0153,\u00a0in\u00a0create_run\n\u00a0\u00a0\u00a0\u00a0response_proto\u00a0=\u00a0self._call_endpoint(CreateRun,\u00a0req_body)\n\u00a0\u00a0File\u00a0\"\/root\/mlflow\/new-venv\/lib\/python3.5\/site-packages\/mlflow\/store\/rest_store.py\",\u00a0line\u00a062,\u00a0in\u00a0_call_endpoint\n\u00a0\u00a0\u00a0\u00a0host_creds=host_creds,\u00a0endpoint=endpoint,\u00a0method=method,\u00a0json=json_body)\n\u00a0\u00a0File\u00a0\"\/root\/mlflow\/new-venv\/lib\/python3.5\/site-packages\/mlflow\/utils\/rest_utils.py\",\u00a0line\u00a059,\u00a0in\u00a0http_request\n\u00a0\u00a0\u00a0\u00a0(url,\u00a0retries))\nmlflow.exceptions.MlflowException:\u00a0API\u00a0request\u00a0to\u00a0https:\/\/westeurope.azuredatabricks.net\/?o=7680777384243007\/api\/2.0\/mlflow\/runs\/create\u00a0failed\u00a0to\u00a0return\u00a0code\u00a0200\u00a0after\u00a03\u00a0tries"
    },
    {
        "Question_title":"MLflow 1.12.0 released!",
        "Question_created_time":"2020-11-11T19:28:46",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/txoBu2XyQO8",
        "Question_comment_count":0,
        "Question_view_count":10,
        "Question_body":"Hi all,\n\n\nIn addition to bug and documentation fixes,\u00a0MLflow 1.12.0\u00a0includes several major features and improvements, in particular a number of improvements to MLflow\u2019s Pytorch integrations and autologging:\n\nPyTorch:\nmlflow.pytorch.log_model,\u00a0mlflow.pytorch.load_model\u00a0now support logging\/loading TorchScript models (#3557,\u00a0@shrinath-suresh)\nmlflow.pytorch.log_model\u00a0supports passing\u00a0requirements_file\u00a0&\u00a0extra_files\u00a0arguments to log additional artifacts along with a model (#3436,\u00a0@shrinath-suresh)\nAutologging:\nAdd universal\u00a0mlflow.autolog\u00a0which enables autologging for all supported integrations (#3561,\u00a0#3590,\u00a0@andrewnitu)\nAdd\u00a0mlflow.pytorch.autolog\u00a0API for automatic logging of metrics, params, and models from Pytorch Lightning training (#3601,\u00a0@shrinath-suresh,\u00a0#3636,\u00a0@karthik-77). This API is also enabled by\u00a0mlflow.autolog.\nScikit-learn, XGBoost, and LightGBM autologging now support logging model signatures and input examples (#3386,\u00a0#3403,\u00a0#3449,\u00a0@andrewnitu)\nmlflow.sklearn.autolog\u00a0now supports logging metrics (e.g. accuracy) and plots (e.g. confusion matrix heat map) (#3423,\u00a0#3327,\u00a0@willzhan-db,\u00a0@harupy)\nFor a comprehensive list of changes, see the\u00a0release change log, and check out the latest documentation on\u00a0mlflow.org."
    },
    {
        "Question_title":"MLflow 2.4.0 release!",
        "Question_created_time":"2023-06-06T20:54:38",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/_DA9BBEZzCU",
        "Question_comment_count":0,
        "Question_view_count":6,
        "Question_body":"We are happy to announce the availability of MLflow 2.4.0!\n\nMLflow 2.4.0 includes several major features and improvements\u00a0\n\n\nFeatures:\n[Tracking] Introduce dataset tracking APIs: ``mlflow.data`` and ``mlflow.log_input()`` (#8186, @prithvikannan)\n[Tracking] Add ``mlflow.log_table()`` and ``mlflow.load_table()`` APIs for logging evaluation tables (#8523, #8467, @sunishsheth2009)\n[Tracking] Introduce ``mlflow.get_parent_run()`` fluent API (#8493, @annzhang-db)\n[Tracking \/ Model Registry] Re-introduce faster artifact downloads on Databricks (#8352, @dbczumar; #8561, @harupy)\n[UI] Add dataset tracking information to MLflow Tracking UI (#8602, @prithvikannan, @hubertzub-db)\n[UI] Introduce Artifact View for comparing inputs, outputs, and metadata across models (#8602, @hubertzub-db)\n[Models] Extend ``mlflow.evaluate()`` to support LLM tasks (#8484, @harupy)\n[Models] Support logging subclasses of ``Chain`` and ``LLMChain`` in ``mlflow.langchain`` flavor (#8453, @liangz1)\n[Models] Add support for LangChain Agents to the ``mlflow.langchain`` flavor (#8297, @sunishsheth2009)\n[Models] Add a ``mlflow.sentence_transformers`` flavor for SentenceTransformers (#8479, @BenWilson2; #8547, @Loquats)\n[Models] Add support for multi-GPU inference and efficient weight loading for ``mlflow.transformers`` flavor (#8448, @ankit-db)\n[Models] Support the ``max_shard_size`` parameter in the ``mlflow.transformers`` flavor (#8567, @wenfeiy-db)\n[Models] Add support for audio transcription pipelines in the ``mlflow.transformers`` flavor (#8464, @BenWilson2)\n[Models] Add support for audio classification to ``mlflow.transformers`` flavor (#8492, @BenWilson2)\n[Models] Add support for URI inputs in audio models logged with the ``mlflow.transformers`` flavor (#8495, @BenWilson2)\n[Models] Add support for returning classifier scores in ``mlflow.transformers`` pyfunc outputs (#8512, @BenWilson2)\n[Models] Support optional inputs in model signatures (#8438, @Apurva Koti)\n[Models] Introduce an ``mlflow.models.set_signature()`` API to set the signature of a logged model (#8476, @jerrylian-db)\n[Models] Persist ONNX Runtime InferenceSession options when logging a model with ``mlflow.onnx.log_model()`` (#8433, @leqiao-1)\n\n\nBug fixes:\u00a0\n[Tracking] Terminate Spark callback server when Spark Autologging is disabled or Spark Session is shut down (#8508, @WeichenXu123)\n[Tracking] Fix compatibility of ``mlflow server`` with ``Flask<2.0`` (#8463, @kevingreer)\n[Models] Convert ``mlflow.transformers`` pyfunc scalar string output to list of strings during batch inference (#8546, @BenWilson2)\n[Models] Fix a bug causing outdated pyenv versions to be installed by ``mlflow models build-docker`` (#8488, @Hellzed)\n[Model Registry] Remove aliases from storage when a Model Version is deleted (#8459, @arpitjasa-db)\n\nDocumentation updates:\u00a0\n[Docs] Publish a new MLOps Quickstart for model selection and deployment (#8462, @lobrien)\n[Docs] Add MLflavors library to Community Model Flavors documentation (#8420, @benjaminbluhm)\n[Docs] Add documentation for Registered Model Aliases (#8445, @arpitjasa-db)\n[Docs] Fix errors in documented ``mlflow models`` CLI command examples (#8480, @vijethmoudgalya)\n\nFor a comprehensive list of changes, see the release change log, and check out the latest documentation on mlflow.org."
    },
    {
        "Question_title":"Mlflow Model Stage Transition Tracking",
        "Question_created_time":"2022-12-19T06:59:58",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/JZFuySSQzL0",
        "Question_comment_count":0,
        "Question_view_count":13,
        "Question_body":"Hello team,\nI am using Mlflow 1.17.0. Mlflow has the following model stages -\u00a0\nNone, Production, Staging, Archived.\nIn my application, I perform the following two transitions -\u00a0\n1. Staging to Archived\n2. Production to Archived\n\nWhen I am reading past Archived model version, I want to filter the model based on their transition. I want to select the one which went into the Archived stage from Production stage. Is there any existing way or workaround to achieve that?\n\nRegards,\nDeepak Khandelwal"
    },
    {
        "Question_title":"Bay Area MLflow Meetup @ Databricks, San Francisco",
        "Question_created_time":"2019-11-20T17:40:17",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/HFC-t4OCzL8",
        "Question_comment_count":0,
        "Question_view_count":6,
        "Question_body":"Hello Everyone,\n\n\nWe hosting\u00a0a Bay Area MLflow Meetup with talks from Microsoft, Google, and Databricks on machine\u00a0learning, model management, and model data analytics\/validation. if you\u00a0are interested and live in the San Francisco Bay Area, please do join us for an evening of technical talks.\n\n\nRSVP here:\u00a0https:\/\/www.meetup.com\/Bay-Area-MLflow\/events\/266614106\/\n\n\nSee you all there!\n\n\n\n\n--\u00a0\n\n\nThe Best Ideas are Simple\n\nJules S. Damji\n\nApache Spark Developer & Community Advocate\n\nDatabricks, Inc.\n\nju...@databricks.com\n\n(510) 304-7686"
    },
    {
        "Question_title":"Feedback Welcome: dropping Python 2 support in MLflow 1.8.0",
        "Question_created_time":"2020-03-01T19:57:27",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/fMRrlEdZHos",
        "Question_comment_count":1,
        "Question_view_count":10,
        "Question_body":"Hi all,\n\nThis github issue\u00a0contains a proposal for dropping Python 2 support in MLflow 1.8.0, with a target release date of end-of-March, 2020.\n\n\nThis move will help reduce MLflow's ongoing maintenance burden, and we believe it makes sense given that Python 2 is EOL & many other ML libraries (pandas, numpy, sklearn, tensorflow) have already dropped support.\n\n\nPlease review the issue & leave questions or comments - barring major concerns, we'll publish a formal announcement the week of March 8 - thanks!"
    },
    {
        "Question_title":"Deploy a Shap explainer model with mlflow",
        "Question_created_time":"2019-10-09T02:55:59",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/d6FOZhHqTOg",
        "Question_comment_count":1,
        "Question_view_count":10,
        "Question_body":"I have a shap explainer model and I want to deploy it using mlflow to azure AKS how can I do that. The model is available in model.pk file.\n\n\nimport shap\nX_train_summary = shap.kmeans(X_train,5)\nk_explainer = shap.KernelExplainer(model_bag_clf.predict_proba, X_train_summary)\nk_shap_values = k_explainer.shap_values(data_for_prediction)"
    },
    {
        "Question_title":"Website section \"organizations using MLflow\"",
        "Question_created_time":"2020-10-30T05:39:40",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/AL3eITG_MP8",
        "Question_comment_count":1,
        "Question_view_count":25,
        "Question_body":"Hi,\n\n\nI am from https:\/\/mlcertific.com which provides the certification on machine learning\u00a0 we are using mlflow in our organisation and want to contribute to it. Please add our organization\u00a0in the list\u00a0 .\n\n\nThanks,\nhttps:\/\/mlcertific.com\/"
    },
    {
        "Question_title":"Load any model.pkl file into mlflow format",
        "Question_created_time":"2019-10-10T06:46:22",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/fgEmXcVn6Kg",
        "Question_comment_count":1,
        "Question_view_count":30,
        "Question_body":"I have some models pre trained that I want to deploy using mlflow. My models come from different libraries scikit-learn, boostedTrees, XGBoost etc. I have model.pkl files for these models and I want to load these models and write a wrapper that will save my model in Mflow format. My question is how can I load any model saved in .pkl file format and save it in mlflow format??"
    },
    {
        "Question_title":"How to either memorize column selection, or use sql to query mlflow?",
        "Question_created_time":"2020-11-13T20:48:50",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/ZOzitFyJHaA",
        "Question_comment_count":1,
        "Question_view_count":9,
        "Question_body":"MLFlow looks super nice :)\n\n\nI have a lot of parameters and metrics (like dozens of each), and they won't all fit on the main mlflow page, that shows the list of experiments. I'd like to only show a subset. Now I can do this by clicking on 'columns' and choosing them, but every time I refresh the page or similar, I have to re-select the columns, which takes ~minutes each time.\n\n\nI'd like to be able to do one of the following things ideally:\n1. somehow save, memorize, persist, the choice of columns. Happy to use a bookmarklet for this, though I'm not clear how to write one, or\n2. have a sql interface for this page, so in the sql i will choose the values\/columns I want to display. i can then just copy\/paste the sql to a plain-text file somewhere, and just paste it back in after loading the page.\n\n\nIs there something I need to change to my workflow so that I don't face this issue with having to reselect the columns? Alternatively, is there some way to achieve either of the options 1 or 2 above? Or is there some way for me to achieve my high-level goal of only showing specific columns, and choosing those relatively quickly (currently takes minutes, because have to open columns, unslelect everything, then scroll down the lloonnng list of paramters and metrics).\n\n\nHugh"
    },
    {
        "Question_title":"Failed to parse run field: Failed to parse info field: Message type \"mlflow.RunInfo\" has no field na",
        "Question_created_time":"2019-05-20T07:33:48",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/Rz0xIeCol-8",
        "Question_comment_count":0,
        "Question_view_count":6,
        "Question_body":"Hello ,\u00a0\n\n\nEnvironment information :\n\n\nmlflow, version 0.9.1\nPython 3.6.7\nconda 4.6.8\n\n\n\n\nStarted mllfow tracking server using :\u00a0\n\n\nmlflow server --backend-store-uri mysql:\/\/root:password@localhost:3306\/mlflow_tracker --default-artifact-root \/home\/ubuntu\/mlflow_bucket --host 0.0.0.0\n\n\n\n\n\nTest script #\n\n\nimport os\nimport mlflow\nfrom mlflow import log_metric, log_param, log_artifact\n\n\nif __name__ == \"__main__\":\n\u00a0 \u00a0 # Log a parameter (key-value pair\n\u00a0 \u00a0 mlflow.set_tracking_uri(\"http:\/\/localhost:5000\");\n\u00a0 \u00a0 log_param(\"param1\", 5)\n\n\n\u00a0 \u00a0 # Log a metric; metrics can be updated throughout the run\n\u00a0 \u00a0 log_metric(\"foo\", 1)\n\u00a0 \u00a0 log_metric(\"foo\", 2)\n\u00a0 \u00a0 log_metric(\"foo\", 3)\n\n\n\u00a0 \u00a0 # Log an artifact (output file)\n\u00a0 \u00a0 with open(\"output.txt\", \"w\") as f:\n\u00a0 \u00a0 \u00a0 \u00a0 f.write(\"Hello world!\")\n\u00a0 \u00a0 log_artifact(\"output.txt\")\n\n\nNow trying to run above script as :\u00a0 \u00a0python test.py\n\n\n\n\nunfortunately i am getting bellow error :\u00a0\n\n\n\n\nTraceback (most recent call last):\n\u00a0 File \"\/opt\/conda\/lib\/python3.6\/site-packages\/google\/protobuf\/json_format.py\", line 507, in _ConvertFieldValuePair\n\u00a0 \u00a0 [f.json_name for f in message_descriptor.fields]))\ngoogle.protobuf.json_format.ParseError: Message type \"mlflow.RunInfo\" has no field named \"lifecycle_stage\".\n\u00a0Available Fields(except extensions): ['runUuid', 'experimentId', 'name', 'sourceType', 'sourceName', 'userId', 'status', 'startTime', 'endTime', 'sourceVersion', 'entryPointName', 'tags', 'artifactUri']\n\n\nDuring handling of the above exception, another exception occurred:\n\n\nTraceback (most recent call last):\n\u00a0 File \"\/opt\/conda\/lib\/python3.6\/site-packages\/google\/protobuf\/json_format.py\", line 565, in _ConvertFieldValuePair\n\u00a0 \u00a0 self.ConvertMessage(value, sub_message)\n\u00a0 File \"\/opt\/conda\/lib\/python3.6\/site-packages\/google\/protobuf\/json_format.py\", line 470, in ConvertMessage\n\u00a0 \u00a0 self._ConvertFieldValuePair(value, message)\n\u00a0 File \"\/opt\/conda\/lib\/python3.6\/site-packages\/google\/protobuf\/json_format.py\", line 572, in _ConvertFieldValuePair\n\u00a0 \u00a0 raise ParseError(str(e))\ngoogle.protobuf.json_format.ParseError: Message type \"mlflow.RunInfo\" has no field named \"lifecycle_stage\".\n\u00a0Available Fields(except extensions): ['runUuid', 'experimentId', 'name', 'sourceType', 'sourceName', 'userId', 'status', 'startTime', 'endTime', 'sourceVersion', 'entryPointName', 'tags', 'artifactUri']\n\n\nDuring handling of the above exception, another exception occurred:\n\n\nTraceback (most recent call last):\n\u00a0 File \"\/opt\/conda\/lib\/python3.6\/site-packages\/google\/protobuf\/json_format.py\", line 565, in _ConvertFieldValuePair\n\u00a0 \u00a0 self.ConvertMessage(value, sub_message)\n\u00a0 File \"\/opt\/conda\/lib\/python3.6\/site-packages\/google\/protobuf\/json_format.py\", line 470, in ConvertMessage\n\u00a0 \u00a0 self._ConvertFieldValuePair(value, message)\n\u00a0 File \"\/opt\/conda\/lib\/python3.6\/site-packages\/google\/protobuf\/json_format.py\", line 570, in _ConvertFieldValuePair\n\u00a0 \u00a0 raise ParseError('Failed to parse {0} field: {1}'.format(name, e))\ngoogle.protobuf.json_format.ParseError: Failed to parse info field: Message type \"mlflow.RunInfo\" has no field named \"lifecycle_stage\".\n\u00a0Available Fields(except extensions): ['runUuid', 'experimentId', 'name', 'sourceType', 'sourceName', 'userId', 'status', 'startTime', 'endTime', 'sourceVersion', 'entryPointName', 'tags', 'artifactUri']\n\n\nDuring handling of the above exception, another exception occurred:\n\n\nTraceback (most recent call last):\n\u00a0 File \"test.py\", line 8, in <module>\n\u00a0 \u00a0 log_param(\"param1\", 5)\n\u00a0 File \"\/home\/ubuntu\/.local\/lib\/python3.6\/site-packages\/mlflow\/tracking\/__init__.py\", line 341, in log_param\n\u00a0 \u00a0 _get_or_start_run().log_param(Param(key, str(value)))\n\u00a0 File \"\/home\/ubuntu\/.local\/lib\/python3.6\/site-packages\/mlflow\/tracking\/__init__.py\", line 314, in _get_or_start_run\n\u00a0 \u00a0 return start_run()\n\u00a0 File \"\/home\/ubuntu\/.local\/lib\/python3.6\/site-packages\/mlflow\/tracking\/__init__.py\", line 306, in start_run\n\u00a0 \u00a0 source_type=source_type or _get_source_type())\n\u00a0 File \"\/home\/ubuntu\/.local\/lib\/python3.6\/site-packages\/mlflow\/tracking\/__init__.py\", line 243, in _create_run\n\u00a0 \u00a0 source_version=source_version, tags=[])\n\u00a0 File \"\/home\/ubuntu\/.local\/lib\/python3.6\/site-packages\/mlflow\/store\/rest_store.py\", line 152, in create_run\n\u00a0 \u00a0 response_proto = self._call_endpoint(CreateRun, req_body)\n\u00a0 File \"\/home\/ubuntu\/.local\/lib\/python3.6\/site-packages\/mlflow\/store\/rest_store.py\", line 83, in _call_endpoint\n\u00a0 \u00a0 ParseDict(js_dict=js_dict, message=response_proto)\n\u00a0 File \"\/opt\/conda\/lib\/python3.6\/site-packages\/google\/protobuf\/json_format.py\", line 439, in ParseDict\n\u00a0 \u00a0 parser.ConvertMessage(js_dict, message)\n\u00a0 File \"\/opt\/conda\/lib\/python3.6\/site-packages\/google\/protobuf\/json_format.py\", line 470, in ConvertMessage\n\u00a0 \u00a0 self._ConvertFieldValuePair(value, message)\n\u00a0 File \"\/opt\/conda\/lib\/python3.6\/site-packages\/google\/protobuf\/json_format.py\", line 570, in _ConvertFieldValuePair\n\u00a0 \u00a0 raise ParseError('Failed to parse {0} field: {1}'.format(name, e))\ngoogle.protobuf.json_format.ParseError: Failed to parse run field: Failed to parse info field: Message type \"mlflow.RunInfo\" has no field named \"lifecycle_stage\".\n\u00a0Available Fields(except extensions): ['runUuid', 'experimentId', 'name', 'sourceType', 'sourceName', 'userId', 'status', 'startTime', 'endTime', 'sourceVersion', 'entryPointName', 'tags', 'artifactUri']\n\n\n\n\n\n\n\n\nAny thought ?\n\n\n\n\nThanks\u00a0\nAsraful"
    },
    {
        "Question_title":"Is there a specification document for server sizing?",
        "Question_created_time":"2018-06-27T03:39:26",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/f0hQ6k4w8dA",
        "Question_comment_count":2,
        "Question_view_count":42,
        "Question_body":"Hello,\n\n\nI'll give MLflow a try within my team: that'll be a few data scientists trying out some use cases to evaluate MLflow in our environment.\n\n\n\nI couldn't find a specification document for sizing servers for MLflow installation. Is there some kind of guideline that could tell me amount of CPU, RAM, etc. for the server on which MLflow runs? It's of course not very important in this early stage, but nevertheless I think having such a guideline would be good.\n\n\nCheers,\nEmre"
    },
    {
        "Question_title":"run projects using my HDP3 cluster",
        "Question_created_time":"2018-10-14T17:31:59",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/a6tRozzVEgc",
        "Question_comment_count":9,
        "Question_view_count":41,
        "Question_body":"In section \"Scalability and Big Data\" in https:\/\/mlflow.org\/docs\/latest\/concepts.html#scalability-and-big-data:\n\"An individual MLflow run can execute on a distributed cluster, for example, using Apache Spark.\"\n\n\n\nThen https:\/\/mlflow.org\/docs\/latest\/python_api\/mlflow.projects.html#mlflow-projects:\n\"cluster_spec \u2013 When mode is \u201cdatabricks\u201d, path to a JSON file containing a Databricks cluster specification to use when launching a run.\"\n\n\nI have a HDP3.0 cluster with spark 2.3.1 in our data center. How can I use my cluster for MLFlow? Does MLflow support running a project in my own cluster instead of a cluster in cloud providers (e.g. databrick, aws, azure)? Thanks for any hints."
    },
    {
        "Question_title":"Mlflow roadmap updated and posted!",
        "Question_created_time":"2022-06-21T14:06:05",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/fFSJ_TGKrb4",
        "Question_comment_count":0,
        "Question_view_count":58,
        "Question_body":"Hello MLflow community!\n\nLate last year we went through the process of identifying long-outstanding feature requests that we felt would bring real value to MLflow if they were implemented. After presenting this list of items, you, the community of MLflow users and developers, came out in force and implemented every single one of them.\n\u00a0\nThese new features that were built helped to create a more functional and robust MLOps tool ecosystem. On behalf of the wider MLflow community, we'd like to thank you for those incredible contributions.\n\u00a0\nBecause of the resounding success of the last roadmap, we wanted to open up a new roadmap with a broadened scope, continuing to focus on the features that the community has asked for most.\n\nThe roadmap's items can be found here.\u00a0\n\nThe features for this roadmap milestone are broader and some are more enthusiastically ambitious than our last go-around. They range from simple implementations that are geared towards those who wish to get started with open source software contribution to complex design-required features that will dramatically improve the scalability and production-capable deployment of MLflow.\n\nWe are incredibly excited to see the implementations that you're going to come up with and look forward to collaborating with you to help build a more robust MLOps tool that everyone can freely use to simplify and enhance their ML development experience.\n\nSome noteworthy items on this roadmap are:\n- Adding tag-based search functionality\n- Support an 'or' search operator\n- Container images for MLflow servers\n- Swagger docs (OpenAPI standards) for MLflow APIs\n- Support for custom container images in serving\n- Support NoSQL as a backend for MLflow Tracking\n- An overhaul to metrics and parameters displays in run comparison UI\n- End-to-end getting started guides\n\nWe may add a few items to this list over the next few months if we feel that there are significant new features that we want to prioritize getting merged. Some tasks may be taken on by maintainers if there are no community volunteers willing to work on them.\n\nFor interested first-time contributors, please read through the contributing guide. If you're interested in getting an MLflow development environment setup fairly quickly (and painlessly), see the development environment setup script guide.\n\n\n\nWe're looking forward to collaborating!"
    },
    {
        "Question_title":"MLflow 2.3.1 released!",
        "Question_created_time":"2023-04-28T05:45:48",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/zW5nQWvm8nM",
        "Question_comment_count":0,
        "Question_view_count":11,
        "Question_body":"Hi all,\n\n\nWe are happy to announce the availability of MLflow 2.3.1!\n\n\n\nMLflow 2.3.1 is a patch release containing bug fixes and a security patch for\u00a0GHSA-83fm-w79m-64r5.\u00a0If you are using\u00a0mlflow server\u00a0or\u00a0mlflow ui, we recommend upgrading to MLflow 2.3.1 as soon as possible.\n\n\n\nSecurity patches:\n\n[Security] Fix critical LFI attack vulnerability by disabling the ability to provide relative paths in registered model sources (#8281,\u00a0@BenWilson2)\n\n\nBug fixes:\n\n[Tracking] Fix an issue causing file and model uploads to hang on Databricks (#8348,\u00a0@harupy)\n[Tracking \/ Model Registry] Fix an issue causing file and model downloads to hang on Databricks (#8350,\u00a0@dbczumar)\n[Scoring] Fix regression in schema enforcement for model serving when using the\u00a0inputs\u00a0format for inference (#8326,\u00a0@BenWilson2)\n[Model Registry] Fix regression in model naming parsing where special characters were not accepted in model names (#8322,\u00a0@arpitjasa-db)\n[Recipes] Fix card rendering with the pandas profiler to handle columns containing all null values (#8263,\u00a0@sunishsheth2009)\n\n\n\n\nFor a comprehensive list of changes, see the\u00a0release change log, and check out the latest documentation on\u00a0mlflow.org."
    },
    {
        "Question_title":"Dropping Python 3.5 support in the upcoming release (1.14.0)",
        "Question_created_time":"2021-01-20T20:52:35",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/po594D8-90g",
        "Question_comment_count":1,
        "Question_view_count":10,
        "Question_body":"Hi all,\n\n\nWe're planning to drop Python 3.5 support in the upcoming release (1.14.0):\nhttps:\/\/github.com\/mlflow\/mlflow\/issues\/3984\n\n\nPlease let us know if you have any issues with this plan.\n\n\n\nBest regards,\nHarutaka"
    },
    {
        "Question_title":"MLflow project error",
        "Question_created_time":"2021-10-07T07:03:46",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/9yeEpSWsoFc",
        "Question_comment_count":0,
        "Question_view_count":26,
        "Question_body":"Hi Team, there is an error although all my tries, I could not resolve it. I also posted the problem in StackOverflow and our slack channel.\n\nThe description of the error:\n\u00a0\nI want to implement the MLFlow project on my own ML model. However, I am getting \"Could not find main among entry points\"\n\nThe full problem with source files published on StackOverflow.\n\nhttps:\/\/stackoverflow.com\/questions\/69479488\/hi-i-am-very-new-to-mlflow-and-want-to-implement-mlflow-project-on-my-own-ml-m\n\nAny comments are more than welcome.\nBest Regards,\nNihad Shukur"
    },
    {
        "Question_title":"Unable to load Spark model",
        "Question_created_time":"2019-11-28T22:34:37",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/IjZxr890xlY",
        "Question_comment_count":1,
        "Question_view_count":12,
        "Question_body":"Hi, I have saved my pyspark pipelines with mlflow. The pipelines includes several custom transformers.\u00a0\n\n\nWhen i tried to load the pipeline with\u00a0model=mlflow.spark.load_model(\"location of model on local\"), it is giving me the error as below:\n```AttributeError: module '__main__' has no attribute 'AgeCalc'``` and 'AgeCalc' is one of the name of my custom transformer.\u00a0\n\n\nAny idea how to fix this?"
    },
    {
        "Question_title":"MLflow 2.2.2 released!",
        "Question_created_time":"2023-03-14T00:58:24",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/TFMjnuoc-Hg",
        "Question_comment_count":0,
        "Question_view_count":9,
        "Question_body":"Hi all,\n\n\nWe are happy to announce the availability of\u00a0MLflow 2.2.2!\n\nMLflow 2.2.2 is a patch release containing the following bug fixes:\n\n[Model Registry] Allow\u00a0source\u00a0to be a local path within a run\u2019s artifact directory if a\u00a0run_id\u00a0is specified (#7993, @harupy)\n[Model Registry] Fix a bug where a windows UNC path is considered a local path (#7988, @WeichenXu123)\n[Model Registry] Disallow\u00a0name\u00a0to be a file path in\u00a0FileStore.get_registered_model\u00a0(#7965, @harupy)\n\nFor a comprehensive list of changes, see the\u00a0release change log, and check out the latest documentation on\u00a0mlflow.org."
    },
    {
        "Question_title":"MLFlow UI issue when running in docker",
        "Question_created_time":"2019-11-30T12:08:45",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/7cezJGzfnic",
        "Question_comment_count":1,
        "Question_view_count":993,
        "Question_body":"I installed mlflow and started the ui with no issues on my windows 10 machine in an anaconda python 3.7 environment and am able to access the UI via http:\/\/localhost:5000\nHowever, when doing the exact same thing within the anacanda3 docker container the UI doesn't appear to be rendering\/responding.\nMy docker run command includes the proper port and I am able to exec into the container, install mlflow and start the ui (>mlflow ui) without any errors.\n\n\ndocker run --name conda3 -d -t -v \/\/c\/\/develop:\/develop -p 5000:5000 continuumio\/anaconda3\\\n\nWhen I try to access\u00a0http:\/\/localhost:5000\u00a0(or\u00a0http:\/\/127.0.0.1:5000\/), the response in the browser is \"ERR_EMPTY_RESPONSE\".\nI tried to access the UI within the contain via lynx, to confirm that it is running, however, the response is just a warning that this site is javascript which can't be rendered in lynx.\n\nI also tried the above docker approach using python 3.6 and also utilizing the docker container I normally develop with but in both cases I still get \"ERR_EMPTY_RESPONSE\".\n\nI am pretty much stuck at this point so any suggestions will be appreciated. Thanks."
    },
    {
        "Question_title":"Can MLFlow track urls??",
        "Question_created_time":"2023-02-27T02:46:25",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/5Ec_fse22C4",
        "Question_comment_count":0,
        "Question_view_count":21,
        "Question_body":"I am very new to MLFlow. I have done the tutorial and then the simple example of mlflow.log_dict in https:\/\/mlflow.org\/docs\/latest\/python_api\/mlflow.html#mlflow.log_text\n\n\nWith that I could log the dictionary dictionary = {\"k\": \"v\"}\n\n\nI would like to be able to track something like dictionary = {\"k\": \"http:\/\/somesite.html\"} , log it and in mlflow ui be able to click on it and go to the url.\n\n\nIs this possible??"
    },
    {
        "Question_title":"Step by step instructions for running MLflow Projects in EKS",
        "Question_created_time":"2022-04-26T18:20:19",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/r-XDGcqb4Qg",
        "Question_comment_count":0,
        "Question_view_count":18,
        "Question_body":"Folks - as you might know, MLflow includes preliminary support for running MLflow Projects in kubernetes. if you are interested in doing so, specifically on EKS, I wrote a medium article with step by step instructions.\n\n\nhttps:\/\/medium.com\/infinstor\/run-mlflow-project-in-eks-b0906e04c273\n\n\n\nCheers!\nJagane"
    },
    {
        "Question_title":"MLflow 2.0.0rc0 release",
        "Question_created_time":"2022-11-01T01:00:53",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/khwIVANuAKI",
        "Question_comment_count":0,
        "Question_view_count":21,
        "Question_body":"We're happy to announce a release candidate for MLflow 2.0:\nhttps:\/\/github.com\/mlflow\/mlflow\/releases\/tag\/v2.0.0rc0\n\nInstallation:\n===================================\n# Make sure python version is >=3.8\npip install mlflow==2.0.0rc0\n===================================\n\n\nDocumentation:\nMLflow 2.0.0rc0 documentation\n\nPlease report any issues with the release candidate in the issue tracker."
    },
    {
        "Question_title":"mlruns and artifact cleanup",
        "Question_created_time":"2020-01-29T16:12:24",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/xVnEg6hfdi0",
        "Question_comment_count":3,
        "Question_view_count":23,
        "Question_body":"hi all. thanks for mlflow and the great info.\n\n\nim trying to clear-up some disk space on my tracking server. when i delete experiments in the ui, i notice the mlruns folder remains the same size. is there a standard way to clear out the artifacts for deleted experiments?\n\n\nthanks!\n\n\n-matt"
    },
    {
        "Question_title":"custom database for mlflow",
        "Question_created_time":"2020-10-19T15:30:27",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/5zHcAO36wXY",
        "Question_comment_count":0,
        "Question_view_count":20,
        "Question_body":"I believe I have heard you can configure mlflow to use your own custom db.\u00a0\u00a0 Any one have any info on that?\n\n\n\nDan"
    },
    {
        "Question_title":"MLFLOW project MLFLOW_TRACKING_URI to postgres in docker",
        "Question_created_time":"2019-07-01T17:51:46",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/HOstT6RINbA",
        "Question_comment_count":0,
        "Question_view_count":17,
        "Question_body":"I want to test MLFLOW projects running in docker container, I use examples\/docker from mlflow. My\u00a0 MLFLOW runs in docker container, backend store is in Postgres ( runs in its own docker container). I have started mlfow container and postgres container using docker-compose. I can connect to postgres using command:\n\npsql -p 5432 -d mlflow -U mlflow -h localhost\n\n\n\n\nHowever, when I am trying to run mlflow project (export MLFLOW_TRACKING_URI=postgresql:\/\/mlflow:mlflow@localhost\/mlflow)\n\n\u00a0 \u00a0\u00a0mlflow run . -P alpha=0.55\n\nI have an error message:\u00a0sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) could not connect to server: Connection refused\n\nIs the server running on host \"localhost\" (::1) and accepting\n\nTCP\/IP connections on port 5432?\n\ncould not connect to server: Connection refused\n\nIs the server running on host \"localhost\" (127.0.0.1) and accepting\n\nTCP\/IP connections on port 5432?"
    },
    {
        "Question_title":"Deploying a model in scale",
        "Question_created_time":"2018-08-09T10:02:33",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/-JLdZ6r7IdY",
        "Question_comment_count":2,
        "Question_view_count":169,
        "Question_body":"Hello. I am developing a system which uses predictions with stored ML model, like *.pkl from sklearn.\n\n\nI'd like to use mlflow as a prediction service server but still doubt about its scalability. AFAIU, mlflow is providing Rest API only with flask. Although it will work well in dev or test environments, but I can't sure that it can handle millions of requests per second, which is so common nowadays.\n\n\nIn short, I have following questions to the main developers:\nDo you have any plan to support other types of RPC call in the future? I found that you are using protobuf to generate requests\/responses. IMHO, it would be not so difficult to extend it to support gRPC on top of those definitions.\nIs there any plan to build a dedicated model service entity for scalability?\nThanks in advance. All kinds of opinions are welcome.\n\n\n\nBest,\nDongjin"
    },
    {
        "Question_title":"Add my organization in the website",
        "Question_created_time":"2023-03-03T10:59:31",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/G2PnvDoukhA",
        "Question_comment_count":1,
        "Question_view_count":8,
        "Question_body":"Hello, good afternoon. I would like to be able to add my company to the list of Organizations using and contributing to MLflow\u00a0\n\n\nBarbara\n\n\nThanks!"
    },
    {
        "Question_title":"Model Branching",
        "Question_created_time":"2021-05-17T11:42:20",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/W3FwEcd31VI",
        "Question_comment_count":1,
        "Question_view_count":16,
        "Question_body":"I am wondering if anyone here explored idea of tracking model branching in GIT branching sense.\n\n\n\n\nI.e.\u00a0 as model is been worked on and modified\/updated\/retrained it gets different versioning, but then someone decided to \"extend\" model to say adopt model for similar data.\u00a0 At this point we can \"branch\" model and keep versioning of each branch separate."
    },
    {
        "Question_title":"MLflow 1.0 Release Candidate Process",
        "Question_created_time":"2019-05-22T11:03:18",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/HIlqey_t2qU",
        "Question_comment_count":0,
        "Question_view_count":39,
        "Question_body":"We\u2019re excited to announce that we\u2019re moving towards MLflow 1.0, with a tentative release date of May 29. In addition to some exciting new features (dramatically improved metric visualizations, metric x coordinates, improved search functionality), MLflow 1.0 offers Python, Java, R, and REST API stability.\n\n\nTo that end, we\u2019ve published an RC of MLflow 1.0, which you can use to try out all the latest 1.0 features. We\u2019d love to get your feedback and fix any issues that arise before the 1.0 release. Please report issues at https:\/\/github.com\/mlflow\/mlflow\/issues.\n\n\nPlease see this document for instructions on how to try out the latest RC:\nhttps:\/\/docs.google.com\/document\/d\/1Hu1y73aR21uDPbuUTBlTfSN7e5tR-9txqk_VHlCnupk\/edit#\n\n\nThanks!"
    },
    {
        "Question_title":"MLFLow Deployment to Sagemaker",
        "Question_created_time":"2023-06-09T12:21:15",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/2AGqn78un5I",
        "Question_comment_count":0,
        "Question_view_count":8,
        "Question_body":"I am trying to deploy to sagemaker but the sagemaker fails to run the container.\n\n\nSteps:\n1.\u00a0mlflow sagemaker build-and-push-container --help\n\n\n2. Deploy to sagemaker\n\n\nCloudwatch logs from sagemaker\n\n\nTraceback (most recent call last): File \"<string>\", line 1, in <module> File \"\/usr\/local\/lib\/python3.8\/dist-packages\/mlflow\/models\/container\/__init__.py\", line 57, in _init _serve(env_manager) File \"\/usr\/local\/lib\/python3.8\/dist-packages\/mlflow\/models\/container\/__init__.py\", line 84, in _serve _serve_pyfunc(m, env_manager) File \"\/usr\/local\/lib\/python3.8\/dist-packages\/mlflow\/models\/container\/__init__.py\", line 156, in _serve_pyfunc _install_pyfunc_deps( File \"\/usr\/local\/lib\/python3.8\/dist-packages\/mlflow\/models\/container\/__init__.py\", line 120, in _install_pyfunc_deps env_activate_cmd = _get_or_create_virtualenv(model_path) File \"\/usr\/local\/lib\/python3.8\/dist-packages\/mlflow\/utils\/virtualenv.py\", line 364, in _get_or_create_virtualenv python_bin_path = _install_python( File \"\/usr\/local\/lib\/python3.8\/dist-packages\/mlflow\/utils\/virtualenv.py\", line 133, in _install_python _exec_cmd( File \"\/usr\/local\/lib\/python3.8\/dist-packages\/mlflow\/utils\/process.py\", line 117, in _exec_cmd raise ShellCommandException.from_completed_process(comp_process)\u00a0\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"\/usr\/local\/lib\/python3.8\/dist-packages\/mlflow\/models\/container\/__init__.py\", line 57, in _init\n    _serve(env_manager)\n  File \"\/usr\/local\/lib\/python3.8\/dist-packages\/mlflow\/models\/container\/__init__.py\", line 84, in _serve\n    _serve_pyfunc(m, env_manager)\n  File \"\/usr\/local\/lib\/python3.8\/dist-packages\/mlflow\/models\/container\/__init__.py\", line 156, in _serve_pyfunc\n    _install_pyfunc_deps(\n  File \"\/usr\/local\/lib\/python3.8\/dist-packages\/mlflow\/models\/container\/__init__.py\", line 120, in _install_pyfunc_deps\n    env_activate_cmd = _get_or_create_virtualenv(model_path)\n  File \"\/usr\/local\/lib\/python3.8\/dist-packages\/mlflow\/utils\/virtualenv.py\", line 364, in _get_or_create_virtualenv\n    python_bin_path = _install_python(\n  File \"\/usr\/local\/lib\/python3.8\/dist-packages\/mlflow\/utils\/virtualenv.py\", line 133, in _install_python\n    _exec_cmd(\n  File \"\/usr\/local\/lib\/python3.8\/dist-packages\/mlflow\/utils\/process.py\", line 117, in _exec_cmd\n    raise ShellCommandException.from_completed_process(comp_process)"
    },
    {
        "Question_title":"benchmark issue",
        "Question_created_time":"2018-12-24T05:10:26",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/WZFtu_8SK_Q",
        "Question_comment_count":4,
        "Question_view_count":23,
        "Question_body":"https:\/\/databricks.com\/blog\/2018\/09\/13\/whats-new-in-mlflow-v0-6-0.html\n\nIn the above article, the team presented a comparison between sprak-ml and mlflow time consumption, I am\ncurious about those data.\nIs there anyone knows more about the machine information? Such us memory, CPU ..."
    },
    {
        "Question_title":"MLflow 1.8.0 Released!",
        "Question_created_time":"2020-04-21T21:19:18",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/RPogYWN4uo4",
        "Question_comment_count":0,
        "Question_view_count":21,
        "Question_body":"Hey Folks,\n\n\nWe are happy to announce the availability of MLflow 1.8.0! Some highlights from this release:\n\n\n* Added `mlflow.azureml.deploy` API for deploying MLflow models to AzureML (#2375 @csteegz, #2711, @akshaya-a)\n* Added `mlflow.spacy` module with support for logging and loading spaCy models (#2242, @arocketman)\n* Added ability to compare source runs associated with model versions from the registered model UI (#2537, @jzheng)\n* MLflow metrics UI plots now scale to rendering thousands of points using scattergl (#2447, @mjlbach)\n\n\nFor a comprehensive list of changes, please see the release change log, and check out the latest documentation on mlflow.org.\n\nThanks,\nArjun"
    },
    {
        "Question_title":"Evaluating MLFlow on Kubernetes",
        "Question_created_time":"2018-08-22T15:33:06",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/vx1uqw2GsFk",
        "Question_comment_count":1,
        "Question_view_count":420,
        "Question_body":"Hi,\n\n\nI meet Matei and Mani during spark summit. We are currently evaluating MLFlow on Kubernetes and had some questions about it.\u00a0\n\n\nScenario: We have MLFlow Tracking server deployed in Kubernetes we also have a Jupyter notebook to run MLFlow Training.\u00a0\n\n\nHowever, if we don't provide s3 credentials in Jupyter Notebook container it sends an error. Is it required for both Jupyter Notebook and MLFlow Tracking Server to have s3 credentials in the container?\u00a0\n\n\nApache Spark allows for us to specify an non s3 endpoint other than aws. That way we can use systems like Ceph to store our models. Is this something that will work for MLFlow.\u00a0\n\n\n\n\nThanks,\u00a0\n\nZak Hassan\n\nEngineer - Artificial Intelligence -\u00a0 Center Of Excellence, CTO Office\nhttp:\/\/radanalytics.io\/ - Machine Learning On OpenShift"
    },
    {
        "Question_title":"MLflow 1.14.0 released!",
        "Question_created_time":"2021-02-19T23:59:12",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/NXoNwcckiqs",
        "Question_comment_count":0,
        "Question_view_count":18,
        "Question_body":"We are happy to announce the availability of\u00a0MLflow 1.14.0!\n\nIn addition to bug and documentation fixes, MLflow 1.14.0 includes the following features and improvements:\n\nMLflow\u2019s model inference APIs (mlflow.pyfunc.predict), built-in model serving tools (mlflow models serve), and model signatures now support tensor inputs. In particular, MLflow now provides built-in support for scoring PyTorch, TensorFlow, Keras, ONNX, and Gluon models with tensor inputs. For more information, see https:\/\/mlflow.org\/docs\/latest\/models.html#deploy-mlflow-models (#3808, #3894, #4084, #4068 @wentinghu; #4041 @tomasatdatabricks, #4099, @arjundc-db)\nAdd new\u00a0mlflow.shap.log_explainer,\u00a0mlflow.shap.load_explainer\u00a0APIs for logging and loading\u00a0shap.Explainer\u00a0instances (#3989, @vivekchettiar)\nThe MLflow Python client is now available with a reduced dependency set via the\u00a0mlflow-skinny\u00a0PyPI package (#4049, @eedeleon)\nAdd new\u00a0RequestHeaderProvider\u00a0plugin interface for passing custom request headers with REST API requests made by the MLflow Python client (#4042, @jimmyxu-db)\nmlflow.keras.log_model\u00a0now saves models in the TensorFlow SavedModel format by default instead of the older Keras H5 format (#4043, @harupy)\nmlflow_log_model\u00a0now supports logging MLeap models in R (#3819, @yitao-li)\nAdd\u00a0mlflow.pytorch.log_state_dict,\u00a0mlflow.pytorch.load_state_dict\u00a0for logging and loading PyTorch state dicts (#3705, @shrinath-suresh)\nmlflow gc\u00a0can now garbage-collect artifacts stored in S3 (#3958, @sklingel)\n\nFor a comprehensive list of changes, see the\u00a0release change log, and check out the latest documentation on\u00a0mlflow.org."
    },
    {
        "Question_title":"security setup - username\/password experiment level",
        "Question_created_time":"2018-11-15T00:55:19",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/E9QW4HdS8a8",
        "Question_comment_count":4,
        "Question_view_count":4812,
        "Question_body":"Hi\n\n\nCurrently the way mlflow works is that we can set an experiment ID for a MLFLOW tracker server URL and call it using our training model code. We would like to see if we can add security to this - say setup username\/password and also assign users with permissions for certain experiments\/projects. Is it possible to do that?"
    },
    {
        "Question_title":"Model interdependency",
        "Question_created_time":"2022-02-20T02:44:31",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/hMw522YItIE",
        "Question_comment_count":0,
        "Question_view_count":16,
        "Question_body":"Hello,\n\n\nI have interdependent mlflow models where output from 1st is input to second model. How do I use mlflow to handle this?\n\n\nThank Rutu"
    },
    {
        "Question_title":"MLflow 2.2.1 released!",
        "Question_created_time":"2023-03-02T17:02:53",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/MP3fbrHjDEc",
        "Question_comment_count":0,
        "Question_view_count":3,
        "Question_body":"Hi all,\n\nWe are happy to announce the availability of\u00a0MLflow\u00a02.2.1!\n\n\n\nMLflow 2.2.1 is a patch release containing the following bug fixes:\n\n[Model Registry] Fix a bug that caused too many results to be requested by default when calling\u00a0MlflowClient.search_model_versions()\u00a0(#7935,\u00a0@dbczumar)\n\n\nFor more information see the\u00a0release\u00a0change log, and check out the latest documentation on\u00a0mlflow.org."
    },
    {
        "Question_title":"MLflow Lightweight Python Client",
        "Question_created_time":"2022-02-05T05:03:26",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/_QoyNVy60Bs",
        "Question_comment_count":0,
        "Question_view_count":84,
        "Question_body":"Dear MLflow users,\n\nWe actively use MLFlow at MTS as a part of our MLOps platform for experiment tracking and model registry.\n\nFurthermore, I\u2019m happy to say that we started to post on GitHub under Apache 2.0 license some parts of our inhouse development around MLFlow.\n\nLightweight python client for MLflow REST API:\n\nhttps:\/\/github.com\/MobileTeleSystems\/mlflow-rest-client\n\nMain features:\n\nMinimal dependencies\nAll REST API methods and params are exposed to user\nAll methods and classes are documented\n\nFeel free to contribute and\/or open issues on GitHub.\n\nP.S. It would be nice if you add our logo to the \u201cOrganizations using and contributing\u201d section. Website:\u00a0https:\/\/mts.ru\/\n\n\u00a0\n\nBest Regards,\n\nMax Bartenev, CTO\n\nMTS BigData department"
    },
    {
        "Question_title":"MLflow 1.25.1 released",
        "Question_created_time":"2022-04-13T13:06:51",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/SkE-AKXBQxE",
        "Question_comment_count":0,
        "Question_view_count":9,
        "Question_body":"MLflow 1.25.1 is a patch release containing the following bug fixes:\n\n\n[Models] Fix a `pyfunc` artifact overwrite bug when multiple artifacts are saved in sub-directories (#5657, @kyle-jarvis)\n[Scoring] Fix permissions issue for Spark workers accessing model artifacts from a temp directory created by the driver (#5684, @WeichenXu123)\n\nNote: Version 1.25.1 of the MLflow R package has not yet been released. It will be available on CRAN within the next week."
    },
    {
        "Question_title":"posting to managed mlflow (azure databricks) from remote",
        "Question_created_time":"2019-09-21T01:33:05",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/jFvYBFUTIAc",
        "Question_comment_count":2,
        "Question_view_count":7,
        "Question_body":"If we have mlflow via a managed mlflow instance such as Azure Databricks - can we track, post experiments from remote like my machine's Jupyter notebook instead of running the code in databricks workspace?"
    },
    {
        "Question_title":"Scaling and monitoring multiple experiments",
        "Question_created_time":"2018-11-29T23:17:38",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/akoCzxB_oz0",
        "Question_comment_count":1,
        "Question_view_count":23,
        "Question_body":"Hi,\n\n\nI am new to MLflow and I would like to ask a few questions. I am a beginner so please be patient :)\n\n\n1) Does MLflow allow scaling of ML experiments\/jobs on a multi-gpu server?\n2) Does MLflow allow monitoring of such ML experiments\/jobs (e.g. failures, \"livestream\" of ML experiment\/job stage, etc.)?\n\n\nPerhaps my questions are very dummy. Thank you for your understanding.\u00a0\n\n\nThanks,\nAlex"
    },
    {
        "Question_title":"Organizations using MLFlow and Integrations",
        "Question_created_time":"2021-05-23T17:57:57",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/j9vx2xoFfxA",
        "Question_comment_count":1,
        "Question_view_count":31,
        "Question_body":"Hello,\n\n\nAt Composable Analytics (https:\/\/composable.ai) we develop an end-to-end DataOps Platform that has direct integrations with MLFlow. Further, we are enabling our customers in using MLFlow as their in house ML platform.\n\n\nCan you please add Composable's logo in both Integrations and Organizations on the main site? Logo attached.\n\n\nBest,\nAndy"
    },
    {
        "Question_title":"Shared Deployments of MLFlow",
        "Question_created_time":"2019-09-25T12:20:37",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/mLqqkTBBel0",
        "Question_comment_count":1,
        "Question_view_count":13,
        "Question_body":"Good afternoon,\n\n\n\nAre there any resources available to centralize MLFlow to a dedicated server which can:\n\n\n1) Archive models\n\n2) Host MLFlow web UI\n3) Host deployed model REST API\n\n\n\nIdeally, each model could be secured by groups or individual users, and shared with other groups \/ users.\n\n\n\nDo any existing example deployments exist? I see Databricks appears to have a hosted version of MLFlow per this announcement: https:\/\/mlflow.org\/news\/2019\/09\/10\/MLflow-Community-Edition\/index.html\n\n\nThanks!\n\n\n-Rob"
    },
    {
        "Question_title":"Support for Oracle dialect for backend-store-uri",
        "Question_created_time":"2021-11-12T00:03:52",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/zB-1xLJ6IJk",
        "Question_comment_count":0,
        "Question_view_count":18,
        "Question_body":"Hello,\nDoes anyone knows any way for Oracle database as backend-store-uri\nCurrently, only mysql,\u00a0mssql,\u00a0sqlite, and\u00a0PostgreSQL are supported.\n\n\nRegards,\nNikhil"
    },
    {
        "Question_title":"MLflow 1.0 released!",
        "Question_created_time":"2019-06-06T13:30:16",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/4N9tJToclI0",
        "Question_comment_count":0,
        "Question_view_count":12,
        "Question_body":"MLflow 1.0 has been released! In addition to some exciting new features (much-improved metric visualizations, metric X coordinates, improved search functionality and HDFS support), MLflow 1.0 offers Python, Java, R, and REST API stability. Note that in order to stabilize the APIs, we had to make several breaking changes.\n\nSee the CHANGELOG for details about the new features and breaking changes, and see the blog post for some examples of these features in action!"
    },
    {
        "Question_title":"MLflow-Docker Artifacts Model Not Found",
        "Question_created_time":"2021-06-28T12:05:19",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/JFdrWyG9vIA",
        "Question_comment_count":0,
        "Question_view_count":36,
        "Question_body":"https:\/\/github.com\/mlflow\/mlflow\/issues\/4487\n\n\n\nHi, I have posted this issue in github, please help me to solve this issue"
    },
    {
        "Question_title":"Organizations using MLflow - Quantmetry",
        "Question_created_time":"2020-05-07T12:22:45",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/TyuB6dzhlKI",
        "Question_comment_count":0,
        "Question_view_count":37,
        "Question_body":"Hi everyone,\n\n\nat Quantmetry, our Data Scientists and Data engineers use MLflow to persist their models and performances. MLflow is a great tool for us, and this makes our work reproducible with an easy to use interface.\n\n\nWe would be glad to appear on your website as an organization using MLFlow.\n\n\nCheers,\n\n\nGr\u00e9goire Martinon,\nSenior Data Scientist"
    },
    {
        "Question_title":"mlflow system environment in windows",
        "Question_created_time":"2020-11-04T02:09:36",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/aGVwpa-0IC4",
        "Question_comment_count":0,
        "Question_view_count":13,
        "Question_body":"Hi,\n\n\nIs it possible to create and implement ml model using mlflow without conda installed in the system environment(python environment) ?\n\n\nThanks\nSafuvan"
    },
    {
        "Question_title":"Train and deploy H2O model using MLFlow spark",
        "Question_created_time":"2019-10-29T01:05:54",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/RJBzJjxPl0w",
        "Question_comment_count":1,
        "Question_view_count":10,
        "Question_body":"Hi,\n\n\nI want to train and deploy a h2o model using mlfow spark as mentioned in the diagram:\u00a0https:\/\/res.infoq.com\/presentations\/mlflow-databricks\/en\/slides\/sl21-1566324281761.jpg\nI am training the model using below link:\nhttps:\/\/docs.databricks.com\/_static\/notebooks\/h2o-sparkling-water-python.html\nThen after training when I try to deploy the model using mlflow spark, it throws an error \"MLFlow can only save descendants of pyspark.ml.Model which implement MLReadable and MLWritable\".\nCan anyone help and let me know what I am doing wrong."
    },
    {
        "Question_title":"mlflow ui is not running in windows 10",
        "Question_created_time":"2019-11-20T14:32:35",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/YMa_sVOspgw",
        "Question_comment_count":1,
        "Question_view_count":7,
        "Question_body":"MLFLOW UI is not running to any of my installed browser while I tried to run it through terminal.Please help with a solution."
    },
    {
        "Question_title":"Re: Facinf problems in Mlfow deployment on windows machine",
        "Question_created_time":"2019-09-19T12:37:45",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/C808pyYahAw",
        "Question_comment_count":0,
        "Question_view_count":4,
        "Question_body":"Hi Babar,\n\n\nCurrently only the tracking service has windows support. We would welcome contributions to our Windows support for project runs and model deployment!\n\n\nPaul\n\n\nOn Wed, Sep 18, 2019 at 11:38 PM babar ali <bac...@gmail.com> wrote:\n\nI am running mlflow on windows machine with python 3.5 and anaconda. MLflow run and models API is not working fine.\n\n--\nYou received this message because you are subscribed to the Google Groups \"mlflow-users\" group.\nTo unsubscribe from this group and stop receiving emails from it, send an email to mlflow-users...@googlegroups.com.\nTo view this discussion on the web visit https:\/\/groups.google.com\/d\/msgid\/mlflow-users\/5537248a-b6a9-47d0-b5a8-4e2b9644027b%40googlegroups.com."
    },
    {
        "Question_title":"Request to add \"Kolesa Group\" company to the list",
        "Question_created_time":"2022-09-18T05:23:15",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/2UItzA7mlz0",
        "Question_comment_count":0,
        "Question_view_count":21,
        "Question_body":"Hi everyone\nMy name is Khambar Dussaliyev, I am writing in regards to adding new company to the list of\n\nOrganizations using and contributing to MLflow. We, at Kolesa Group, are now restructuring our approaches for developing ML services and find MLFlow of great help.\nKolesa Group is a largest online classified for real estate and vehicles in Kazakhstan, with monthly active users around 12 mln on all platforms, which are accessible by:\n\n\n- kolesa.kz (vehicles classified)\n\n- krisha.kz (real estate classified)\n\n- market.kz (general classified)\n\n\n\nWe also hosting offline conference soon, Kolesa Conf where we will have speakers from\u00a0 Kazakhstan, Russia and other countries in the region (conference will be conducted in Russian language). At this conference, we plan to share our experience at using MLFlow and how we use it in our infrastructure (Web tab at the site)\n\n\nWe have also recently contributed to the source code (with great guidance from community), closing issue 6532. Since we are not using github for our infrastructure at the moment, I was free to do so from my personal account :)\n\n\nConsidering all this, we would be happy, if mlflow would put our company to the list :)\nWe have site with general information about company accessible here\n\n\n\nI am attaching suitable logos in archive to this email, please, feel free to contact me for any clarifications or objections"
    },
    {
        "Question_title":"MLFlow UI extensibility",
        "Question_created_time":"2021-12-22T05:12:02",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/ORiCle7j4NM",
        "Question_comment_count":3,
        "Question_view_count":62,
        "Question_body":"Hello everyone,\n\n\nso I recently chose mlflow as our current solution for logging long-term research results in our company and one significant pain point I encountered is the UI extensibility. I would love to be able to display whatever I want but even a small amount of flexibility\/customization would go a long way.\n\n\nIs this something currently on the roadmap?\n\n\nIf I were to fork mlflow and implement my own UI modules or even whole UI API module for extensibility:\nwould you be interested in a later pull request with such contribution to the project?\nif I wanted to get a feel for how difficult it would be to make this happen, could you point me to some relevant parts of the codebase which I should see first and start with?\nCheers,\nAdam"
    },
    {
        "Question_title":"MLFLOW project run from artifactory (s3)",
        "Question_created_time":"2019-06-28T09:47:07",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/CJQN4zxO7ZE",
        "Question_comment_count":0,
        "Question_view_count":14,
        "Question_body":"I am testing MLFLOW; MLFLOW runs in docker container, artifactory is in MINIO ( runs in its own docker container); backend store is in Postgres ( runs in its own docker container). I run my experiments in Jupiter notebook ( runs in its own docker container). After I run an experiment, I can see artifacts located in MINIO S3 bucket - MLModel, conda.yml and model.pkl files. How do I create a project and run it? I have to created MLProject file, do I create it locally and specify full path to the artifacts (s3 full path)?"
    },
    {
        "Question_title":"MLProject",
        "Question_created_time":"2019-11-14T06:29:23",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/wfNFPYbJo6M",
        "Question_comment_count":1,
        "Question_view_count":19,
        "Question_body":"The sample MLProject file copied below contains entry_points for running train.py and validate.py. Kindly let me know the mlflow run command for running the validate.py script.\n\n\u00a0\n\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 name: My Project\n\n\u00a0\n\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 conda_env: my_env.yaml\n\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 # Can have a docker_env instead of a conda_env, e.g.\n\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 # docker_env:\n\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 #\u00a0\u00a0\u00a0 image:\u00a0 mlflow-docker-example\n\n\u00a0\n\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 entry_points:\n\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0 main:\n\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 parameters:\n\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0 data_file: path\n\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0 regularization: {type: float, default: 0.1}\n\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 command: \"python train.py -r {regularization} {data_file}\"\n\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0 validate:\n\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 parameters:\n\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0 data_file: path\n\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 command: \"python validate.py {data_file}\"\n\n\u00a0\n\nRegards\n\nBinay"
    },
    {
        "Question_title":"purging deleted runs (from db and NFS artifacts store)",
        "Question_created_time":"2019-11-14T00:59:27",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/EtF0x3BuCR8",
        "Question_comment_count":1,
        "Question_view_count":10,
        "Question_body":"Before I write one, I wanted to see if anyone was aware of a script floating around that could be used to permanently remove deleted runs\/experients, both in terms of their records in the DB and any artifacts in the NFS store?"
    },
    {
        "Question_title":"[ANNOUNCEMENT] CFP for Data + AI Conference",
        "Question_created_time":"2021-02-05T14:55:07",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/SrwmTCHd4vw",
        "Question_comment_count":0,
        "Question_view_count":11,
        "Question_body":"MLflow users:\n\n\nWe accept CfP on MLflow for this conference: how you use it in production; use MLOps best practices; with popular ML frameworks for experiment tracking; integrations and extensions with MLflow; and the model registry\u00a0for discovering, sharing, and deploying models, etc.\u00a0\n\n\nShare your bright ideas with the larger data community on how MLflow helps you manage your model lifecycle.\n\n\nhttps:\/\/databricks.com\/dataaisummit\/north-america-2021\/call-for-presentations\n\n\n\nCheers\nJules\n\n\n\n\n\u2013\u2013\n\nThe Best Ideas are Simple\n\nJules S. Damji\n\nSr. Developer Advocate\n\nDatabricks, Inc.\n\nju...@databricks.com\n\n(510) 304-7686"
    },
    {
        "Question_title":"Logging graph plot in pyspark form into mlflow",
        "Question_created_time":"2019-11-14T22:15:29",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/lrZwJNTVH6M",
        "Question_comment_count":1,
        "Question_view_count":8,
        "Question_body":"I am trying to log K elbow result in pyspark form into mlflow, any thought on how this could be done?"
    },
    {
        "Question_title":"MLflow Release 0.4.0",
        "Question_created_time":"2018-08-01T19:18:26",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/JqCLKtnz69A",
        "Question_comment_count":0,
        "Question_view_count":41,
        "Question_body":"Hi mlflow-users,\n\nMLflow Release 0.4.0 is ready, released 2018-08-01. The release is available on\u00a0PyPI\u00a0and docs are\u00a0updated. Here are the release notes (also available on GitHub):\n\n\n\nBreaking changes:\n\n[Projects] Removed the\u00a0use_temp_cwd\u00a0argument to\u00a0mlflow.projects.run()\n(--new-dir\u00a0flag in the\u00a0mlflow run\u00a0CLI). Runs of local projects now use the local\u00a0 project directory as their working directory. Git projects are still fetched into temporary directories (#215,\u00a0@smurching)\n[Tracking] GCS artifact storage is now a pluggable dependency (no longer installed by default). To enable GCS support, install\u00a0google-cloud-storage\u00a0on both the client and tracking server via pip (#202,\u00a0@smurching).\n[Tracking] Clients running MLflow 0.4.0 and above require a server running MLflow 0.4.0\nor above, due to a fix that ensures clients no longer double-serialize JSON into strings when sending data to the server (#200,\u00a0@aarondav). However, the MLflow 0.4.0 server remains backwards-compatible with older clients (#216,\u00a0@aarondav)\n\nFeatures:\n\n[Examples] Add a more advanced tracking example: using MLflow with PyTorch and TensorBoard (#203)\n[Models] H2O model support (#170,\u00a0@ToonKBC)\n[Projects] Support for running projects in subdirectories of Git repos (#153,\u00a0@juntai-zheng)\n[SageMaker] Support for specifying a compute specification when deploying to SageMaker (#185,\u00a0@dbczumar)\n[Server] Added --static-prefix option to serve UI from a specified prefix to MLflow UI and server (#116,\u00a0@andrewmchen)\n[Tracking] Azure blob storage support for artifacts (#206,\u00a0@mateiz)\n[Tracking] Add support for Databricks-backed RestStore (#200,\u00a0@aarondav)\n[UI] Enable productionizing frontend by adding CSRF support (#199,\u00a0@aarondav)\n[UI] Update metric and parameter filters to let users control column order (#186,\u00a0@mateiz)\n\nBug fixes:\n\nFixed incompatible file structure returned by GCSArtifactRepository (#173,\u00a0@jakeret)\nFixed metric values going out of order on x axis (#204,\u00a0@mateiz)\nFixed occasional hanging behavior when using the projects.run API (#193,\u00a0@smurching)\nMiscellaneous bug and documentation fixes from\u00a0@aarondav,\u00a0@andrewmchen,\u00a0@arinto,\u00a0@jakeret,\u00a0@mateiz,\u00a0@smurching,\u00a0@stbof\n\n\n\nThanks,\nSid"
    },
    {
        "Question_title":"MLflow 1.6.0 Released!",
        "Question_created_time":"2020-01-29T22:10:20",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/SPW21m_UkC4",
        "Question_comment_count":0,
        "Question_view_count":17,
        "Question_body":"Hi Folks,\n\n\nWe are excited to announce the release of\u00a0MLflow 1.6.0!\u00a0 Some highlights from this release:\n\n\n* Autologging functionality for LightGBM and XGBoost flavors to log feature importance, metrics per iteration, and more. (#2275, #2238, @harupy)\n* Experimental autologging functionality for Spark datasource information\u00a0(#2220, @smurching)\n*\u00a0If you use EarlyStopping with Keras autologging, MLflow now automatically captures the best model trained and the associated metrics (#2301, #2219, @juntai-zheng)\n*\u00a0Adds a new runs table column view based on `ag-grid` which adds functionality for nested runs, server-side sorting, column reordering, highlighting, and more. (#2251, @Zangr)\n*\u00a0Fixes bug when running server against database URLs with @ symbols (#2289, @hershaw)\n\n\nFor a comprehensive list of changes, see the\u00a0release change log, and check out the latest documentation on\u00a0mlflow.org.\n\n\nThanks,\nAvesh"
    },
    {
        "Question_title":"TIMEOUT : On Running mlflow ui",
        "Question_created_time":"2018-07-02T23:16:22",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/ihCj8SbgTYw",
        "Question_comment_count":1,
        "Question_view_count":49,
        "Question_body":"Team,\n\n\nWhen I ran mlfow ui\u00a0it's showing below. What cound\u00a0be the issue here?"
    },
    {
        "Question_title":"MLflow 0.6.0 released!",
        "Question_created_time":"2018-09-10T20:59:17",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/kJz7T4052RM",
        "Question_comment_count":2,
        "Question_view_count":29,
        "Question_body":"MLflow 0.6.0 has been released: https:\/\/github.com\/mlflow\/mlflow\/releases\/tag\/v0.6.0\n\n\nMLflow 0.6.0 introduces several major features:\n\n\n- A Java client API (to be published on Maven within the next day or two)\n- Support for saving and serving SparkML models as MLeap for low-latency serving\n- Support for tagging runs with metadata, during and after the run completion\n- Support for deleting (and restoring deleted) experiments\n\n\nIn addition to these features, there are a host of improvements and bugfixes to the REST API, Python API, tracking UI, and documentation."
    },
    {
        "Question_title":"Shapash and MLFlow",
        "Question_created_time":"2021-09-11T17:39:30",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/D4ttV9ONWRA",
        "Question_comment_count":0,
        "Question_view_count":12,
        "Question_body":"Dear all,\nI have a Model which is using shapash LIbray. Do I need any special precompilation to its input values, in order to serve it through MLFlow?"
    },
    {
        "Question_title":"How to delete previously logged metrics?",
        "Question_created_time":"2022-06-23T12:46:34",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/e35ItjNDE20",
        "Question_comment_count":0,
        "Question_view_count":22,
        "Question_body":"It am aware its quite easy to add metrics to an old experiment with\n\n\n```\nwith mlflow.start_run(run_id=some_old_run_id) as run:\n\u00a0 \u00a0 mlflow.log_metric(k,v)\n```\nHowever, I was wondering if we could delete metrics as well?\n\n\nWe have some old experiments that used the incorrect key convention and we want to delete old keys\/value pairs from the jsonb column."
    },
    {
        "Question_title":"Get artifact with authentication",
        "Question_created_time":"2018-11-30T02:51:37",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/1RdBm4j3GMU",
        "Question_comment_count":1,
        "Question_view_count":28,
        "Question_body":"I have setup Authentication for MLflow v0.8 by NGinx. But when I access artifact page of model in MLflow UI, I received error:\n\n\n\n\n\nI have seen that mlflow get artifact by \"\/get-artifact\" request followed by:\nhttps:\/\/github.com\/mlflow\/mlflow\/blob\/v0.8.0\/mlflow\/server\/js\/src\/components\/artifact-view-components\/ShowArtifactPage.js#L42\n\nhttps:\/\/github.com\/mlflow\/mlflow\/blob\/v0.8.0\/mlflow\/server\/js\/src\/components\/artifact-view-components\/ShowArtifactTextView.js#L60\n\n\n\nHow could I get artifact with authentication ?"
    },
    {
        "Question_title":"Dockerfile for sagemaker",
        "Question_created_time":"2023-06-09T23:53:32",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/2uOPESzLhEM",
        "Question_comment_count":1,
        "Question_view_count":3,
        "Question_body":"mlflow sagemaker build-and-push-container --build --push -c is not working. Sagemaker fails to start on deployment. Instead could somebody point me to a Dockerfile that I can look at and test with and then push to ECR for sagemaker deployment?"
    },
    {
        "Question_title":"MLflow 2.3 release!",
        "Question_created_time":"2023-04-18T20:03:42",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/oIEKghiRctw",
        "Question_comment_count":0,
        "Question_view_count":22,
        "Question_body":"We are happy to announce the availability of MLflow 2.3.0!\n\nMLflow 2.3.0 includes several major features and improvements\n\nFeatures:\n\n[Models] Introduce a new transformers named flavor (#8236, #8181, #8086, @BenWilson2)\n[Models] Introduce a new openai named flavor (#8191, #8155, @harupy)\n[Models] Introduce a new langchain named flavor (#8251, #8197, @liangz1, @sunishsheth2009)\n[Models] Add support for Pytorch and Lightning 2.0 (#8072, @shrinath-suresh)\n[Tracking] Add support for logging LLM input, output, and prompt artifacts (#8234, #8204, @sunishsheth2009)\n[Tracking] Add support for HTTP Basic Auth in the MLflow tracking server (#8130, @gabrielfu)\n[Tracking] Add search_model_versions to the fluent API (#8223, @mariusschlegel)\n[Artifacts] Add support for parallelized artifact downloads (#8116, @apurva-koti)\n[Artifacts] Add support for parallelized artifact uploads for AWS (#8003, @harupy)\n[Artifacts] Add content type headers to artifact upload requests for the HttpArtifactRepository (#8048, @WillEngler)\n[Model Registry] Add alias support for logged models within Model Registry (#8164, #8094, #8055 @arpitjasa-db)\n[UI] Add support for custom domain git providers (#7933, @gusghrlrl101)\n[Scoring] Add plugin support for customization of MLflow serving endpoints (#7757, @jmahlik)\n[Scoring] Add support to MLflow serving that allows configuration of multiple inference workers (#8035, @M4nouel)\n[Sagemaker] Add support for asynchronous inference configuration on Sagemaker (#8009, @thomasbell1985)\n[Build] Remove shap as a core dependency of MLflow (#8199, @jmahlik)\n\nBug fixes:\n\n[Models] Fix a bug with tensorflow autologging for models with multiple inputs (#8097, @jaume-ferrarons)\n[Recipes] Fix a bug with Pandas 2.0 updates for profiler rendering of datetime types (#7925, @sunishsheth2009)\n[Tracking] Prevent exceptions from being raised if a parameter is logged with an existing key whose value is identical to the logged parameter (#8038, @AdamStelmaszczyk)\n[Tracking] Fix an issue with deleting experiments in the FileStore backend (#8178, @mariusschlegel)\n[Tracking] Fix a UI bug where the \"Source Run\" field in the Model Version page points to an incorrect set of artifacts (#8156, @WeichenXu123)\n[Tracking] Fix a bug wherein renaming a run reverts its current lifecycle status to UNFINISHED (#8154, @WeichenXu123)\n[Tracking] Fix a bug where a file URI could be used as a model version source (#8126, @harupy)\n[Projects] Fix an issue with MLflow projects that have submodules contained within a project (#8050, @kota-iizuka)\n[Examples] Fix lightning hyperparameter tuning examples (#8039, @BenWilson2)\n[Server-infra] Fix bug with Cache-Control headers for static server files (#8016, @jmahlik)\n\nDocumentation updates:\n\n[Examples] Add a new and thorough example for the creation of custom model flavors (#7867, @benjaminbluhm)\n\nFor a comprehensive list of changes, see the release change log, and check out the latest documentation on mlflow.org."
    },
    {
        "Question_title":"mlflow version",
        "Question_created_time":"2021-05-30T23:34:22",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/cIO3sb6oQx0",
        "Question_comment_count":0,
        "Question_view_count":16,
        "Question_body":"can someone tell me why i'm getting this error\nand when i tried to upgrade mlflw i still get the same error"
    },
    {
        "Question_title":"mlflow usage clarification",
        "Question_created_time":"2021-11-02T01:33:51",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/Zqzr2Sib7CA",
        "Question_comment_count":2,
        "Question_view_count":31,
        "Question_body":"Hi,\n\n\nI am new to MLflow and I am glad to find this group.\n\n\nI would appreciate if someone can give me some advice on how proceed in the scenario described below.\u00a0\u00a0\n\n\nI run mlflow in a Conda env (say mlflow-dev). I also have a few ML models in another Conda env (say models-dev).\u00a0 The models-dev has a few older dependencies that I have to keep it separate at all cost. How can I access and run models from models-dev in mlflow?\n\n\nAny suggestions, links or pointers would be very much appreciated.\n\n\nThanks\nRoy"
    },
    {
        "Question_title":"Spark-related tests are failing",
        "Question_created_time":"2019-03-27T17:54:49",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/BgU1p2juiBo",
        "Question_comment_count":3,
        "Question_view_count":19,
        "Question_body":"Hi all,\n\n\nI'm trying to set up the dev environment for contributing to MLflow. I followed the instructions\u00a0here but I have some issues running the tests.\u00a0\nI am using pytest and see that 9 tests fail. Most of them are part of the:\u00a0tests\/spark\/test_spark_model_export.py file. The error description is the following:\n\n\ntests\/spark\/test_spark_model_export.py:61:\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\/anaconda2\/lib\/python2.7\/site-packages\/pyspark\/context.py:115: in __init__\n\u00a0\u00a0\u00a0 SparkContext._ensure_initialized(self, gateway=gateway, conf=conf)\n\n\n\u00a0ValueError: Cannot run multiple SparkContexts at once; existing SparkContext(app=pyspark-shell, master=local-cluster[2, 1, 1024]) created by getOrCreate at \/home\/mlflow\/mlflow\/tests\/pyfunc\/test_spark.py:27\n..\/anaconda2\/lib\/python2.7\/site-packages\/pyspark\/context.py:314: ValueError\n\n\n************************************************\n\n\nIt seems that the SparkContext cannot be initialized because of an existing one. Any idea what might be the problem here?\n\n\nThanks,\nAvrilia"
    },
    {
        "Question_title":"Regarding pushing managed MLflow models to sagemaker endpoints",
        "Question_created_time":"2022-01-05T06:21:30",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/oPRZpS35XRw",
        "Question_comment_count":0,
        "Question_view_count":19,
        "Question_body":"Hi All,\n\n\nDoes anybody know anything about the below procedure.\n\n\nIf we have a registered model on managed AWS Databricks then how can we publish it as sagemaker endpoint.\u00a0\n\n\nThe mlflow sagemaker API doesn\u2019t work because it requires an image to be present in ECR. This seems like a manual step. Also the model registry path is not accessible on databricks. Only accessible via mlflow API.\u00a0\n\n\nIs there any way where we can directly push our managed mlflow models to sagemaker endpoint with \u00a0all the imgae creation and push steps are automatically handled by the API itself.\n\n\nThanks\nSaurabh\n\n\n--\n\nThanks & Regards\nSaurabh Verma"
    },
    {
        "Question_title":"MLflow 1.25.0 released!",
        "Question_created_time":"2022-04-11T17:31:38",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/qAKhi-1i0Z8",
        "Question_comment_count":0,
        "Question_view_count":11,
        "Question_body":"MLflow 1.25.0 has just been released. It includes several major features and improvements:\n\nFeatures:\n\n\n[Tracking] Introduce a new fluent API mlflow.last_active_run() that provides the most recent fluent active run (#5584, @MarkYHZhang)\n[Tracking] Add experiment_names argument to the mlflow.search_runs() API to support searching runs by experiment names (#5564, @r3stl355)\n[Tracking] Add a description parameter to mlflow.start_run() (#5534, @dogeplusplus)\n[Tracking] Add log_every_n_step parameter to mlflow.pytorch.autolog() to control metric logging frequency (#5516, @adamreeve)\n[Tracking] Log pyspark.ml.param.Params values as MLflow parameters during PySpark autologging (#5481, @serena-ruan)\n[Tracking] Add support for pyspark.ml.Transformers to PySpark autologging (#5466, @serena-ruan)\n[Tracking] Add input example and signature autologging for Keras models (#5461, @bali0019)\n[Models] Introduce mlflow.diviner flavor for large-scale\u00a0time series forecasting\u00a0(#5553, @BenWilson2)\n[Models] Add pyfunc.get_model_dependencies() API to retrieve reproducible environment specifications for MLflow Models with the pyfunc flavor (#5503, @WeichenXu123)\n[Models] Add code_paths argument to all model flavors to support packaging custom module code with MLflow Models (#5448, @stevenchen-db)\n[Models] Support creating custom artifacts when evaluating models with mlflow.evaluate() (#5405, #5476 @MarkYHZhang)\n[Models] Add mlflow_version field to MLModel specification (#5515, #5576, @r3stl355)\n[Models] Add support for logging models to preexisting destination directories (#5572, @akshaya-a)\n[Scoring \/ Projects] Introduce --env-manager configuration for specifying environment restoration tools (e.g. conda) and deprecate --no-conda (#5567, @harupy)\n[Scoring] Support restoring model dependencies in mlflow.pyfunc.spark_udf() to ensure accurate predictions (#5487, #5561, @WeichenXu123)\n[Scoring] Add support for numpy.ndarray type inputs to the TensorFlow pyfunc predict() function (#5545, @WeichenXu123)\n[Scoring] Support deployment of MLflow Models to Sagemaker Serverless (#5610, @matthewmayo)\n[UI] Add MLflow version to header beneath logo (#5504, @adamreeve)\n[Artifacts] Introduce a mlflow.artifacts.download_artifacts() API mirroring the functionality of the mlflow artifacts download CLI (#5585, @dbczumar)\n[Artifacts] Introduce environment variables for controlling GCS artifact upload\/download chunk size and timeouts (#5438, #5483, @mokrueger)\n\nBug fixes and documentation updates:\n\n\n[Tracking\/SQLAlchemy] Create an index on run_uuid for PostgreSQL to improve query performance (#5446, @harupy)\n[Tracking] Remove client-side validation of metric, param, tag, and experiment fields (#5593, @BenWilson2)\n[Projects] Support setting the name of the MLflow Run when executing an MLflow Project (#5187, @bramrodenburg)\n[Scoring] Use pandas split orientation for DataFrame inputs to SageMaker deployment predict() API to preserve column ordering (#5522, @dbczumar)\n[Server-Infra] Fix runs search compatibility bugs with PostgreSQL, MySQL, and MSSQL (#5540, @harupy)\n[CLI] Fix a bug in the mlflow-skinny client that caused mlflow --version to fail (#5573, @BenWilson2)\n[Docs] Update guidance and examples for model deployment to AzureML to recommend using the mlflow-azureml package (#5491, @santiagxf)\n\n\nNote: Version 1.25.0 of the MLflow R package has not yet been released. It will be available on CRAN within the next week.\nFor a comprehensive list of changes, see the\u00a0release change log, and check out the latest documentation on\u00a0mlflow.org."
    },
    {
        "Question_title":"Mlflow Serve functionality",
        "Question_created_time":"2019-06-07T04:32:43",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/How0fUco2FE",
        "Question_comment_count":1,
        "Question_view_count":21,
        "Question_body":"Hi,\n\nIs there any API that allows us to serve model using remote system?"
    },
    {
        "Question_title":"Is it possible to import a tensorflow model to spark",
        "Question_created_time":"2019-01-29T09:59:12",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/Bx6GadlNgbE",
        "Question_comment_count":1,
        "Question_view_count":24,
        "Question_body":"I have a requirement where I am doing a training and exporting a keras\/tensorflow model using mlflow. Is it possile to import that model to spark mlflow and do scoring there? I could not find such an option in documentation. When I tried the same I am getting the expection MlflowException: Model does not have the \"spark\" flavor\nml flow and then import that ml flow model into spark and do scoring there"
    },
    {
        "Question_title":"MLflow VertexAI deployment plugin",
        "Question_created_time":"2023-03-24T10:13:40",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/Dvv7gqmhCZE",
        "Question_comment_count":2,
        "Question_view_count":22,
        "Question_body":"Hello,\u00a0\n\n\nWe use mlflow for experiment tracking and as a model registry.\n\n\nI've recently come across mlflow plugins and was wondering if we can create a plugin that would help us automatically deploy model artefacts from mlflow to VertexAI?\n\n\nWe want the deployment to be based on certain conditions being met and were also wondering if we can introduce some gatekeepers in this process.\n\n\nAny tips on how to go about this is much appreciated.\u00a0\n\n\nOpen to having an offline chat with someone from mlflow team to discuss this in details.\n\n\nThanks,\nAsim"
    },
    {
        "Question_title":"Solution for model deployment to production with multiple model types",
        "Question_created_time":"2019-10-10T02:44:22",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/hN-sPZhGnYU",
        "Question_comment_count":0,
        "Question_view_count":14,
        "Question_body":"I am building a solution for model deployment to production where I can deploy multiple types of models to production by uploading their .pkl file. This solution will automatically create an endpoint for the model and also show analytics around model inference. The option of model switching and a fall back mechanism should be available in-case a model is not working properly. I might be able to leverage the power of mlflow in my Application for model packaging and model formating. I need suggestions and recommendations for how to think about such a solution and what can be some helpful resources that I can use."
    },
    {
        "Question_title":"log_artifact not working",
        "Question_created_time":"2018-08-23T13:43:03",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/vyq2eJqDU0k",
        "Question_comment_count":9,
        "Question_view_count":3037,
        "Question_body":"Hey folks,\n\n\nI got the mlflow ui server set up, and its saving everything except log_artifact.\n\n\nThe server is running mlflow in a docker container with continuum\/miniconda3 as the base image.\n\n\nFrom the command line, I'm launching the server like this:\n\n\n$ mlflow ui -h 0.0.0.0 -p 5000\n\n\nI can see and interact with the data.\n\n\nWhen I try to save the params, metrics and artifacts, I do this:\n\n\n# neumann\nmlflow_server = '52.89....'\n\n# Tracking URI\nmlflow_tracking_URI = 'http:\/\/' + mlflow_server + ':5000'\nprint (\"MLflow Tracking URI: %s\" % (mlflow_tracking_URI))\n\n\n# set tracking URI\nmlflow.set_tracking_uri(mlflow_tracking_URI)\n\n\nwith mlflow.start_run(experiment_id=3):\n\u00a0 \u00a0 mlflow.log_param(\"depth\", 5)\n\u00a0 \u00a0 mlflow.log_metric(\"roc_auc\", 0.8)\n\u00a0 \u00a0 mlflow.log_artifact(local_path='curve.png')\n\nThis is my FileNotFoundError error message:\n\n\n---------------------------------------------------------------------------\nFileNotFoundError                         Traceback (most recent call last)\n<ipython-input-113-f5870bc80ffe> in <module>()\n      2     mlflow.log_param(\"depth\", 5)\n      3     mlflow.log_metric(\"roc_auc\", 0.8)\n----> 4     mlflow.log_artifact(local_path='curve.png')\n\n~\/py3\/lib\/python3.7\/site-packages\/mlflow\/tracking\/fluent.py in log_artifact(local_path, artifact_path)\n    131     \"\"\"Log a local file or directory as an artifact of the currently active run.\"\"\"\n    132     artifact_uri = _get_or_start_run().info.artifact_uri\n--> 133     get_service().log_artifact(artifact_uri, local_path, artifact_path)\n    134 \n    135 \n\n~\/py3\/lib\/python3.7\/site-packages\/mlflow\/tracking\/service.py in log_artifact(self, artifact_uri, local_path, artifact_path)\n    105         :param artifact_path: If provided, will be directory in artifact_uri to write to\"\"\"\n    106         artifact_repo = ArtifactRepository.from_artifact_uri(artifact_uri, self.store)\n--> 107         artifact_repo.log_artifact(local_path, artifact_path)\n    108 \n    109     def log_artifacts(self, artifact_uri, local_dir, artifact_path=None):\n\n~\/py3\/lib\/python3.7\/site-packages\/mlflow\/store\/local_artifact_repo.py in log_artifact(self, local_file, artifact_path)\n     14             if artifact_path else self.artifact_uri\n     15         if not exists(artifact_dir):\n---> 16             mkdir(artifact_dir)\n     17         shutil.copy(local_file, artifact_dir)\n     18 \n\n~\/py3\/lib\/python3.7\/site-packages\/mlflow\/utils\/file_utils.py in mkdir(root, name)\n     99             return target\n    100     except OSError as e:\n--> 101         raise e\n    102 \n    103 \n\n~\/py3\/lib\/python3.7\/site-packages\/mlflow\/utils\/file_utils.py in mkdir(root, name)\n     96     try:\n     97         if not exists(target):\n---> 98             os.mkdir(target)\n     99             return target\n    100     except OSError as e:\n\nFileNotFoundError: [Errno 2] No such file or directory: '\/mlruns\/3\/1053b732c0a14d6cb8c07ee4320fd781\/artifacts'\n\n\n\nWhen I look at the filesystem, everything is saving except artifacts:\n\n\n~\/mlruns\/3$ tree\n.\n\u251c\u2500\u2500 5dcd18160aa74e6e8e405a6257a13177\n\u2502 \u00a0 \u251c\u2500\u2500 artifacts\n\u2502 \u00a0 \u251c\u2500\u2500 meta.yaml\n\u2502 \u00a0 \u251c\u2500\u2500 metrics\n\u2502 \u00a0 \u2502 \u00a0 \u2514\u2500\u2500 roc_auc\n\u2502 \u00a0 \u2514\u2500\u2500 params\n\u2502 \u00a0 \u00a0 \u00a0 \u2514\u2500\u2500 depth\n\n\nAny suggestions?\n\n\nThanks!\nFranklin"
    },
    {
        "Question_title":"Back up experiments on a new Mlflow server",
        "Question_created_time":"2019-12-09T12:05:01",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/Utw2OAnyW7A",
        "Question_comment_count":0,
        "Question_view_count":11,
        "Question_body":"Hi,\n\n\nI am just wondering if there is a clean way to backup experiment(s) from one Mlflow server to another?\n\n\ncheers,\nAmin"
    },
    {
        "Question_title":"Adding FileHandler to mlflow logger does not write all logs to file",
        "Question_created_time":"2023-06-08T06:09:48",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/vluIi2t9XK8",
        "Question_comment_count":0,
        "Question_view_count":2,
        "Question_body":"Apologies for the format. I have also posted this question on stackoverflow, which will have a better format!\n\nI am using FileHandler to write logs from mlflow script but it does not write the logs from mlflow, only those I specifically logged:\n\npreprocess.py (example, incomplete)\n\n```\n\nlogger = logging.getLogger(\"mlflow\") logger.setLevel(logging.DEBUG) logger.addHandler(logging.FileHandler(\"log.log\")) logger.info(\"Reading data from {}\".format(filepath)) data = pd.read_csv(filepath) ... ... logger.info(\"Train data shape after preprocessing: {}\".format(train_df.shape)) logger.info(\"Validation data shape after preprocessing: {}\".format(val_df.shape)) logger.info(\"Test data shape after preprocessing: {}\".format(test_df.shape)) ... ...\n\n\n```\n\nlog.log file\n\n```\n\nReading data from \/home\/fsdf\/projects\/mlops_mlflow\/data\/dataexample.csv\u00a0\n\nTrain data shape after preprocessing: (1709, 45)\u00a0\n\nValidation data shape after preprocessing: (488, 45)\u00a0\n\nTest data shape after preprocessing: (245, 45)\n\n```\n\n\n\n\nconsole display\n\n```\n\n2023\/06\/07 14:18:39 INFO mlflow: Reading data from \/home\/fsdf\/projects\/mlops_mlflow\/data\/dataexample.csv\u00a0\n\n2023\/06\/07 14:18:39 INFO mlflow: Train data shape after preprocessing: (1709, 45) 2023\/06\/07 14:18:39 INFO mlflow: Validation data shape after preprocessing: (488, 45)\u00a0\n\n2023\/06\/07 14:18:39 INFO mlflow: Test data shape after preprocessing: (245, 45) 2023\/06\/07 14:18:39 INFO mlflow.projects: === Run (ID '3a20a4db2d8f4211b38b783afa52b2d9') succeeded ===\u00a0\n\n2023\/06\/07 14:18:39 INFO mlflow.projects: === Run (ID '4aaa5e6577844bec88240a3982234eb6') succeeded ===\n\n```\n\n\n\n\nAs you can see, there are some mlflow INFO logs (last 2 lines from the console) that are not written into the log file. How do I get them to be included?\n\n\n\n\n\n\n\nKind Regards,\n\nTeYang"
    },
    {
        "Question_title":"Does MLFLOW supports CNNs ike yolo and unet running on NVIDIA tao platform",
        "Question_created_time":"2022-09-18T03:07:04",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/BjkpwrXLXPM",
        "Question_comment_count":0,
        "Question_view_count":44,
        "Question_body":"Hi, we are a company working in the field of computer vision and would like to make sure that the MLFLOW experiment management platform fits our needs and workflow.\n\nWe work with image processing\u00a0 CNNs like Yolo, UNET, and RetinaNet based on an NVIDIA TAO framework.\u00a0\n\nWhat we actually need is a tool that concentrates on one place (in a nice and representative way comfortable for comparison) at least the three following things for each experiment:\n\n\na- chosen by user typical meta parameters that were used to train a network (such as batches, subdivisions, max batches, etc)\n\nb- a link to the dataset the network was trained on, located on our cloud storage (such as one-drive, google drive or google cloud) or a list of filenames or a link to a file storage cloud or online drive suggested by your service if there is such a thing.\n\nc- a result of running the trained network - the number of detected objects\n\nThank you very much"
    },
    {
        "Question_title":"MLflow 0.2.1 release",
        "Question_created_time":"2018-07-03T12:52:45",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/pWpD1HQOf8U",
        "Question_comment_count":0,
        "Question_view_count":31,
        "Question_body":"Hi everyone,\n\nAs a heads-up, we published MLflow 0.2.0 and 0.2.1 at the end of last week with a number of new features and fixes. This post details the biggest ones: https:\/\/databricks.com\/blog\/2018\/07\/03\/mlflow-0-2-released.html (namely a TensorFlow integration package for saving and serving TF models, as well as improvements to the server, including the ability to store data on S3). You can also see a more detailed change log at https:\/\/github.com\/databricks\/mlflow\/blob\/master\/CHANGELOG.rst.\n\nIt should be possible to upgrade to the new version using pip install --upgrade mlflow .\n\nMatei"
    },
    {
        "Question_title":"MLflow 1.26.1 released!",
        "Question_created_time":"2022-05-27T21:27:04",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/OkDlyI-k6Ss",
        "Question_comment_count":0,
        "Question_view_count":12,
        "Question_body":"We are happy to announce the availability of\u00a0MLflow 1.26.1!\n\n\n\nMLflow 1.26.1 is a patch release containing the following bug fixes:\n\n[Installation] Fix compatibility issue with\u00a0protobuf >= 4.21.0\u00a0(#5945,\u00a0@harupy)\n[Models] Fix\u00a0get_model_dependencies\u00a0behavior for\u00a0models:\u00a0URIs containing artifact paths (#5921,\u00a0@harupy)\n[Models] Revert a problematic change to\u00a0artifacts\u00a0persistence in\u00a0mlflow.pyfunc.log_model()\u00a0that was introduced in MLflow 1.25.0 (#5891,\u00a0@kyle-jarvis)\n[Models] Close associated image files when\u00a0EvaluationArtifact\u00a0outputs from\u00a0mlflow.evaluate()\u00a0are garbage collected (#5900,\u00a0@WeichenXu123)\nFor a comprehensive list of changes, see the\u00a0release change log, and check out the latest documentation on\u00a0mlflow.org.\n\n\n\nNote: Version 1.26.1 of the MLflow R package has not yet been released. It will be available on CRAN within the next week."
    },
    {
        "Question_title":"Adding ONNX flavor -- issue with python version during CI",
        "Question_created_time":"2019-04-15T15:57:31",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/baS8WpeJ2JQ",
        "Question_comment_count":2,
        "Question_view_count":17,
        "Question_body":"Hi all,\u00a0\n\n\nI submitted a PR for supporting ONNX flavor in Mlflow (source code: https:\/\/github.com\/avflor\/mlflow\/tree\/onnx).\u00a0\n\n\nONNX only supports Python 3 and not 2.\u00a0\nMy PR consists on an mlflow\/onnx.py file and tests\/onnx\/test_onnx_model_export.py.\u00a0\n\n\nI have some issues when testing through Travis.\nI have managed to successfully exclude the tests when testing with Python 2.* version but I have trouble with the main onnx.py file.\nIn this file, I import onnx and onnxmltools packages, but these imports fail on Python 2 (as expected).\n\n\nI added the following lines in the file:\n\n\nimport sys\nif sys.version_info <= (3, 6):\n\u00a0\u00a0\u00a0 print('Requires Python 3.6')\n\u00a0\u00a0\u00a0 sys.exit(1)\nimport os\nimport yaml\u00a0\n\n\n...more imports...\n\n\n\n\nbut then lint.sh fails with the following errors:\u00a0\nmlflow\/onnx.py:9:1: E402 module level import not at top of file\n\nWhat is the best way to exclude a module in the main code based on python version?\n\nThanks,\nAvrilia"
    },
    {
        "Question_title":"Failed to call Java API: MlflowClient.listArtifacts in docker",
        "Question_created_time":"2019-06-09T23:34:03",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/SrdkbCtKmgs",
        "Question_comment_count":2,
        "Question_view_count":12,
        "Question_body":"HI,\n\n\nmy Dockerfile as follows:\n\n\nFROM python:3.6\n\nENV MLFLOW_VERSION 0.8.2\n\nWORKDIR \/\nRUN apt-get update \\\n   && apt-get install -y ca-certificates wget openjdk-8-jdk\n\nRUN pip install mlflow==${MLFLOW_VERSION}\n\nRUN wget -O dd-java-agent.jar \\\n         'https:\/\/search.maven.org\/classic\/remote_content?g=com.datadoghq&a=dd-java-agent&v=LATEST'\n\n\nCOPY target\/xxxxxx.jar app.jar\nCOPY pipeline\/ci\/entrypoint.sh .\nCOPY pipeline\/ci\/sysctl.conf \/etc\/sysctl.d\/00-alpine.conf\n\nRUN chmod +x entrypoint.sh\n\nEXPOSE 8080\nENTRYPOINT [\"\/entrypoint.sh\"]\n\n\nmlflow is deployed in localhost outer docker\nartifact storage is s3 implemented by minio in localhost\n\n\nAfter started docker container, MlflowClient.listArtifacts is called by my own rest API, but it failed\n\n\n\n[http-nio-8080-exec-9] - [ERROR] - [com.xxx.dsd.aop.ApiExceptionHandler.internalErrorHandler(line:26)] - org.mlflow.tracking.MlflowClientException: Failed to exec 'python -m mlflow.cli', needed to access artifacts within the non-Java-native artifact store at 's3:\/\/mlflow\/artifacts\/1\/a34faddc96a544ce8e41f6049189a351\/artifacts'. Please make sure mlflow is available on your local system path (e.g., from 'pip install mlflow')\n\nat org.mlflow.artifacts.CliBasedArtifactRepository.checkMlflowAccessible(CliBasedArtifactRepository.java:181)\n\nat org.mlflow.artifacts.CliBasedArtifactRepository.listArtifacts(CliBasedArtifactRepository.java:127)\n\nat org.mlflow.artifacts.CliBasedArtifactRepository.listArtifacts(CliBasedArtifactRepository.java:137)\n\nat org.mlflow.tracking.MlflowClient.listArtifacts(MlflowClient.java:438)\n\nat com.rakuten.dsd.service.ModelService.getArtifacts(ModelService.java:97)\n\nat com.rakuten.dsd.controller.ModelController.getArtifacts(ModelController.java:117)\n\nat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\nat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\nat java.lang.reflect.Method.invoke(Method.java:498)\n\nat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)\n\nat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)\n\nat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)\n\nat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:870)\n\nat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:776)\n\nat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\n\nat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)\n\nat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)\n\nat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:978)\n\nat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:870)\n\nat javax.servlet.http.HttpServlet.service(HttpServlet.java:635)\n\nat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:855)\n\nat javax.servlet.http.HttpServlet.service(HttpServlet.java:742)\n\nat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\n\nat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\n\nat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)\n\nat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\n\nat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\n\nat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)\n\nat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)\n\nat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)\n\nat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\n\nat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\n\nat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\n\nat org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:84)\n\nat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\n\nat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\n\nat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\n\nat org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)\n\nat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\n\nat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\n\nat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\n\nat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)\n\nat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\n\nat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\n\nat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\n\nat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)\n\nat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)\n\nat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)\n\nat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)\n\nat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)\n\nat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)\n\nat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)\n\nat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)\n\nat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)\n\nat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)\n\nat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)\n\nat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\n\nat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\nat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\nat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\n\nat java.lang.Thread.run(Thread.java:748)\n\nCaused by: org.mlflow.tracking.MlflowClientException: Failed to get mlflow version. Error: Traceback (most recent call last):\n\n\u00a0 File \"\/usr\/local\/lib\/python3.6\/runpy.py\", line 193, in _run_module_as_main\n\n\u00a0 \u00a0 \"__main__\", mod_spec)\n\n\u00a0 File \"\/usr\/local\/lib\/python3.6\/runpy.py\", line 85, in _run_code\n\n\u00a0 \u00a0 exec(code, run_globals)\n\n\u00a0 File \"\/usr\/local\/lib\/python3.6\/site-packages\/mlflow\/cli.py\", line 223, in <module>\n\n\u00a0 \u00a0 cli()\n\n\u00a0 File \"\/usr\/local\/lib\/python3.6\/site-packages\/click\/core.py\", line 764, in __call__\n\n\u00a0 \u00a0 return self.main(*args, **kwargs)\n\n\u00a0 File \"\/usr\/local\/lib\/python3.6\/site-packages\/click\/core.py\", line 696, in main\n\n\u00a0 \u00a0 _verify_python3_env()\n\n\u00a0 File \"\/usr\/local\/lib\/python3.6\/site-packages\/click\/_unicodefun.py\", line 124, in _verify_python3_env\n\n\u00a0 \u00a0 ' mitigation steps.' + extra\n\nRuntimeError: Click will abort further execution because Python 3 was configured to use ASCII as encoding for the environment. Consult https:\/\/click.palletsprojects.com\/en\/7.x\/python3\/ for mitigation steps.\n\n\n\n\nThis system supports the C.UTF-8 locale which is recommended.\n\nYou might be able to resolve your issue by exporting the\n\nfollowing environment variables:\n\n\n\n\n\u00a0 \u00a0 export LC_ALL=C.UTF-8\n\n\u00a0 \u00a0 export LANG=C.UTF-8\n\n\n\n\nat org.mlflow.artifacts.CliBasedArtifactRepository.forkMlflowProcess(CliBasedArtifactRepository.java:209)\n\nat org.mlflow.artifacts.CliBasedArtifactRepository.checkMlflowAccessible(CliBasedArtifactRepository.java:173)\n\n... 61 more\n\n\n\nBut, if I use 'exec' command to enter into the container, and use python API of mlflow, everything looks OK.\n\n\nSo, I'm not suer\u00a0 if there's anything wrong in my docker image or any other things wrong ?"
    },
    {
        "Question_title":"ML Flow for \"governance only\" models",
        "Question_created_time":"2022-07-15T14:41:02",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/G-gyt0uSFiY",
        "Question_comment_count":0,
        "Question_view_count":22,
        "Question_body":"We're a large company where different data science\/ML engineering teams have different platforms for building\/deploying ML models.\u00a0 However, we'd like to use ML Flow as a central repository for all of our ML models and annotations\/metadata for enterprise governance, and ask teams to enter their models and the annotations\/metadata applicable for governance into ML Flow.\u00a0 Is this something other companies have done?\u00a0 Either leverage ML Flow UI to put this data in, or build\/extend API so the models could be written to by the other platforms?\u00a0\u00a0\n\n\nLooking to see if it fits this use case.\n\nThanks!!"
    },
    {
        "Question_title":"windows compatibility",
        "Question_created_time":"2019-07-10T21:33:05",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/mNJwqIkvMR8",
        "Question_comment_count":1,
        "Question_view_count":8,
        "Question_body":"Hello,\n\n\nI am not sure if this is the right place to ask this:\nI have seen the PR of the mlflow which replaces Gunicorn by Waitress has been approved and merged in master, but when will this versioned released on Pypi?\n\n\nThanks a lot!"
    },
    {
        "Question_title":"MLflow Users Slack",
        "Question_created_time":"2020-07-28T18:45:57",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/CQ7-suqwKo0",
        "Question_comment_count":6,
        "Question_view_count":200,
        "Question_body":"Hello,\n\nI'm trying to join the MLflow Slack channel (https:\/\/mlflow-users.slack.com\/) but it seems like I need a databricks email to create an account? The invite link on the MLflow website seems to be inactive. Just wondering if I could get an updated invite link to join the Slack!\n\n\n\nThanks!"
    },
    {
        "Question_title":"MLflow 1.23.1 released!",
        "Question_created_time":"2022-01-27T00:31:50",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/VBcXL-yx3WQ",
        "Question_comment_count":0,
        "Question_view_count":26,
        "Question_body":"We are happy to announce the availability of\u00a0MLflow\u00a01.23.1!\n\nMLflow 1.23.1 is a patch release containing the following bug fixes:\n\n[Models] Fix a directory creation failure when loading PySpark ML models (#5299,\u00a0@arjundc-db)\n[Model Registry] Revert to using case-insensitive validation logic for stage names in\u00a0models:\/\u00a0URIs (#5312,\u00a0@lichenran1234)\n[Projects] Fix a race condition during Project tar file creation (#5303,\u00a0@dbczumar)\n\nNote: Version 1.23.1 of the MLflow R package has not yet been released. It will be available on CRAN within the next week."
    },
    {
        "Question_title":"[Announcement] MLflow dropping Python 2 support in 1.8.0",
        "Question_created_time":"2020-03-11T18:23:18",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/Y-rDcaaCr0c",
        "Question_comment_count":0,
        "Question_view_count":9,
        "Question_body":"Hi all,\n\n\n\nMLflow is dropping Python 2 support! MLflow 1.7.x releases will be the last to support Python 2, and MLflow 1.8.0 (targeted for end of March) and above will only support Python 3.\n\nSee https:\/\/mlflow.org\/news\/2020\/03\/08\/python-2-end-of-support\/index.html for more information.\n\nThanks,\nSid"
    },
    {
        "Question_title":"mlflow inference tensorflow inception saved model giving error",
        "Question_created_time":"2019-08-25T14:30:16",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/GrCd-t0gx8U",
        "Question_comment_count":1,
        "Question_view_count":28,
        "Question_body":"Hi All ,\n\n\nI am trying to serve a already saved tensorflow\u00a0 inception model using the below code :\nmodel_path = \"\/Users\/i311157\/Downloads\/data\/inception\"\nmlflow.tensorflow.save_model(tf_saved_model_dir=model_path, tf_meta_graph_tags=[tag_constants.SERVING],\n                             tf_signature_def_key=\"predict_images\",\n                             path=\"savedmodel\",\n                            conda_env =\"\/Users\/i311157\/PycharmProjects\/mlflow-tf\/conda.yaml\"\n\n\n\n\n\nI start serving the model from cli using below command :\n\n\n\nmlflow models serve --model-uri <MODEL-PATH-URL> -p 54321\n\n\n\nOnce the https server is up I try to do inference using the below :\n\n\n\ncurl -X POST \\\n\u00a0 http:\/\/127.0.0.1:54321\/invocations \\\n\u00a0 -H 'Accept: *\/*' \\\n\u00a0 -H 'Accept-Encoding: gzip, deflate' \\\n\u00a0 -H 'Cache-Control: no-cache' \\\n\u00a0 -H 'Connection: keep-alive' \\\n\u00a0 -H 'Content-Length: 20552' \\\n\u00a0 -H 'Content-Type: application\/json' \\\n\u00a0 -H 'Host: 127.0.0.1:54321' \\\n\u00a0 -H 'Postman-Token: 442368b4-808a-4c87-a514-0058853226be,4faba288-a91f-4f23-9714-94ffaf72cea1' \\\n\u00a0 -H 'User-Agent: PostmanRuntime\/7.15.2' \\\n\u00a0 -H 'cache-control: no-cache' \\\n\u00a0 -H 'format: pandas-split' \\\n\u00a0 -d '{\"columns\":[\"images\"],\"index\":[0],\"data\":[\"\/9j\/4AAQSkZJRgABAQEBLAEsAAD\/2wBDAAEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQH\/2wBDAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQH\/wAARCAGQAlgDASIAAhEBAxEB\/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL\/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6\/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL\/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6\/9oADAMBAAIRAxEAPwD+oFfGKghWkJG7J+cAMcHBwxBwWAJyRg4692N4rSRjl+QVBwynGSoJOR0A6ZznAH3gCPmj\/hJ2YkeZnO4gEAcg5KgEA55wwPAGCCDwbsPiMt\/y1UEBWGBweSOMkE8EEckfd6jp9NLDwjfdXSet3e9rbX0um2l99k7flMKvM2rp2vsr7W6cu\/VvXqmn0+jh4iXk+YSQOQWGFHzEZIHB5JVQBywbBLZN2PxOhTmQqQzKfmBJ5OOy4G0DpgHdwCBgfPK+In25aTnjcOhYhm2jrgkYLYY5IVsk7c1GniJo3J84KAW2jOOwGeCxGSRyCP7vI+U5KnG9npa2uzumrrX+uu5fO+rSS3bT8k\/lbpq7LbofSUHiUK4AkxnHGQOnynucEkEnjAJAxkKK3LfxGrkfPyxB27lHOc5P3SCBx907cZIQEbflpfEjlsGVvlIHGcEn\/fOeTwAQo2hduQSB0Wn+IiSAZMZxkkDA+YHkk\/KNvTgk\/KeFb5dPYrf8NHdXSWlu2jt5q6aRUa0k91ppo29WtLLR3aW\/XWys219TWWriRgNwB3MuN4U7cHtjHUtldxAJJC917Gx1HO0Fs8gbgQcZxj0K9eTnIOSWIzj5q0jXnwq7icHvxklVwOTuyBhgRwckngA16bpOsKdvz8jnJUk4YY555HzAEMCDyCR8qDnqQ5drPT8br7r36306t6nVRrtON22k0rrfW1lpe19Xyt9ettPe7O+B5zgY5BPGG4JBIBwccZKknHJBAO7FeDA+p9B93gd9oJ46Ecjk45PkllqowAX6YwTx1JG3k8DjJBXIP3VKkAdTb3+7GCc4\/vckHjIOcZJxk8+vXrxzi1dbb22d\/XVP1V1v0PZoVoN20128mtP1\/C++r9BhuckMpPJB6dW7A8HAznkZIHy9cKNOO6Bxz1GM5zyST904JPIB5OSOMkmuHgvgM4cEHBHI5wRwMgE44H3emOehGzBdbtoYg\/8AfOMnjgMR1zjgZ4xz8ued36q235L1\/wCAdyk1az3X4ab7b+XbpodYJuCAehwSeTngc98A8E4OACd2FNPWX6kYweeBwOW6EjGT1GGHBzzWClx2znpkdTnIbtxwwweCBgg1KLnkZOQOMjB4JyOTxn\/dIz8vzZwazlG\/5dddFq35a669t9DRVO+tnt01tffbTz+a0tuiY4xnJAAHOfmzgEnqecEYOCCecchfN54xyex4wMYJK8H6Z6cAEAgY32rgDqCAOCO2FyOpJOAQffkHklDdAE9D1A6EDBG7kYPYE+oIJxgCoUW\/L19de3maOrpq03pa3Sy1dra\/5vW3Ta849fZR1Gc9SSAQMgHOMY9Rzini4A7npkAdwM+h98dSe+PmzWF9pGNuT1z15x7AZ+UcFdwOwgjkUw3BAwOT1P8AvHAAwOpIOTnI68HirjG2++3lura\/59fvIdS7Wnbb5XXyWnT9X0P2gAHkjryTx25OMe+O\/Az1xQ9wfUkE9NwOMnCkAdyT0I65xxzXPi6AHBx6nJAzgDPBGTgFQcduc0xrobecZyenGQc8ADPBwQcYHXdgYxtGLdnpa6e\/Zr+retzOVVWaWj6O7t0d9vl+WjuaM11xkkjjIOBgknAGATjJAJJ5IA4Oc1h3N0NpPqcYLHJzwB1HJ4LEkA5yzVBcXW0Z3Z3Z46A84AyM8ZHPzcEjP3iF5i9vmBOSM4OOnHTPAGSOMcnP97kknojG+vS+v9fn5HPOTavJvp+ibsrff5dbDNQvdwY59epzyBgjd0\/BlO08n72D51qt8q75C5yuQRkcDJ\/hI7DnO7Axjndtq9qWpYLYIII+gyFJ5JwCexYD5gMjnArzTWtRYhyDj5cHueW4UDGVbBGepzggkDNd9Cg29Vba3Tto+rem1tbWvrZ+NisRe7T0jq3fTTRKzteyvd3WitZnJeI9SJLhSRuDgkHqSOPlBUc8MTjjK8HaDXgniO95ky2OecnP0Yg\/NuyWwTwV7EAE+ia\/fE+Yd+Ryfk3YzsOQVO7PUHocDjJYgV4rrtwzZ6hWIPKoSFwOSBhuuOpyR8xIGTXu0aajFOyekdrvSyb0s76v8Oh85XqOV5a77O2miSadtV1fdu73PJvE0+5ZMNkbWGNwzkZBzjduOFAPJIC8DJ58L1sljJglSpbhmDYBByAM7SfmGCMg\/LyfmWvZNe+cNgEhSB0BIGAANuAV5B7HAYEg\/wAPk2oxBiV5w5YHgDI4I4AyMHaBwwYsGYfMuO6C5eVvbe\/RXSutrapNdNLv05UtE3ZPTW19uXV2S+9207ppryDWbRnZwVL8DccBeMH5eDjnO4L3I5IbGfLdXsshgBkdgSC3JI+b7uCAShJAwCTghlI9z1S1B3jnBY4G0sCGwX4AA3E5xyO4A3bq891KxBLArgAnoB1JBIxlgDkYGG7ElcALXUp36tNLfddOl7pa666PbY6Ixu\/LXdb7LR3stuj089T561ixyXOcqSWGMhsHdklhuBydw3ZJyMFXGc80lic5CgN8qklu4+YEADAyVzk52twCBlh7Bq+mhjypz2OwEL\/CP4SBlcfKCADgclVB5X+zsOS4KgcbiQc4+TAA42jKA4JwRyGKip5lda63V2nfa1ttFt89NI3dumNGe11vf8VZp2183q+zvYz9NtSZF4LAKVOTxhiAAeWAODz8oOTheCFr0nSIdjrx0LEHdjO3kFjzkDBVTkbiThiMMcfT7FQQQAcBQQCM8gMR8uxQxHTr8vKn7wrt7C0KMpwC3LNwANzJg4IVSSu7OWBG456ZK7wqfC9kl1V9LaLyTe9vvaGqM1ZL3r6u7Sd3bTXXR9la3S7PbfBUxDRYPIMalRnkEA8YGcMTzwANrHcVC19feDGDLCOoIVBhufmJIwcKeEORkKDycgECvjzwav7+JSCeUPGcFgQd244GCuSQQz9PvZJH114HGBFk5J24JBzjJwoG7AGFGc5Axg5KorOtNOHuv4WttN0tnq01d7\/jZEezkpRTT3b0T3XLrsl2SavdbO9j6p8Kk4TJP3gC3PoG4LHgg4IOQAeM9Fr3bRnIVDuPKoVIP3j8nJK9Ce2fmKj7zYJPgvhYlVTPVgGzkcYIPyrnJHOVYA5GSQGyV910Y5Kc4O0HIw3OCApAwACCMgHI55ABU+DipcydkrXT3b7Wtoui1++y1t6eHTurq7slfzsua6bWuvV2vrc9OsJMKo9ATxycH1OCAcgjHQckkAcdfayAlckZOOuQMnIycEkKG575G7IPzLXE2BKhR2AIzt5256ZzgZxnGPy4x1lo7fKM8gAnAPp+Q6ZbHO0bhkhzXg1bPm87PftprffVeWul1qj3aF7K9lotEu1tFuuv+duvYQNuAI9BkEj7pA54HJPXdjj1BBI0488cD2weuSc7to6EkAjYDgEKTnNYlpIpGRgHjPABwR8pJBz0yD1yMY+YBq14n7DkDbnKg4HUHAPRiO2CRkZ4Ynin+Xrs\/wAFt\/V2bPf06vW601S087X9Nrs0UBBPY5IIBzkckEE87cZH1BOFw2XBSMBc84BGSSQQO3ABPGcDnk4yahjZcYySAMZYA5BB4JGSMfN97IAyckEbZgQD6EgcHgjtg\/8AfWNvTPvzWTV99v8AhuvyNk7q\/T1u+mm3nbXXr1uIecgE4Bzz+pGQADzjd0O3juRESfTJAYcMFyOS2AcqfQryR8pDNndTmIIZFyD8q4GBnJIA7jLAYBx0wDwCFhLAn0XPQKCNwJxtXAzkeoyRkYOAKErf1\/XX+upEpLWz10fTX4elui1166bFlSCOBn0OcnDYY9dueeM884JJO7Dge\/OQCRtOQOepPOAADycE84AyKgDnk84JT3O5geMDOMkN0PPBAYEhn5APPORj35HQ4zkkHIzjBCjOTmqS\/rftulrbp08uwozvbp1at3tbZK7VtGl2Xe1skDC55JJ6jI4yenOT2AOcnAIzTwzck8545OSOF+90JA6DkZPYYBqqrYPHTgj+6O4GNox2AxgZxxnkKJRkA4yCCen3QCRtH5DOByeowMtRvZeSenS7W\/Xbp036s05k9dUr29X572+9dexd3jueoY9eTyfXBz6c9zwOKduB7g\/1P17kZ5A9sis7zsAck8dgCTkg5wOnbOTyeq8jDxNjoT8pPJGBg9MjIKn25znaBwMnJZf5J+Vui7+fXqrM5la+nS\/zte3pf8C8Tgew\/pkcfQfyI4qPd055x0JyD9OnHIOfTuTnNXzsgDI3ZA5BAHB3YGcEjAHzEZwSxG0ExmTjI4yR0ABGPUDnkE91znHTrSht0VtrdktO2\/fe23ZOS6b6N69NNO\/RJ2011LUjjGctxnoCMlQTnAIPAXHUA\/TBqkz87stknJ56kZwBjHQd+Op4AGSSSNjBGBjG35VHC\/MM8DPcrn7xA2jioN2cEEDOPbnI9f7w4yRxnHY5tKyt\/wAHtft\/X3GTd9bb2v8AhbS3f7tPNiucZAHGePbrjPAPOMnGMjIxzkxNwP8ADr68cjnjGc4HU8ClY\/dPJJweMDOeOmOnsc9QflPIj3DGBwccfj2z2BI65HrnOcUlqnbS6T\/r0Ie+tl10beyT10XbZatWt1GE9Tnvg5+9noegGQcDsM8YA6U0tjGfTA7AAYx\/Tp2JOM04kdT3\/u9OemOf6gA8ZwRVdj0PJzz26nAxjPHPHPXgnANaqz6dfSzVtPO3XbbbvNrPs7+rSvG2iul89PuQrEkkjHHt1Hp6gZPucH1AIcOB6A7fQfXPToOMgZyBzhlwznIznHfv2z6jnnPXPJ7mnDkHjIwRnHPHPt2Azz0HfoW3+n9f8Dr5jjvzO\/rtdabrd39Lp9ddFY5A49RgtxkcfjyD1zyDxyAIz9B0578emSTjpjHHHXHdc5PP5gcn04HH+eSOtJwR7Z+uOp6eowB259DgVEmtlpb07q67J3173T9W0lur9LJ\/9u+T9N9LdN03PPXsckcAj8ctxyOgySchc\/Ko6DBPHueo49vT6HrSH7ufUA45H4EHoOehGAck5GcqPT69v8ec9+eueM1Dd\/69F+hS00t+PTp597fpsSoxHI54x97GflxknkHAA9M4yDwcyM2ADyefbPbg8ZxngEknHoRzCnfocd8ZOQOOg456\/p0pzc8ZxnjOM\/XBA56\/zBxSGv6\/p\/l02I2Y\/MPb17jAIJGeuRnAzxk9MVCxAzz\/AHjwefTkdeOT0xzjvUjHsTgkYHT+979Mcc5A7ioie2emSORnkj3x1IHJHJGSKzk3fd\/guz6+Xdb+WiaV\/T\/hk\/uvfsR7Rg4GSDnk8sepOBjJJ4xlsZ5PJFRMo5zlgOnOCoJK8YP3T8o6jBycAk7pz94AAnkZx1XOdpBzwemCwxnpjBIhIJOQWHDEDoBuB9xwAOgwcHAIBIUi+\/ot9Nla\/S+mz37PfRJOyvZavrfpdb6N6appO97WI9ikE4wc8AHd0AyW5GRzxtIbnAyMAKsJPfgkAndk4wCccKOCcHHKngg4Jpw6+pwPU5GMnBzgDjjLYGAePmqYDII3ZH3eeSMEA88dNvTgAnI6AinJLR6fi+nnvuvxv3cny7NXstG7\/NavXS2um7u76VzCMDjGc5XODwAOhzgA5yG45wQWANFXQCQevAO7GCeTwOD04IAz3AHy0UKV0tW\/kt7r\/Pp089TF3bvZPpf7vJ+X4H4AQ6+7HaZCoB4G47ACM4I6kjADEbgvAwNyhty214rjM2FVgRycYOcHcQcABjjaG2g5OArEeEQ6hLhV3HAckENlvun0BwNoKiQgkjj5iwQdDaalIdvz5GU56blYDJ4JJOFBxnghlyxJY6zxVre9orKyd3dWVlq9W9\/yWh8rDDNRvd2b5rK6erT1ule2u705dbJae4R62XTghSQQpBIAIIZsnjjcMHJbHAyVUA2xq5IP7wK2CQGI7gsSFwOfvHnJYncOgry+1vgqcyAEqM7iCcEggjOCT25wSOTgEE2Tqm8kGTGWJBDg4IwD8w5GO\/3uRgnfhRj9Z95LpvfR9L+bl6N9972eyw+lld3tr92jXR7xe3m1fX0CXXvKYBGbqAzAqwAPBAb+6Rkk7twyV5VgK1NM8VgOpEmSSBxnJyw5UZfdjlgDk\/KSOSteNT3o2nDAHKgHI68seOhA24HDAgjJ5LLjrrEkEpUMF+63DAkEuNoKjAwxfbjg\/wAO5NpJ3p10\/d5oyvbTR\/h97evqtjCdCS+FPZOyT0+HVJ7t2STs97JO2n2toniWPCHzEySQACeSFGTnaQ2MsM4YhSecsAfV9F1wFUIk4wp5yX+UY7HA2jnDZyxGAVBavh7w14jkZ0PmsSR8p3AkKAMg5JP8gVzt+XBHvmga4WEbh2PCE7WG7GAdwzkYA+YEttznvk0e0jLVO7t03s\/ndPTfvsu1whKLTkpWtpvazs1011Wyeml03v8AVen60G2AkZxzzgkjJOAQScYIBAweNvQgd5pupK+0huScnBGW5GMYwCTkgHAfkc5WvmvTtWyEYOR6\/N8oYHjJ4ABOGyMAqMqQCGb0bStXLbDuCk9cN0zgkjafmPQ+mCCAA3ESSkn8r9Oi2+aenkrJrQ7KdRwaaT0cd43Wtmr+b1urbLomre\/W16SQBycL\/CcDHcAYxkEFT1YY\/iwDvW950w38PBGfQEk9x8xz1xgDPOSfK9N1IOoyct8oGcHPTOSc7jgHPoMr0OK62zvAwzuGT74IznAxjg9TleijJOMmuaVPV3v0Tdtn5afJ31272Xq0sQny2flq\/LS12tFpe19dfN9\/FdEqOfXrk89c5Pr0GDxhSPewLoE88crz65OeeM9zgDr0wMmuViuj137jwRggYzxjGOMEgngEDgYPK2FuQD1OcEZJPPOR0PQDA56ng5IBObg+j69dPx\/4Y6lUWl+3f7\/J99NvxOmF0OM5BzwBx2J54IzwAD15JJHNKblB0IwTjJ3AfrgHHXjkdxgtjlzdgHCk\/rg9AeR0DccdccdRkMa8688Z5APv256+vBA69AaSg+9tb+mi7fPfql5WfPBK9tNO3W3m322202W3Ui8XAxwDz65yMHGOcgHOMDIIxnjLWu1BGCCcE46MCASFAwefvYCk56nnIrlPtp+X5iCM9Wwc4GOc8EYGTxkH6ANN4D0PBPPzEjHqR168DGSc7efmzSp7631Xfy0Xa9n+e5LrR2t0Xe99Gul\/uXz79K17gZ3HjgnORkAjJwRjJHA2kHk8cMYH1DbkgrgZHVu2AecnJ\/izjcODt6Ac3JeFR1wPmBycZ2jPX0wTnK\/ezuLDlKMt8oHJxjGec8EA5z0ORg9QcnHyjLVvGDdr9enXy6q36db9MJVbJuyVtunbTT0b6LfU3LrUFxuLdvmxkAYOAenU4yeSMlQvG4Dk9Rv8bvmAwSu4fNx1yQW5A+6ylSWHHSuQ8U+ONI8O2ktxqF5HEIkJIeZYyBlcbgTzwB1CjJOOAcfKutftSeCY75rBdbsnfe0YVbqLeST3VGLYyMEjnrkA7iOylSS5W7L3kkm+t46K\/Wz62V9rt3Xn4jFxk3C6vbXVaLTV3d0lazfR297t9OajfZ3cgnO4cnGRxjOBkjHcdQcAEZrzTV77cGUHDNkYJ6EAlQSAVIHJbgZOCD0U89ovxDsvE0K3FpLHLG6ZBRwynpuBIAKkEk\/e3Hk7fl4g1O6BRjuOCCR2fkg7v72TlC2c7io44Ar2qFJJXa7eq23Vuqa6O79Dw687\/aUtHKV3o720Tu+lvh112TOS1m4ZzJnPAbGc54BB42jdwTwSCC2MkrivKtamw+AV6qcZwSPl5baAdxOQCWB2gKASDu7rVZA2SMAA8\/MOTg889AQD3HQjglgvl2ty8sckkYO5SDg5J64yCGwSSRuxycYZe1bL0X6HmS6efZLd2v0et1Z7NrbqcFqwEgfJBZSBzliPmLDDcKcD0z8wKrjDA+dX0I3E8AjuVI65woOQCOODgYJw20CvRb196sTlTgc855J6HJIOQTgrv91IFcZqEQbcignO\/g5PA4A4JJA6AEuB8xIOcnS90m09GuiaS0\/O6te+27uxwjdpNO11ZpadG9V19e2l1c871G3BBPqWG85zkkbRwehBIK9Rhg\/ysAOG1G1BB2hWxnJAznGCTzyCQCTuI7HPBz6deQhsjB53YBOcMcnADE4AzkhcE5JAOWY8ne2xOdwxnIbnksQX456DK7SeccgY62pWWr30d3vttfZf8Poj0qEFZNLe6aaas3bW2vdr\/C+1zx7UrFSG+QdwScjOMAhhgg9P75AKg7gRXN\/YCGcDqPTo2OccHlgBg8qABgMTkr6lqFnhjhQTlyehAyQwzyWDf6w9cBm+UgZrnzZ5JOFzuyCzD5sjgk8j7ykMcHqDjnBzctd3bdW\/7d69HovO60PRp0m0m76JNN7O9kt93fS91s2rpJGHaWO3BAAzhsnADck7TkDPRxxuP3gBjIrrrKzLBflGR068AAAfMoJJA3EkY3fPj5myyWlmSQACRtOT865QlmAQ8BgVEZ2LuPBxycDrrKxbaAvIHRcjBy27IYKflO7qTwcBv4s3Go4rdabtrV6LXpdPRvRbaPex7J3S5bXTtdt9rv01VrPrpdq66Lwxb7J4nIPBUcYONpy3JbBG3AJOWO4jrgV9XeClGIxlRhVyCcDDHgn7ucqy7RyuSQSCQT84eH7XEyblU\/MhOG4PA6nOQQQAe6AHJGGz9L+DYwqo3zEDAG4qDkkZGDwdwBOM53DqwBVnKq3Fx63Suuvwvpe1nqmm9b3atpnOi1y6Wto7tq1nG7V7N6a6a7a7p\/SvhlwPLXJxyDnIIY7guWOD2weAAR6AMfctDbIj5xyCe3AzjIGVz0wdpAO35eMnwvw3vRY88bSxJJBBHBOGKAZJbJGMg9eV59t0YgFD1xtIwOm33z1PzAZ4IUgHoa8zESTi9dX96aS+Vter2Wu9zpp02uXRuzSfR3fLu3Zt7qy9LJvT1Gxb7oPJwBnJBwMEMDggY4GT3wAcE11FoRgY9vUkg9Mk88jqST0ycleeNsZyIwWPXAwPunkdOx43DoBgk4I4rq7SUAqM85BJ3cEeuc8naOBk\/wAZzzz4dXRPztb5W\/qy2uraWPWp7Rbd9LLXbSOlu+r7bWtvbq7RzkDgZOAGDAMcYIJO4jnPQAAjIAHTbibGB7AdM9T7kgdsgZJ68dDzds\/K9CMqxPLDIbjABB654AGeOPlIrbjl+nTPXHJzyOSSABgYzyAwz0PLPZfPX1\/zV\/632eqT3vbdW2t1ersrXbvqrXb22FcnBzgds5LcYPUfewVGcjCjkKoAIf5pIHI9y3THQHH8R564OcLgHBznrLyBzgE4OcE8AkAH0OR90Zz3AqTzAQBjIBJ5IBBPUDkkj3PTAPABzkK7V7den\/D9b7ary1ve0WxknAGMgEgYyRkhemABjPKkAFSSMBhZSc4JySMHjOR15IB5PAwO+ScqDU8zv90AexHUg8Hjk8HknlgSSoaneYMFQcAE42lQc4HIPHAwc4GCM8jnB\/X9bGbb2a7a+jStZb2a2Wqu0nazLe7+I4wD0GABgfMcnoQRxnIwQSMUeZjbyOAN2QcnJIOMYBJIJztx+WKomYZ6nB2knoDgHoCTkEj+H5SeMLUZlIU464VSGOO+TkE8cEYOQCTjgkkWnbs9vxVne+3rpfd3WzTsrb2aWmivora2u+v6rZaTS9M8nJPB4H5gnnJHYleTztNRGYD5hg8jucHpnsQMnoOMnoKzWukA+Z+eT94HJ5IOMnAwM8Hscd81XvVDFS4zkAcnP3sHkAA5OemMDqCNxrSLur\/18vLt17lLXXf9NvuW2j8ja+0EH2IJ46ck++RgknGOh5O400XHzE5PT15I7YGcc9icY4Gc81hteIMHdgnHGS2FJ4LEdCDk7evGOwBiN8ndsk5J5PJ9+SR6nAJ5yOQBTC631V9dvz7aHRi4wD1Hpwe\/OOBnjGO3493Cc4xxnGT9RgnBz2J6+\/faK59b9eD838Oe4OOMds474BGCQCCADN9sX+8oIxgbhjI9Sc5x0OcjqRkYJNv6+S8\/61C\/9ad7P7upsvKCSc4HORkhQeueMDJ6nB7nJwKTfxxxkccnpj654JyPTJGcdcr7Up5GD14z1wAcA5xgfLzxjOMcsKmEysBycDB4YAZzxnkbeRnPPcAg\/NS+T1\/DbfX+tfMf9f1+RdZsjrnA6HPPJBwMHv2+Y5I5NIHHXnjOMZHAycnuR09cHjOeRWMgJGTgcYGcng9M88Z4I4Y5IGCQC5Xz3B5HIPXucZ9cfiBzkHlp9n9wui+X9afgTHJzyDzjJ46dBkHsQR6g4XGeTEc9yMdBtxjg5\/QMQTnvnnAFODZIz14PB6cdemMAHd+PucNJxxjnoTkYJ64H5HABIwB0HV8zWif+fT8v+BsFvvd\/Ptpr08rrr8kzjvj0zx+PfHTnGelB9ume\/oDnn8h7ccYJJpjN+JHI5I59c++SCCM4JOKjMgAPPJIwckn0xx7ZPTqCeCc0+Z+nTTe3Rei+\/fXcLbaL8l3ul67XsTZGeoGOOhx9SfTg\/iCCORg69QPpjp9T34478c9DioBJzjLEk4GSeMHOOeMnnoM9MjqDKG6ck5zzxnnIGB05wOO2c8jJqW+\/9Xf\/AAeox\/r15xn6A\/lxnn6+4yhOP07\/AIYxg+2T2z6ngLY+7knpjv1G4dhnaeR1wH+X5TUZkABwckbefl4BORnnH4jtkY55nmX42691r+Ka7iv\/AF92vyuTADIHH64x19BgAc9e3uMvJ68dzjJz9SMjGRjA+vTtUKsD1BI9VJAwOpxjjHQ53dwOvAWGeTgkDvnoAM9emMdgT9SBSc+39XSd9fn08\/Jta\/1\/X4690MbnOOMZxxjgdz6EkjqD16HORE3JJA5xz94qvI56jHPXGDgg5xkCUnPfOASCCBnoeoPfHIyRngYHIhDAk9enIIbHPQZC9+DgZBOM8A5zbsuZ7K2qXW6WvRWXa17dbFwXVd1f70\/+D6rfoGFC4J29CMdjwDgf7+GwCQMAnClhURUcDAGRtPHOSQSAM7c5+6R3JHTbiwQOoLDJzyT1JB5JPqMYAAwegJIpGG7IJ49OTnPXsMHtkNxycZAylVjfdrZvbW1r6dW3539VvrppfZtX672Vrarvfp5bkajkdemTgE4yCMgcgkZLDdyB8oypqxg9eOfxHYjjBzj0xnIzzjIRQMk5xnJIz1PJz6jHXOc9s44EgOT0zjgnHUH+IYx0JG7rjgHpgTKpd6K9ut3p8PXtv5p+tyZJPVKzbXbVdd7+bS3sk3ronIvXpgnHPQ4OM4wTg5Oentk4yU5RzyevTlTggg\/xE8k\/dOeMemclCmr7222t5eaWl+72M\/Zzbuubpte26fRX7b9Ln8tsV6CpUZ5yoBAI6A\/L820MOOOcHcxGCQOhsL3BQliMFMkEHAAOCoYtg7vutkYIAGcNnxmPVhuAL8DOcnbzwpA3KRtG0EDPOAMZLEdVY6thB8wIOAOi5OD0OD94gA7uW5yAc58mriGmrNaNNWtdbN+V1bXZp2s0efTpJ+7Z2vqnfq43fW71undL+7pc9dGqfIcM5wOecdyxI5zgAsSeBg7XxgimjVVBJ3HaC\/JyFABA3YK4Jxktnkkf3jx50NVUIcPkY4Gdw4wGIBHJ+bBBBByeACCEGrMCSDjBYZPTjscKQCcZG31HXIzyPFyT0b+z1UWlb4ttNlbbRauzR1QwsZdJWt2aTSt33stVr5b2PRptVIADNwcH5hnAAGBuAOeMgMRgcDqpNc5e3zbchzuBwAN3zA9guAvyqDuC5HzOApGGrm5NYJXkq3RTkseOOCuMP1wOcggbflINZ8+pbwMkcDJGeASVYDjALBjldpwevJ2hphj3BXTi9bu7T2SvdW1erut+5Twi5ejbS0XlZtNW1astnom09lf1fw5rTRuFDlRyBu5GVySODyTkDBY5JGCwI3fRPhPXFcIHfumOFJ6ZI56Do2AwILDtnZ8ZaRqIDY83a4Y5BPqQRtAAwAF3ZHPBJUbct7p4W1Q74xkorEYUk8YJIwW28gAHABJ44LErV0c0cpP3rybve6b0dr3fTpJq707mVXBcqi7JrTZbNOK10SavdekuzR9gaZqO4IAW2gKdoGWYEgABfmGfmI3emdrZBB9J0bUCCNztgHuM7mfDAHcFG7K85wMFicvmvnvQNSDxx4IwQcEn3wDkE\/OBtxkn02\/eNemaVqBikGcHd82STnByRhgSQcsfmxli2VyrDHuYfGxq9bSS1tvuk29nutenrZX4pYeSmmk1t1SVlZ21W91fTZX0d0j6I0i+wqnPQ9QQQWYnkDd3JxyNp5yWHFd7Z3ykLlhwMHJ2n+I4AwxJG3IweRySDhT4VpOpqdh4+VtwCkljkkYG7gZJY4xzwBls59GsL\/fsAIC5IC4+UBSo2ZHylcjk7j0UAmuvmUrq6el30Vlbyb8\/n6CjGUFora21\/mvFd7bW15d+56rb3gIHPckg45GBgMc9SVxztyCdzn7osm8z\/FjBA7cZB68jnIxzjdjgMcbeMtbzeqjdgkljgY7gADJI6EAYJz1UnnF9rk7cjrnAJGMnJxtweSTjaQQSQD1AqbXa2s7LouzultrfTd+R0Kq+XVa2tpuk0tHa75raN9tU77bUl+cjAyCDnPXBxngHlSeDz39MkQtqG3PIIGcZXBA4HYgfe9c8\/XJ56S6wSBncWIx0AGRkckqCTgAkYfLgE4IFOS8IYguvBKE84ycgkDKkqMZJA+7tBwTWiguy6J39VrbfftprrczdWSuklZtaSvpblbTuldbee+qeq6k6gXGwk8++QQMEgAEH5jjnq3yg5wc13vm6gv1ycknJXkk\/MeRhcnnHPBrlGvtgBDEADhMkE5GOvJycDIAHLZc\/Liue1jxXY6VA0lxcRLwTnftIAYcAkgA5HGDj6cirUem2t9Nf5X07aWu7X0TWhi68rWT5U+sdLpb2bST1TV077btHe3WtQ2kTTzSBVUsxJB5C\/MehyeDnPYYJAr5d+Mf7UXgr4XaNf6nq+s2lsLaF5AryICCi\/KOeCWIbbgbT9AWr4M\/bS\/4KBeC\/gv4c1PZrdq17DbzFYlnG8lFPPyuucHdk\/KozknktX8Tn7aP\/AAVH+IHxg1nV9P03W7uLSRcTRwRRzsEcbmVWGCBtA\/jYB22qQqgYrCvi6GHmqaj7Sq9VFWaS0u5aOyeiSsnfsmXhsLjMwfLRbjRT9+tNPlvf4Yppc731u7deif7B\/wDBQ\/8A4LWXVvfaj4b8AaoHnLywxPbzglTkrvYqxwhJJYHO4\/cwDuH5V\/s9ftv\/ABU+JHxH022v9dv7mS\/v1JVJ5mX5pFJHlmQZUA4AGSe\/AAb8MNc8T6r4l1SbUNRuZrq6uZSzPI7O25mPHzEk5z3HPPViTX7qf8EkP2T\/ABJ4+8daV4u1HTphZRzRvC0kT7fLDBtxyAMtjAx2V8Z3AnPL6eJxuNhKU5O7vKKbdOhTutFq9f5pLWb6WWntYjBYHLMuqylCNSs4OLqzUXVq1JdE7aJu+i0Sfof2zfsjz6te+BNHvdReUyS2ts7tIW+8YRkFuQckEA5Ax90\/88\/q7UrnlhgtkZ6jJGVOTnOQWJcZPOPlD52txPwu8KQeDPCWnaeiJG8NtBGccEqsZXODnIBwOo6DdnLAbeqXOSxz2xzwSSG4GMgkYyMgYByRyAPtrx5rR2SSVt9lv\/w\/RJdU\/gXBq3Nu0\/8A219vnrp6po5zUbgBnYsM5bjGSCFC4AVgc5xuIyepOSBnzTVpVClecZPfHOBkcksV4HygAgYJA4B7HU7jbuKnn5iQDySRjklRyVDk5BPzNkYANebavc5LgsSBnjlt3GeMD72RyQT0A+Vgpak1Nq2qvazs3dWu97aPRdlvvpzyi21vrZ9lZNab2vrpa\/mlbTAmfAYjcfXKjBAOCxzxwSOmdwzncSGOBeYKt3JGBkAttyBtPds5J5xgBuvy1clnX5j0bBXg5IyQSpOMADqr5yNvTKZOdM+VJwerc7v4cls9gPlIwFULsGQoxmnzaO9rd\/LTtprZd\/vem1OCSWitdO1r6u27Xkujvo9Xozmp1K7wcYznLKpxgEnk8Drk43LnAI2sRXNX0QbC46bRhVUAZK9Qw2ghmxgjhgVA5Y10tzwzDk5+UYJbHUADaRgk5GMgKSBljWPPGxA7kj5sbyTnGQDwwK4xhhkHeBwc1i6qS5r33tZJKXRdd9PLda2d36+HpK0bxS1V3e9lZW\/z6NXeq0OIv7XhiAxyxCjaFJO07eBu5yCpIJA+6u7bmsc224llAYZAGFHPytnqcYyCBkkryASQ1ddexjBJOCwLc5BAPy8HuCMKCASyEEYLLWKi4dFxnaU3AITgscA7QV4JXlDjABIHBBydeSs27JW03Vmlo9L7rSWnbXd+pCiuXRJptdbq2lktPVJO3krsksrMMB8hxsznoSWIwQOGPBAXd908FhlhXY2Vl8oO3O4sRhMZOSF4JAIbknByQ2GwTxl2UAyvAYkYyDyASrbQCAcHJZV6\/KMj5ST2dnEMDIU\/3QMAc7SVzuIB4Yck4J65GRUayUbX1b17W0vtsuvS3k2i1RabXW19XorfPpbR97JX2WnpFt5c4O0jGO2ckMp5LHPygYB+XGHAwuDXv3hE4Ef8PCDI7HIyrbsADGWOc5yoJAPHi9jEm5clSMrg7sAfKR8u09AcqmACM7Q3zYPsPhhxlcMTypIPGPmG042gjaG6k5AIHGDUuteLV7NWv11VvN9trK+t0R7O9nrrbW+mqXZp6O2yurJu+x9IeHmICsT6kcKMjGScBu23nocjbkBStewaPKAVGSBhMjrhwQcADIXJHB7ZxjgtXhOgXI3KQ2C2WyAw+8CSR8zA5ILZHHBBO3Ar1\/Sbk4QhugX8Oo7YII+YBeMjgjBOOKpO6vfpFJWttbySurLW3SLdynSaWnRbWaetnu9uz0WtvU9d0+b5VwT04IXByOCBjjgcA8Z54Jxu6i3lOVG4sNxCk85AGegOCcZ2k8gjO3AC155YXBCrg8le7fK3XBJGRn0Jx8wGMAiuqhuDhc4GM8YOCGG09flJBwQNoJ4JHHHm1dGl0advk\/uVtl82tLW3g7LfV2V1tdNXsrdNVur9rXR3VrMFC7hgjHXI+Uj7w4zxgY5A4OQc1sQz5wAcBQAOMcbiTuC9NxyTgkkgDj5ieItrvOF3AZzjBB9c5wAMYI2kHpnBznOxFcg5JIx1Hvj3z8uS27AwM56Zrlk7Pz9fua21Wqv5eZsnt1XTzvby6\/ct9OnWC4DcHGcnOMgYHGMZ4AOcMDxyOo5eLjAPzZ5xzknACkEgHJzhhknb0GRgY5xbgkctznqCeg7kHLYPTGD1zjBJqx9oBxzxxgKeQQuMgnPPzHHYE528DOY7x7P5NdGr7vz2u9ndvU2vOOWJBxklRjPHp91gcZIySccEnksEacDqQqjIZssARz0I6DrggdeBk1jC4PTpxjI5H8PUKOFAy2Mn0zjbSSTseWPPJBzgDd8wB25zj+7zjoRxtBdLy76+n6\/oS1s+XV2V73aej0Vund3V9u5rvcAcMcE4P8OeezKSWIJH4jcQAoJFGS9K9GxwchlG1QdvTGMnIGTxndwARWa9wFBxxjBByR\/TgHrnjJ+7gdMuecnJzzjqN3GFAxwOOM8dM8qMmhNeVttPLR79f1at0M5KWrtfVbL0s7PurbaO33359RAxhmxyAeSVX7pBAD\/3RtUZGBjnJFZZ1VW3FWAzzx04ypBzwdpHUYOT\/dIrFu7oqSuVAxnAzj5hjAIwcEjg45+gxWFNcEBgDjkZ+Y4I6bTtxkE9CCMgcseo3ja3XSy7rZba\/ilZ6b9OSrXlCyVns3ZNWty2vZu\/Mum6ttrp2T6qASQxOCMZ6jrkEHHHPJ46k54wIv7VBO7POcAnOOMNkkHAJHzEA8tlSdoJHAzaiUbBbnaMhQc8kgZPr25OcDA2jBMS6umR83Qk53OM7cnGO+cjvnC5+XOKvRLVO+nXyv2atqtNWcssZJtXu7b2btv0+XW1vvXL6XHqJJI3dF6HqOcBS2c5BGCCpKllJzkEW478nI3HJGR1wDySc46dzyMnlsAZrzmPVYjxvBBUZAyG6egxk46r3IIDYwKvx6onOxgTyCA2Mg45IBB9COuATyQ2Gl9N\/wCrdb+eq0fl0NIYlysnJrTW7XW3S\/Syve71tG3T0WK8BY4fkk8YwMbc4znj16jHUAYrQS8GPvc\/KD1BAIwAx64XgAnJKg5PIA86i1TnaMHn12Z+6pOV4z947AMDPVdprRhvwxA3gnAOM8AnBIyRnOQcjP8AeGeOJba6dtX1XXbb1tbtrY7YYhO217p6P07\/ADd7Wt0ud0L3kk9AMkEEDaTg45HIG04HHsFwRKt2GO0Zbg5zwdqgZPLdABzgEYBHpXHpd9xgc9RwFwQBhv4R+oBJIJJqyt3152luOcjHGMckkZGck85OCxAApKff\/htvw13v8tr6xqJ9e2qt87rzd+l35M7FLoYLc8HoR64I4+6zAkBlUjBO3qCQ77QCMBt2RnH8QGcbgQOQw646bjnkiuXW7HXKgbhzuPUYOR3P\/AScEkbtxAqUXQUffOMnkZBxjBJAGSMDGOTk43AMafMtPNX3vu9urv5f0r5l5bXflto+z9PNG\/NcKqg85yD0GT09wQDg4yBkBsd80jdZ\/i445BBbPIyRk4BAI6jHYjINZEl6CPv55OMZYZJ6jsWyxHPDHOFOapSXYzndjPUZPGQOO\/UgHJ4xnqOjT76X6den5NilOKV7\/ivx0Vu3f9OgN3g5JAwc8AdCSTnPJBXkMAORggrUiXh6E5IJy2QM854GADktnHQ4AyBnHKm8A4LDkE9T8oGGyxH3eOucLjbyQRhFvARknGWOD82SCOuCFwByQCp+p4DD6r9L7\/1\/noR7SzXp1tq7x6aXe9l19DsTdrsyCQcg5yBxjJwcYG0gkFh25wd21BcknALAkc5XLAD6k\/KBnkDPdiG5blY73HQjBJ4HqPYYO7BU4z\/COnObK3RYjJ69wSBksQSBk8c8jB52n2rJu2nbzuummu+3VWvslZAql7NNNX30a6dUrPrffdq2h1AuDxjn7\/XllGOrZOT1yDwCcnkECpfM79DkjoQOm7pj0PbGcd+AOdS4yDgjGenzZJxkkg4IHQjJY7geR3srcBioJGBye+euAQMnceOT7qAABUOSV+\/br\/wPU3jaVt1rZ307aau109O33GuW3DgnBwcjj6dPr1xyAM4pAxI4PX8x3xxwMenbseuaKy9gVPAJOD0B4BI5wMZ6+m3jG2RX56jqepI6Hk5A9CSCBySD8xJFc85XTvK1raea8t9fLRb979Eadla\/z89PPb08ut0roZuD9egA6c8Y7j6YH40ZOSeMgnjB5AyMnuMD1wO3JzmBXHB46cHnjJ6HGcZyBzxggc\/KKfkEnIB9fb19gQO3PU8Vi58tr66\/jZa736K\/pZaMTTW\/9f1\/W5ZU9sjscYweO\/ABA9AOnIHUVMo6HOR3GMdc9OOOcc4wQMnnkVlbOTnnOeoAGecjOM85x82D14ByJ0GcYzkn6YwO\/TPbr6+ucw6zslpHpdvVaW8rd\/lbXUqMJS2X\/D9rK7vqlotG9bFiMZJPPT9B69MDO3OeBxwDRUse09eM4A69eeAe57jPH3gRkZopqp\/e9d\/XbW3T\/hi1RdtW0\/JJ\/nJfkfxpR6yEOC2OTkFwSDlgAcY78Y5OUwAc5PX6dqu6IAHOxgWG7ls85JBHcAls5O4F9yg4+bRru1wXcgEltvygZAzuGMAbuwBBOSBkYL9lofiISEo0uCQuBuV2LY2scZGCpHzlSDwxKkB8eVi1KC5ldpptPVr9dV1um9tmcGHSk1dWXKpXbs7rlaTaSVm1qtXdPqe7HVeApcYx1yuCwYZXK5YZ4BwxY8DPLEH9rgMPmHQjAkG\/hmQkhcnA4Hyg7lJbBIXHmZ1A4bJVdgyVYcE7toUjktyAV6EBQB97JgfUyxZMjABGAAD0PAPcD+E45YA5IHHz1bESV3ZtWu9WrXd03tsmvLbyZ6sacWrSenRLTXR6P5XV7pb7HpMmsHCkHccKp+bIxyBjktyVK55452DBIrnV9zBjJtUDGRtLHA3Kdow2cjgggg8rnJrzabVMLuY8kY2nblWbKZAz0yMjcRksAf71RQ6oz8buSFOCvBJJ6kdDknIfDDJHI3GvOq4ucVdXdl67q72vs763tq1ZIOWN0kkmnfWzutNPwb1v0aPXdO1gLcKzSAZbPLqoAyuCWUEZIDDdxgg\/Qe7eFtX\/ANXl\/LJddhDjcMqASVCnOBjGcbcbiMupr5IsLsrNG8jtt3sAeQTgkMRk5wSQpbIYnpg4r3HwpqqKqDexGV5HTcAAQRkBCQRxzlsr8vUc9LMXGppJrayfV3V1u21K7TfV7rqqlCM4JOOlnbq9Laa9nFNq\/lfqfZvhvVyFiAZiMIAwPUMAD83csRyxwDnhWBAHr2k6krbS3RsYLEhs\/wB0ksWXlRghQFYnLbjuHyt4a1QMIsHcBjhieMnjA3A8jnqDlsNgsQfd\/D90HVPmYEHnqOVC4HzbSQc8EfNu\/gXaAPosFmdppt2aSV4u17NP3nfTVWVlr2OGrh49O9k+q2cbp6dbPRbJ3bu19BaPfA7DuHBUc8ADqAFIO4kHcRyWI3AHAevTNOu2IBDE\/LgjcOgJXjAyTjoDk7myGIGR4ZpV1twVIAUjL4JXOME8c4YqCDgYzuC8BT6Tpd38qncOvzAD5eMNjHYg8EHkE4B4r6ajjLxi293ZeT5V0tt1a3stmcjo310ts100UXsnond6p2Xk7nq9nen5ckjBOcuCORkAZBIPG0HdhQMr8wwN5bslQMkYwclgOSFwCGJIAIP3vmA+UMM88FZSklTkLu65GMZ5K8DuOrZx0+XPNdAswChSTxhvRuzFictwDgAfdA25C7mA71iFJp9ul01bS+zv0s1dvTpoY8iV046rvfVPt6X0fluass4IJO7bty2WHHTkcjrg9VPGFJwDjGvtQitY5JZZBGqbizHCgYxkkMRkKDyFOehAXADUdR1CGxieaaRY0VSWJLA\/KQSTuJ6bQd3zdCcnPH5kftjftr+FPhB4d1HOr20NzDFcFIxMm92VcBVXIIORy21fL4bJO4N006qaTbSWmr0WiV737L7ut3dLlqwtfli5tv3YRTcpNpXStrbX3nsvspH1J8Uv2j\/CPgS1u59Q1W1tkiUk77hI3YJknLNjAOVPzEFVwQpQA1\/Ph+21\/wAFedG8K2Gp2HhjVVkuHSeCART87gWUMoUh3yepyETOT3r8Mv2xP+Cl\/i7x\/rGrWej6vOll586JsnbyyCcEIFxu6Y3EAE5PQ8\/ij45+JviDxhqE15qeo3N1I5bBmldyASTgbiQM+gGM42gdKzrYxzThQuuZ\/wATr0u4rS97Wjsr62teL9LB5JUq8lXGvlj8Sw8Xpq7pSd7p7331ej7fUv7Tn7ZfxD+NmralJqWs3bwXcr7k+0O3yliQCSxHy5OAMIMgqg4r4PujPO3muzMznJLNz16nPf16FuSMjOa8lxJI5diWJPOc8kdO3sMck9fXjoNE06bV7y3t41ZjJIi4CZ69vl+8SDjp14zXFCFm3dyk7XlJ3k9UldvWyvotbH0tOnTowUKcYwhFaRirJL0R9F\/snfATU\/jV8SNE0hLaWayF5C0+xCw2B0yCcFeT8oznBywGVAP+hh+wD+y34f8Ag54A0Vk0yGG4WzhIYRKjMyxoSQQg4GAEH3SFPOBk\/wA9H\/BIH9mB7a8sPFGo6WQ0pgniLREMhBBjRSyfKVQlmHKhmAUFttf2KeErOLR9GtLWJUVViEYXaAMKucgH5V54VSPlPzDaMKn2GXU4YTB8zVqtazk2kpJNWtdpNJa2V7Ps9T4zOcRPE4l0k26VLTlTfLKTWsrddLtPS2qv26q5utkZRSqgBNozgBQflA4LfKTk7DgDnKknHI6hc9TuzlOFznJyT82TtwQQ3cKu5iACMX725APbB7BfRWYMpDA5AALEg8HaRmuO1C5X5hkdG2ghNw5wBg8g9SSVxnOdqhhWyqRdrXfMnd7Ws03e\/Trv272fhyp7pNSVle9762T+1a+rfWzf3Yeq3GVkYMQTkk5G0A4O7OApwMDqOSrDADsfNNTmbkZ+cnBO8DPUejcYGQoAB6KfuAdPqV4QZDnOSxIIQgYTaTkB9oIHYBkC5+UsHrzvU7rLOS2eVJwVA5xxjayjHADkHHAJPAbf2rhFK\/VW67Wfd6dNvud0cypNqPRStayequvLTX3fVdncovJhxtKkEZHIyATkkcsuduTgYydu0gGoZJwOc54C9QQowMddxKtg8tsX7wG7O04817knORndgkEn5id2Bkbd2VA4wMY5yMV3uSwOCW3EqcgYGDs4wwxhyBuXAGSecGpdZ6Xl0drtJLSOnZ+629O27TZvTo2tZdbO9npdbJW0t+N1tcdcNkl1wQWLbcqS2CT904BPHzBjhcqSAGSs2Z9wIOMHsGBBwcYyScquCqjqCDkkKAxcTupGDk8kYAzyARjBJ6KcoTzk8q24DJa4yBtI6gbj\/vBVXDLkfLjC4yMr8wPJwlUTdlr2t6rd9EktNdnpqz2cPT2+S+b3vppZaO1mmu+jiuzlTjJy5VgM9EG45IDA8qoHQg7ecgEZqRjzV44Yg4bG4ccYbAU87SOgXGMA8G3K4PDEZbKg4BOSpI4PBLMM7eAPmA5ODArcrgnG4EqVAA3dmIAG8ZKsAQckEBetYVavmno99m9E3a17ej11a7HqU4J2SXS72vrq2ndXer5d76JXN6zjK4wSpAGSck8hT1J3DjkEcnAJ4BDdVZopwCG2g4A6gE5QgljkquP4txwSwG1cjk7F3AweCdpIAB4By2CcfdzjlsYHucdRaSqEycBt52kBQmWBPLE53MdueM4Yg4YbTmq1lqnfTro+\/feyvfbSy0Ol09nbbfV6bWS0SVlq2ra6N2V309oHiddvYqQQx2jaT8p3fLtAXeTgPt3HAwd3pvh6XBUbiOhGMZxuL9wFJOQcdTtAG0ZI8otZVDAnGNykhlwMAKVyDkZB5IwBjjIORXomhz4KEksBuAwnTIYEngc7TwowwBwO2RV7br5LXTS\/T5W0dpbszdN66PfRaNJtq3XbTom1bXsvoXRLj5UONgBPJKMUxgkFgecNjJDEkhWUAkmvXtIuMoNpIZtoOdoUDuVJwM85xGVIOTjaCK8C0K9wqctjBJJA+9tO35RhgpGQQSF54GCEr1jRrrIX7x5DHAxgAjOGX5sFQGAyxHBIzWcqjbt283rtZvr01V9101Rjyu1tOzvfZNdddHfSzdrp6Hs1hcfKAWwMEMdy8HOeDwCONpHzMduRyBjpoLjGMkYHJbOQRuAJIHUnnkdMgHgNXnGnXJCrhgykBjuBz\/CMfKQAv8OSBkgBWPGOpguegBwBkluF65Lbhk7cgcjnljxgqW55yb3tppfXS7+6+qVvlpexi+z1tdJ\/NL7tDt4LoEA7sgAA+wCqehzkbSBjo27HHAO1Fd4wQxBUZ3e46nqMYIxn+9nAJAzwEF0yd\/lJXABOSNpHc8g+uc8DOc7Tsw3ZYD5jkZGBnqONuduSMjnk\/piueXe21kvz\/K+lrd3dJDU+Xppdel20ra339Op2cV3yo3AZwASRkE5GCScDK4GCcncRt4ObaXAPCkc4PJIOSMEEHoO2ex44yc8lHcg8knGcjoPunjI537epOMHOTjnGhDcYyCSeVOcZ46HPOecZ4BxngYAUYzdldNa7K2vS\/wCdr26ehrF8zTS12s+91o762fTozqFkz1PbAOQcDk4HHOTkAZ4JB3D5qVjkcNnlh6EDjkg846ZzkjnByCBjifABByDxxzwcYIxnnJBJORkZ\/hFPNwAM5JGTkgghdvPORgkcA8Y3ZB4zXJOpJPTXbW++nW607b32t1OhWdrbNra3krevbz+4lnZuucAAchhjGCRn5geSSeOABk4worGuZmUYLdQDgkHB53DnqOnzHGcAnqafcXQIIUnBxzjhl6YwRyAC3XHHPPQ4V1c4XgADBwcDsRxvGT83c87T90c4qfb2s21fe3bbz3V1e\/ZdzKotH1+K6fn+l7el3rd2G3EwXOTjkk8jdgIw5yQOBkHr\/CME4K4F3Oqr2Y+7DcMAgqDjknPXByFIbdnlt5cnLAMSpzuXJ9xwMdjn7o4IAViK5u8u2Izk4IPPA\/hHGcqCFBBKnpxjA6kcY1vLrrq9Ulpbfzuk2+hw1aaldONlrZ278uzeu+qsulmm7XjvbvAxubGNxG7kjLP8rHJBzgjAwBgFSDXOTaiyMMNg42j5gd2DnC8AEE7SCp5KrjJIxLc3iNwx5AYDJ9OcqD9eMjCkkDLZB5TUbjaWbJIIJwfughRgBR1wFxgYY5OCSMmo5nFWTs22k7Lrpv5ap7eW9rcU8I7XWi3vpdJWs2mrWWnp2s2dTDrhVlUSKcjbwQxwF+bBwT8vyYxgAgjlhWxbayTgBm298tyR3zzjgDJJDE9CQSM+LPqTB\/lfucsQGGQSGCnpu+f+JgG+Ybex2LHV3LAeYcnGTgYBJJAPfrkswJBIyDkHG\/16G6tbze2ttfxtbd6Wve2UaUrpO7S5UrLtbVXUd7qy6pX8n7lbaoWYfNnDY++BkZYrxwMdugI5H3QtdHbXgYFg3sepIyeuBlcZHUZBwR2xXjtlqYZsE7V7YBHcYwc8kfKAO7YyWYYPY2WoZCk4xkZYAKOAcEkYz32nODkkAZFH1yDWjjzbWvvfl6N+q38jpp0WrPmly92tb6Xdr2Vrb\/cnZt+lx3i55O4lTxkEZHQgAEDnKnPJ4AB2irYvSuCOvzDtjOOcfPngjgf3cZxiuHgvfRjwoHrx9Dk8Ywf7pYADB5ti\/BIyRj0wSeBk7RyRx1BO7\/dBwajWg9tduz31T+7e2ttbo3tJe9ZXvorJbWvZX0u1bW2rsrnbx3pyArEEEH7wAPHykAHGcn\/eBP1qT7bkHPzbf5jI25PGc7cdOAOMEE8lDeAnB4PAzgDavTKnPBOT6FQS2Puk2vtalcZxnPbHcZIJII6Y+UtyMAgZJrnjprq+n+Vr69GujRSUn16JtXvo0t7r7W6dvlqbct23IGSc5BUjgfezjAJ4HuuMDceoqveEZy3ORydoI7cgDBGeSMjIU8rkkZMl0AOH2lW5OB69DzjaOh5GeOvNZ8t2h5+bPAA7gkkndgtjnKjBwOBzkEaKotFzWX3vp5aeVttb7MmcpxdlrpddW9ttbqz0a1urdW2brXZxkuyg4GC3I3beobqPm67eAG65qNL4qQEI6Z5YgdABn5c4HLcj353YrmpL4YHzYJzkgYPOONxz1J5xgIFLK24AVEL4L3BIyOnGcDBwTzjLAdDnH3cnFe0invpa97+ndJLtvs7vdM55TqNxvprbfq7dLbb6W1s7dl2sd3gkggDKE5IAAIJOMYJBxnrhcjknroQ3RI4bPUkcHDcZAJ446AFQAcjOMgcJHfBWzuJJ5Bx0xnC8dyDk7SR8v8IIBvQ35JGSrKe446dOOSc9ARgDB45ArmnWirpPVW1svLvp+t9NWdFJ2s5WXfqkr9Vu+n49dDu4rnJGDgc8nI5IGR2PIOWBK8dQCMVoRT4AIbHQr8w6jkZ7EEnOTu5PBxnbxUV1uIO7PPICgD0IwBgArjg888k9a1I7tSAC2OgJIGDwcc\/NjgnrwPXgZ5ZVr\/C43ffRpabJ221utErWV7HoQbvb0\/NXvu07atWSt1ulfqVn4A3HAOM\/LjnPPBIOCDkcFgBzyKtLP0HPHU7jggDJ5JIzncPvEE9zmuYhuVIHU9MdOeRggZyAffvwQvJq9HOGBBycFjjGTw3B3NjkkZPHcbc4rKVS19Lvyd77Le3z+5enVSv1Wnna2nda27vey17G+s6k\/eJJKkAgHHCg9Tt6j15HbGaspPwcnngD7oOeMcdwORz2B\/vbRhRyggYw3A6YwQVzgFTggg8jnqSMEsauxuCAOgIwOB26d+QODxjJHHIFYqrfsrWte2199rXS2S87bu\/XyRetlfRWt0W33Nq1tfQ2Y3yy4fOMDqQcnPHOQQMAcklhgg71ArQU55wCNoOQR1PI59ckjuSDz2NY0UhHOAwOeoJPYY9hjHON2AR8pIzeScDBORg54GdwI6jAxwckj5h1HzE8Zzkntrvtre22vzaXRJO2hUYdFstHu7abWevlZbfM00bBxnGc85Pck9iAOeTksTkdeKKopOScbupAwwXBPcDseqhsEjIBGMgkrP2luqW2nvdbPol0vv5fJ8vK7WuvNpdV3d9r9\/v0P4ET4pXHJCFjyBwMkDgAYAJK5yrbeOANxxq6X4vMM6ZLBSc53dMEkZwOoXgHGFORlSTj56TXEfDGTBYnk5BJAwcE\/Kc9zzknucVcg1zBz5gGG3D58Nwd2SuAVwQpJP8AESM5L59CvhVOk1yt6NW2t6K17XtZbeR4tKSUouMnutU1fSzSsuia7N6N2u9ftKw8WR3sWDOoOCSASehCH5iVGeChbbzwWVcYOp\/bCozEzoxDZ272DBsgbshgwOAvRWy2ATwdvx9YeLJIdoWU4ABBV1GMHAz90AkED3AwcjFdVH42dhzM3zE5BfgbsDgEk9CSobqpJYn5lHyWMy6rGT5X7t7K7fN+PXR7367O51wqPl5Vqm7XTtbbWz7K2ltWnbe59DT64h+YON20ccAA8gblYgYySmCRwDtYbiafb62kbp86qMgFuAw3MevZSAxJAAUMHBxjJ+fj4ufauZTkMON4wCF+VeDkZU5wSCTuXGcgyweKJGAYPkZIBL+hj3YLkgH5upI3bgcnANePVws1FxskravR3va29t1fpZ66FrnsmldaN3aV1srvTfd762bba0+obfWUDAho+cjlipLAEkn5jnOVUHAVsbMquK9F8Ma+BIiK4JYx\/fBAUAjkbdxwQARksW4ULkDHyRpnicuoV3BYnOQwIxkAkjIPoWO0kbQPm+XPqvhXV2aRQZBksmCSdoQc\/d4AHRtxBBYZdsENXzGIhOhPmejTXfXRXd7u2mtultWdCqXjytSVm92tE+VN\/frZq3z1X374T1gv5TZALDhdxzwcEDn0yMHJORHyATX0Z4f1ZWKhSOcDJJJI2hiQNvC\/KDk4BHB3Fga+I\/BusKkURLjcwwu51GBuUnpkHcMLggqpYbc5yPpbwnqZIjYkA4JG7GMlcZBwQQN20decE\/KzV6GBxDau2tGknre7s976X5mlpo03sjKVnZR6PV6u+2ye1rJq+y+5\/VuhXokGCVVWKk7Mnn5SCc\/LyOMEHIwANo59Y0i9BVQdpPAyzfNjcAcYJzgc43E8lQrBefnHRNRICHOVITksuQDhkxgjjO4qSVA3MAQuCvrOk6lhYzkbsKMbicZYckjJ564c5I57V9Zg8ZzKKk9bqzV7XSvd6uyXr5pK7MtElzL3fdabtdJNJRsrO\/num7J6q\/uFvdqMDIUfMeegB5+9kZOPvElRy3ORgmoeIYLCAySOByR1CnLDGMDacDaoyDkbuSBlq4Ia3HbW0sruv7sZ5YAnCgbD0AKAZI6j5gMHivgP9pj9qjRvh1puoSTajFHLDFIRmVQzOASEX5gNwIAwpwShPQHPtUa7gkm29VZLd7Nb3XRvu7b9TKpTXNpu0ko2d2mrXtv\/ACuybbtLR8rv1P7YP7W2jfC3wZqs41GFLpLa5VF81VYOU2qoAIGcr820EDLA7twLfwn\/ALdH7bPij4t+LdWtY9XuHsRczRsI53EcgDsFjXbjEaAZJwC5LY4FfRP7fv7deqePLnV9KsdVdo5GlgRY5mYRx72O3KsPmI6tjoVyASBX4Ia1rU2o3c9zPIWkldmIZifvHnknv3I7DHPFdlL2lWXNKTUVZuKejdlaLs\/m+7tdLVP0MJgoU37SouadrRUoq0W7Nu21+iavtfdsNX1i5vppJZpGYsxPLHpggdTnv1xngn1xzZJkbHXI\/kfr6jJwecjp1pHcyNjk56epGeg9x7\/TrkV7h8Gvg34g+KOv2emaXZTzJNKiM6Ix43DcxPZBnkjdnkAc8d0IuTUYq77en6d\/LU9CUlFXk0kurPOvDvhPVPEV3Faafay3EkkmxRHGWGScD7ueuffOcY7D9l\/2Jv8Agnr4r8ba7o+ra1pMyQCaCYCaByoBYHcwZSEbuqD52JJbaAQP1C\/Yb\/4JX2qW+la54i0faWWOR5LmDY5+VCSNwzGp3ArnDNvBJyCa\/ov+Fn7Pfgz4ZaVa22n6daQSxRxqrJDEpyBtCqyhXYjH3gA24KMsM59GjQhT5Z1LOa2irWtpbr6O767JHh43MvdlTo9U05ddLXSs+z30S3u+nCfssfs+6V8JvDOnW0dqkM0MEIOEVGdgMqSwI4BAY4745Axt+5RdBUCgrwpAAIIBHvuLcjjBAYMNudo2jj43gtQEQjAKj5RlVBxjPzYyT0OMEtnA3Fi2XWoEZ7cuA8McXmDeDukmyUUkDaC+5Vzn5iRyMYX0HXc\/tW3S0emlnr0SV7Oz02Z81KLcn7yu7u+7lzN3Tt9qy++7bvc2b26XkFgOnIJHXHQ5z3BAPAwAQRlByV9OXKqrDn5Ry2C\/zAtwAwIJPTdnZkbQSaqal4gsbfc0tzGVjhE0kYlQFA+9YS5yQis6v+8fCgI5HUKODv8AxxYPc3SWrxTSWhxMq3cESwhoxKTclW3xQpEZS7bTJL5RVctNHmnVimmmlutbPVWa0d7Lom9la\/W+fsJSajGzukklZvXld+1rJpNuzaWqTTd\/V7iOCJizchSzsV+WOMhtrnLEBiqs3GQiFWADk+X5tfyh4WmK\/LvITcx38BXLbAG2rksQpw45BCkbT5\/D8WbTxLHqMls900lhcWmlFpgYZNQ1qczz3AtopJEJsrGGSadrglYJBbi4JjWOJ3SLxNbz2Gn3HnCSK6uJrWSVFUwtdmCZPJidX5HmxuhKxCN3jwsrM7xxQsS6iUr305r26J6Xet9ls2vwNJYVxlblfu21bsk2otabadU0lslZXLd7cDer5K+aCSN2SrBmjJO3I5dCSRywKjALYaFZ5CksoD7FcKG2O6FzjCkqcZIwq8DJ3bQx4PEya3bvJcIZlby2MI2uC2IwHyFK52ncCoGAeCR\/rVM934t0iw0tEutUsrZUu5BOLi6itzvY7YFJldDKZFXChVJ3hSrbhim8Ry8rbW+jvbV2tq3daet1fTRWIUFzW5XeMVJ6Nx03slZN630urra3Mjp7i5VwSp3AgY5J2k8gDk4YhcDDE7QCRkDGQ1wckEqMc55GecHrzuJG\/I3KQ2csBh+d0vxXo+rR6iLO\/tpVsknaWZJ4nXfbOWdFLMoyAu1wDkP8u0\/wWPtBMYcZ4KkEkchQQ4J6HnIJGAGG4lQQoI1lL3lqnbVN33WurV9L226dUdsPd6JbbJWd2raX9Vr2a1tZbTTZXAZSDkZBZQccEYKNgf7IbbwcjGAWrN02twM7S2Nx+gIJJyBwwUbmzknAGMtwSAxxgnjkMOQ2WycZUJkNhVXAyFXhTJHMS+ctgHB2knn5mJGcgA\/MdpAwVZhgMQmUm\/eba166310u\/wBLX\/y9ShZ9Xfmdu3K1fVrm+5PXlVk0m311nLkblIBIXcQxUbQwUfdJIUbu2CQS2c5FdDBN0XIK4A+XpznqNpBAy2E6dQQQSW4u0dsADPClVBIA4cLgdVGGLY4JPAC8kHpYnOBnJJJzkAchSSoBXGOWABZjuPckgZ87vvdX7W6K\/W3fpu9k0dyipLo2rL7mr7Wvp8OvZvsdXZ3QUr868sDnDcAA7iwUZHTB5A5G0HcBXdaXdlQhLYwO+B0ZcY2kAsTwxZl5JAGSceY28pBBByFK9sgHIyVypOSxBVeBycnPJ6vT7oAqpA7cbkYFg2MEMQQSoGAWJ+8QpI+WXU63SWl3pra3a99fkrPXa44qz0036bK17fe9Nb26HvmhX2VjGSAeQMupLfKAQSxKgEgg42gZAIwVHrujXS7lywAZlXOGIJ2+xLcbhznqAR91TXzpoV8cIS44JDnIUZK7cL90ZOOpIbcSTjgn2TRbwN5a7sgIo+9tUDYo2g4LBFIIG0k5IHGFNJ1Vq7rRN7q9tNunRNbbp6J3XK4pST1tdOzWqu7Ju3RaLqotJO1tPb9MuwQuGP8AdIwSTjAyCcrxyCQCuTswH4HX290Ao55bcc5fB9QeC3+zggk5yck15dpl4MKOrYPGVyMkBgpG3lupAAyM9c8dla3B2gZOCMg5DZ3em3Jx0GBjgcdRjL26te21tPuvp387a267nPVppNSS5ou+3R6atK2ytffz0OyjnGVOQ2WXgZOV7YyQOByGxgYGOuDpw3HXoDgDk4\/iAyOuAMAk4PAwR94NzEEx3BQTzgjAGSSABnPGeCRkEDOOuWF+KcjBB6AE5O1uSQpBJA6ZyCFODuPClqynW00SVktrO22q66fhb1RzOmlbo9LK1lut7dbpar57o6+3nwc5xgMxyRkg9chsHjjAJBIUjqTWvFchQM4AYD+LGTg52\/KMnbnJK\/Lk9TzXEx3S9+Acrgt7KTu6AK24AdgVbjAFaVtdF9p8wAKcKQQcKRlh0J4wOCBnI9Tjgr1uVXetr6t+cd76q99La626nTShzNR0Xw3uns+t1pfbqr6Wdnr14uOM57ZIOTkg\/Lx8o44K9RwMADIDXuMHcWBySBnJGcYOSCOM5ySepGc5FZQuMAAn7oJOCCFweck44AOMZJwTkdCak92doCnoGw2d2BnkcHnlQcEsdrcKAc1508RfZp\/hs1rsmtbva93pfr1wpqztvto7bNJt6vVK9tHu9mlbQmu+W+YcbcfMfvEHBxwO7DbySu7ANYlxdbgw3beBjHLMc8ZXJzuyRk9dwGcmq0twWXBZsbgWAJyOOGzwRwMHOCwBUDLKtYlxcuMc8ggABww25IHHUYJHGDzlsbTleZ4ja8rO2zbSvZKy31uttOtl1IqQSuk7636qyTTbfVW11vd67W1dd3C\/MBnlj+Y9Wx\/dIAOTnkDBANcreXHAA6Ar+uQPoAp3ZyAFyDy2BYup2y5zhcnOGC\/LjGCTwSBjA5AXlhj7vO3MxOVzySTwB0OchTkAdSpwcnBG44+bnnilfd9GtUukd7pN+ejT6X3XK4buza3vbSz11fqrpPfstirdXGB1AOeMnbnOFxgZKgLhiFJOfmyQK5q8uS0ZBYYXB43npwycZ6ccb1O4ElhgE6lyTjBOTnG47c47gnbwoOAcEE8ZIxziTpngMVBJ3ZxtOehyOmc4BIxjnAxzxTxzbSik7vd38td7Wtut+qtZNkqe9078r2s+1tuzV99Y9NTkrh5TI+G5DEgZJHTAwe21c8465JCrlamt55I5F+c5c4BwQNu4k5wxIwVwMlC27GSu2pryAB8hg33SRkICM9CByrfNxgbcqSSc8kVm7tBJx5c25d+BnOV2qQRkcsVyrbAfmySDXVSxE2vi1drWdkk7ddLpNpOyaWutrt8zptuVlpeN3p15b66fpe+3fr9MvWO3PALd87jgqTkZ5PU9MAgjknJ7axvT93cDtJJGfv8AXJA4JJOctgdRnIOT51pYUswkZVaMgMpZVbO8jod5wuDt3DHzEHnbnq7KZDhYwcZwCRtVvLLfLk8nGQOCRj7u4kZ6FXacfe10tfbdK1uzemqW3mXCkmlZJczvpdu949Gr6bX3v02v3NvfkDGQDxjBYkH1IAAHCjrkHo23JB0o73OPmxgZGFHKnBHO7I3FSoJBXjnoRXGxS8NvBBwcDcMDaepBHACgsDg5455O3QE+HZQSGBdlcyAqV2nCgD5eCcZywOVI5AB6FiWlrprtfp7tlr6Oy169B+yW6v59u7eidru2r7dbHYw6gF4YgcAk8kcDrgkZLZ5UA8AkMQBVj+0AvGRkAYBOQQCSwJA3fJjIPGSRwWyK4o3REZLNtJPygZ3EgksCSp6DB4AXaflGMAQi\/d+A54A65OcdcHIHzfMeD90g4JIrSOK03tful2STTbsnq1ay2XmTyW6LdL127rW7erbtudpLqCgHDDcQSQ2R1IXGCc8YJ55wASpwazJtR67iAwUfKTuPQHgZGeeACwOcnAziueN65J+fCruyFK4yeRy23kgAcgfLggdjlXF4RxuZiAcDJyW3Etn5sHOMkEEseHIHXT67JJNPdXsrdl2dvJdV2tdidK99F26W6L10Xp18jpG1MkgFsDgFslepzzg4ABLYII5BBUjBpRffNkuQwK7STk429D3ByeQCQxJJx1rhZLqRSGDMV75OOBtJOPmILEAE5wVYEjOBTo72QcYYjPGWwQpG8gggbSDhflB3HngE1MsdKz66d3q7L1s9elvS++fs9dN7rvezastn3dm7HoceocfeA4I4JyMkYPOc4I65wxIBPAzqxXyrn5xgkA5z2zkA8scb\/QZPsGJ85t70naOQFCjG7KgDBx2YYPJAORgsCFUsdRb7nHPJHIOMY6EqWA+YjJOcHkfMowMHiG3d31V7J3Vla11t0drWva6SuaKHLqr3ve3\/AICrpaard7bu2t0vR7a\/UkgMMqCNwGV5G4knGGJ2jAHyjoRjArbiu8gc8kZJJOTtx3XOOAMYwQQxBwoDeXW1\/tYEnOSACBx78cMVLAjHAK9wQSvS22obwMNgYHuMn5h82DtLZAznLZIxnGYddq1npppbVp2vpu2n5dtd76w06arvs99bP59unTQ9AhuFJ55J2nOSSDnOBjb2xkYz2HIGdSKbJJ35OfugnBII7gkZwMZ43NkYx14yzvACFDEjbkZYDJGedwYjJGGO4Hd87HAINbcV1gFd\/IJ4DAqGC4GOCMj6DGRtOAML6xbeSV7X1XZeqsu17d7WZ6VF+6ru+1nbtFNrXpe2uvV6XudTHcg4AIHToTkjHJGepODk8454HStKGYEDOB149e46AELkgZ4ySQTiuTjuG+XknkHkn72PcA45\/iAIHUjkHUt7gfKNxJyBgnknPPQYByMAAjkYOelUqvMvib0Sevpv96vs97rXXtjayaaaetuqem2l7er7M6ZJgOpHTqCccAYxwODgZyOTkHGciZZxnrnPHHTA65ODjgj2XjIHSsUTEryRxnHIJxzwACeCCDyQecMOTTxOR0Ybh275wQOAMj9cZwScg1Sl1T3u\/wDPT7unbyKSS2\/q2hvCY88npg55HOD6YycAHOSCRz3orIWXOO\/HGeeecADnPHXsc8EkkAqlNrt93p\/l\/Wlnb0\/q3+S+7yP82iLXcDaTnAGOnXptUnAyOADgfdIPXBkHiAqchj23YPy8Bs\/L2DY5IHpgjBI8hXUCq4EmAdxI3EA8qTkDpgcE45wSeTw86nx9\/GSMEnkcgZA+b5htAXKjqM\/NivrXSuutr7NecV3eu7Xy8j5D2sV8MrddbpX0tpb5aO7fWyR7RB4iGRmQjGB1ycAnoM9RyByAQBjJyK37fxCxCESHsOGB4ADcZIHDN14DAHPUEfP0eqMQGDgk7BkFgQc5UnJHPGMHHQEYbBG3aayQcbsE54BwDznGSNqnHfg4weDuNebisNzRuo6paK3pqn6eem\/Q6aVd7qV12Xy1a329b92fRMOteYBhjuIB64PuOvJBJzngls5GGJ17TUztIEhOM5yx4GCeAP4c7sAKQg646Hwi01rG0bjxwdrHAPIXuSDkkAdVGMEDr0EGv7F3K3UAEckjB4OMZIwSPYDJ5INfK4vCzu+WPla9tVok7bXW2u3e1j0Y4hbOSa92zWu9rPf7lt+NvfLLWgnJJG0nJUnI9x359OepHA5r1bwp4nVZYw0hC7lIwASrHBXAwAMZGQNzAEcAZDfH8fiBs\/LJkHI5JOBxxnr0OdwUcg9ec+g+FvEHlzxMZQoBU9SMkAjJx1XDFiMBsg7cEgHwsVlUqkZc0d03Gy66WtdaN6vstFbXVSr3Xupc0WrK6teyt3u\/R9Fpqfpv4I8Q+asfPJ27juGeygls7XOM4BAwGw4BbNfV3hXW1VIQGyeSqnLHam3LcoAVwSrMOm3L7cqT+anw68SySXEEMAWSZ0\/dxncd2A7M20AqCo3Asy7eNzcbhUvxf\/bc8I\/s76fK3iyy1e3uolVbFRpV1Mb6Z45CqJcRiOOBN4KC6WCeFWBQtKhUN4mHyzFqs4wpTlCNrtRbjrayTu0m2+RJu+q2tcvDuVduMIuVR3urq6st27p6LXXv3P2e0XWjsVg2ASAWKhlDKBuKvgkEbghIPXAwAVJ9Z0\/WhBEszNuAC\/vNoCBS5V+pG0KDzkfK2SwXrX8ldz\/wXtuNNvTHpnwgZrGC9VZJ7vWU+23FmVKgyRpD5KTL8kkXmrclpFYefHFII4upsv8AgvHdRxkv8O1n0fUY5re\/tY9SEGqabJKwU3Fvdwx+VPatFLGYGmtoZmVooBP5kcyt9NQyzGQSbpTTulJPlU9VZNRbs+jktGrrlu7pdKwWJjZKCenN8ce60f3WV9LPtov6Yfjf8ZrHwP4SvLqW5WMpbTMGLAhflIAOCccjOMMC2SrYOT\/HV+31+2JqvibV9Yt7DUnaMXFxCUjuWbyEJ+VnQdDIASpIJBUqrkKMeq\/ET\/gqnF8Z9DudD1qC40iLU0e1eWUonBCKl1A6EnzoHYMyyALJGmJHDM8ifkD4\/wDDlx4m8VzXdvqMWraff3xjux952sbgkSyLCzbzNAWeRcOGDRKQdsih\/YwuBnGonWlaFkkm\/hacXdq+129eykkr6vpweBq3c503KcUkk0pa6aqztqttE3v6fGPjTxXea3fSzTzPKzSMxJbcSWbJ55znI4GATgntXn0pkDMH7NgkHPOM4DZPb068Zr6b1n4B6xBqN1ErRpaKJImQyq0kdyGAjGQVyoR9x25BIjAzk7ZV\/Z\/1mfR77U0jDAX9mbfy50Z2iZboTkRBVc\/NbgIgUGMZDkkqD7cOSEUk42S1s01t5fJWtppojudGrd3pyTu9LNba+nktex4d4M8NXfijWbLTbaNna5niiwqliS7DC\/7JYc85x+BI\/rf\/AOCX\/wCxLYWdnpOvaxpkfmn7PM7yxDLSAoxHzKAUTcFUA43kNknFfjH+yR+z3aReJdJ8QeIpLe0s7WWHatwI418xT5pmleR1CnbkgYG0quflIr+iyH\/goJ+zr+yd4V8M6Umuwa5q80aRz2ehulw1lDHaGSQSMiPEsxmEccDOyRkkFyY1hEu3t6WHp+0ck6kmlCKTlJttfCo3v1v5LVI8vGwxFVqjSpz1+KS0Vlr8V1yu6SWrXXR2P3b0DTNH8G6VbWdmkFrHCqIx2pGR8oQkjglg7KQo567QfmFaGp69beXH5EgJlkgETMNoO6RVifcwJ+YKuQduQxO3GSv8v\/iP\/gtl4Z1jTPFlxZaZex6i0UcHhaEPIfJupWJkl8klIpWQKFEs7M75aRYgjpCNvSP+CxXhnVfDQtDZ3z6jbaakbSXkptgL+0k0XzL6WaIsxS4nhvVtrSMM5e4G51PmBeeGOm3zSjV1UZNOLTf917RVopN7JOSb155R4XlGKabcUnddVZ33utW9bWdndLazSf8AQ1F8TdNmsJbtLtdh1TVLeNyd4RrTUEgGcEkqiSJujGTjoCF3D5A8X\/teeFfBtz4r1HUNUt1h0eyvNcnE1xAS8UNqLfS9OhjUOWmJuJbyV3ZVLWp5RVYr+AHjP\/gpxcwfDvTLbTb03GuSr4h1VY5JBJbQarrlnYWy3l\/OpVrlrc216bSGERpGXjkCSxq6Rflx8Rv2tfGni\/Rr+1kvhAmoT20swsw0Ty3MKQG3myZCoIkW8nmiOI4RNIRGsM0prSWPqvljTVmko87slzckb2u7tqV22lZ2Sve6XVh8gveeIko9oq13ZrVaPpspWd2ru61\/pY+N\/wDwUWsfC\/goXJ1exPiLxfEdTsbZJSY9J0u3lt2sW1dd0apdW0EEdnJp1mJVe8cW7Twwi6muPhe9\/wCCn11Y+HdTtrfxHeSXt7HcLNPBMLqe\/wBT1A2WLqaeYiC1s7FZJILVba3SVFtpIzb26X0cMP8APZrvjzxV4jeJNV1u+uo9kNm8jTzTugV08uFpmUfaBbQpFK3kq1uGRWUlpFd8aC9XEFv9oUW7Spl7icseF5LLCWZmcKold4o4lBEaNgkjGc8TVk3Oo4xfuxiukU1pq9XJW5pPd36JW9SjgMFh4pRpRlLm5pSund3vZJ3tFLZXcU1eykrv+nb9n\/8Aa0tBoXiDXtV8Q7bO6U2On2l5qEU5FveTx3d5eW1tKZEhiurm2CXTSxb9Rt7HT7Unyr0uPo7wt+1poBbw5p1vqB+w6No11c2yzvGTqviC+jMMVzfXJjCx6bphb7TPdEw+YZXhhtJWuLS3b+S6w+Jl\/pgWxt7x4UhVi0fyiGeQ+XDDGIz5okMAmceZIchHuNhSJXL+o+APjJr2qa0bX+2tRm1u\/ujJpDvcSyNNcTAKbUxrkSTSqsUtuqMx820iiiRj5EdL22KpxtCV1GCik3ZXTTTejdl2XLa19XZrSWX4KtUUpwXNKSs3FXs7aNp3u7btSu2no1c\/q3n+LOq63LaeGvhDBceOviF4lvZbZ4ZYzaWmm2MctuLnUb+6nSO103TVs5ZbqCRGlz5UUJBnVkk+ffGP7Oj+L1n1j42\/tG+J38Vafqmn6tD4R8D3yWGieGbX+1FhgiWUvHe6lNOk1u8lwiCPysGCPDNlsf8Ab37LPwP0DR77UG0b4j+PPCGoanq2svi\/uo\/EkvkwaXYTAFbxNF061lk8yGJVWXy5LiHCxkJz2neG9Q1PwJfeIvFs1tqPifS4RBq11JO8cE8dzcqLDTRJcJm7gjPkzyyKzSKR9n3hIY1b8szfibOs1xFSGBxqwGWUK\/sI4mjCFTEYyrCajUlF1IunQoRl7kfZrnd1Kc1zqkv03I+EMiymjSqYzCRxeY1qftZ0qjapYSnOzp05O\/NOrJK8rpLmbSutXej+AfxG+1xa\/wDsi\/tLxXeu6fZw2mu\/DH4ptvtdb1O4kuJZfsWsWwNxZNPa7mQT2lxClyybp4XdwPpP4L\/tJ\/Emxex8H\/tM\/CTxJ8OtatrlreTxZYxf2x4J1K3jspbwXOn61ZiW1xJsxdRSMlxbCWCSSONTL5XwVf6wuiaxolno91eaJq2nO3iySWG5PnWt5chXsbS2jkSNLea7hjXCyXu0R3ETmGNFwv0n8Hv2ltd0jUdAsNf1B9SsL\/xLY6zr+lajKt5BFou+Gz1eXRrSRptIvZL22jmOoGJmuLZzHdxvayRQsrwXE3FGUQt7enm+Gg48scVBUsVFJrm\/2mgo0qqtzP8AeUJVXFKLqNWRvj+CuHM5fNCi8uxUr2lQmlScpbRcGm0lLltGPLq5XvJ3X6mWk1nqQeewuIbmNfLMklu4lgQyKzFfNXIQLtZMMqsNgDksCtWUUqx4AIxtUjPzH1U424I5OO5PB4r5N\/aN128+Cs3gj49fCeV9U\/Zw8e+IbPwt4\/hN9fy2HhXxPfTTvY6vG9jcS\/ZdK1pUnnWBpHtDeZijuRJdReb9H+HvHfhHxJZ6eNGvrfVJb2yivUm0ydb+Ty5cwoZ4LZJjCskiTfMywGFoXWaFZF2j9YyPP8NnuAo4yi3DnvCpSm+WdOtDSdNq2ri02rXvBqWikj8jzTI8RkeMqYStFSUbOlNXtOFlaT1tGSTcZwaTjJNPsu3hdUIBIbAJI5O7llHUgDuCrrle46gdDbygjkDd824FgckBiVJwRuAJx8pzjAKnAri1lII25GF2hXJPG5h1yQQxySAMgEEjcGatezu8Ek4UsMcMcMQDkAds5IweCC20DawHqylfa7tZrZXTtts9d99trbrhi7Wuo9nZrS9lfom9brV7LfQ7CK5xhgD6kFRjIORgsenAUE84GQflO3YtbvlCHPUY2kngnJHPQYbfjjaGBwMEVx8c25SQcg4+g4HPJxjIXbwSSpJIYbVtQ3W0jaeNzHGRg\/MQST14yB90YOSeeGx5te737drJKzv3082nqauN1a6d01v0XK1pfRa\/Z8r6Oz9j0XUj5qAEsSfu8EDOQAcDk7iCdoLEsARnaV9i0PVNwBZj1Q9sjjAwxAHR+MgYdcrlBvHy\/pt6QUbOCCcYLEt8vI+bhtuTgkYOcAA9PWPD+pAhQXypZSASeq4Odw4+b5fmb5cAfMCSaznJx6y1V9LPs3bWzT1t0011tflcG2r9L3u0tb6q6ta23xK6tqkml9N6ZehwMPgqvUdCwOQOM7uVwNvXBLNkceg2F4GBOT1LDbnIAAPO7aBjkkDqGG7AHPhGkaluVR1AQA8uSVJ5JYYPOfmKjABIDFq9J0y+PyjJ6ZAOc8qASQARkgbjnHzFRydoPPUm2m12vv3ellou9n+goxjbl\/PztdPq7apL8dT1WG5UAFi2MICmRztDbjyMZI4yeuOAeCbX2ngYzkH5SAh6\/KORjpjAIABPqSRXI2t2GK5+UfdwS3BP8Kk7vu8cgbgrHAYHFaCT854BAAGWbGeBkDGTnAyCewzwK5J19L2tp16tWf3dmttbmPs1zX1dmtG\/S7v36u93po1pbplumGwEqmRuDOM9eBtG0sT35UEnOCzklda0uwTwcnPBAzwfTawAYDAyTuXPBY43cT9p2jggcMNoHTK\/KCy4PIyGOMBSQD8oAtW96wwpfAwuQcg9SBw2VJG4qoPHORknI4alWUk79tdb9UtfJK3V73fMtRQXLJPVcyu3sk0o7W5U5O92tejvdXPR47ncp5IG3qQB90g\/L82Bj3JBUk4znEMtx97oPmJCgEDODj5ssMAkjLYx\/EBjNc8l6hRPmGdoAPzE8kD5uFJG4kk7QBkgtlSA17rJH3R8xACljgkHryMNyTz948kDIrzqtWaummt232S5bNPdvZXvd6WS0Rvzxa0e\/W+70i9O+lne\/W610uy3QII2jIGRgDjOBg5G37pyeMZUE5wFrGurhQoGcgZOQCMAnAIPzZznAbIAyP4Rk1p5xk854Dc\/NyM4HJIHHLYBJ5JyCTWPcz7eS3DDAAJOOcluM4GOTjPQAEE1xzlNWb5unpuna61a7Wt52V08nLotG9NL81tNemq0Vu6S2JLmYHI3AL8w+Tk\/dGODz6E\/MT0PBPGNO6kttIYDAwAA3Kjg7uOQOuSDtHrw17nkqvBwVAJz90huCOv3shSvOCM9M1yVm2A5UE4Y4wc4JA5IzgjsrjngAkCueUpzfKnrZNq9l00s7bWu22\/hbtsSlH4kt9+Zq2vT4r3va8Xe1rdbkUvz9sLgBsgZUMVBZRlQSpxu5x8w42kkZ00O0qCpVsksdqHOQckKTj5ox\/D9\/nglvmvPiORFSVS7JIxXc6HdEd3lneMNvTPDFTgKMZyTDqOoQxwx4CuZUI+XJV4w0ZDKVX5SCHIGRubhARVU8LObfMmmmtUm9fddvLe\/TW9n0KknJNavunoveSsndt3Tta2zfexiXsI8mYkFki2mN9j7W3BsrhsMCSPlBBYFgNxyxE8EkFrb2rTx\/P5pMYxuBDBXCEnGGI43ZAVWZlJO7LJ5cr5LESRSxsIy7FmkKMwKKQW2ybWby2UFWUow25ynIancyTEGHh7SIsisSftCxgtxGpJJZG3bly5ZFkAwpNejCjOEVypp2SSs+6tJu2yv7vokrLRYqnKLd48zcUkt+qeqaTTXutJX6X0tbsJtyXE8sJVUkaR43Uq6oylpVzhQWAePYAc7izJ5ZIYnWs7wC1kbzkVxJHNsj2lWQIFuBt+XJRMSEhh8hY5OVx5raeJ4bqze+jMSs0cpuED7EgvbB1iu0ZjlVeSMRTbiPKeGdXG0qXWuPEcFvLZhLi2MTykNcAKY9+yOSMlmOwwywEblYqih1bJQEvrKnJJT5ZWtJtpNOz2TS8m305bNXVrHRHCy5l7sviVr7qzWm6tfm2dtVfpr7I9+Ps0zxlG8pXZGDDa6IfmXepyQ6vuBOWVlKlMq1XLTVLZw0TAicIsjlCB2A+6CpA+6cA4bO4j5mFeS3mtwEwfvEiN7OlkirJ+6aWNjHcBOSAGhbzwoAdVXO0Fcolpq1wmvQx3MscQW0ulluEZZEPkq6hcZJO9oXA4aPksg3LzlOVSFlGFS943aVrKUlFX9NLO2kdHayvu8FPZRWrktVe2ia3tq3s7vd6bns0F9FMv2bhpEkdt+fmYYK5DZyFIGVJzt5AILHEckgAYhD5mCRnBJHmbSCCdgyAwK8A88MX2155aaj5t\/BJb7vI+zgvkkEMssQA4PzMyttOCSVIIACmr91rFxFLHFAY2aSYR\/vSwZlZl3DdjacFpIwQwCjZk9hlGdaKk3zWTUuZ9pcrSfR6Nau120nrdLmqUWrvlaXLy9Ha1rPfystVtbXr18U8eZY33M+0bRgEDknOM8kALgk7sk57MU8pnBznnZgMOGJGe\/A7NkkE8rg5YVVkkaKSKFlJZ4ml8wsGLDapCY7yEEsWPB3M2Q23Nwuz\/daQuy7+cn58KMKRxgqRnn7oPsBp7WST1tbltZPrbpZp3bT0taz5r6mbpLVa7fy6NtLzvayfV76Wdr0ZE2gMw3K2cEKAT1JBUYXdj5tuAMcL1G6m42kt\/CeTxjg5IIJUbQxZT3JZt3Jww05YpBDkkkN95QQSNj4BAY4B2hgM5AxjjgHMljYgAZI2jLDcRgqAcsTjaBnI4AUjJPUXCVSSV1uveu3to9HstG97pd774zik9NrRtpbSy9V929r6aMkjuCozkDA6YJOSCvILE8DJJOCTgjBQZsx3fyggHABLZ+YDGRyD6ZXAGQCB2Azk+Uyk7hj7mPTJ4zwdowB1YcEgKw2ErHsc7SCPlyOCwXG4naCcAk5ZyVzkEAqDuAu0k+a+mq0d0o3V9o6a3fVL5XM3ddfv0WrXZPa9k32vbc62K8+bGfmBIxtHPB+Y8ghgQCQF5zyp4ret7wqF5yBzkDk9+oyDxgDjliMnGa87g81XyNxAB\/iIGNwGCSME5zgHIyGyOcV0drOxHOeSvUYwSDngj3GQTkluBnqOLk9HZxtZpX7OPqtW3fX3db6NOLS0t6J+ibXf1\/Ox31tqJBGWG8AYK9tpyxBAz8vUE4BPIbpno7fUslQSD\/AHjySBk8lc4BxggYGVwTnJx5akrDjkZAJ65wGwMYHoQQuM8jIAAI1rS6kGBkjA4ycHJxj7xAJ5IwSR93cuASYdKSae+mqWltm9U7v53d+j3NI1bO10ldbrW2luy0fz187HrttdZC5IGQGIwSFyMgAMcEHI3cYyD3JFXorrpg9yPmG7q2QfrleAckng5DMa81tL5sDJ6AAHcfTOCQT8pGRkFlHBPHNasd2QwO\/Az93luASDjPGPlK4PzNgAjJ\/eXThOMr+bd+70strvVu92\/JnbTrLT3rW32emn4X0tZavS+x6Sl2AMHJABAIHX7uSRz9wfKMYA+8dzZJetyQ3LZIxkY6ZOP4QcE855YDBDZIxXFQ6iMHL9M4AzxgZXPI5GANu5sgdFPzHRhulYEhgSeQCGGAoxjPHfI5yQQQT6dKT69evLdPRW6JLv26NJWR0RrxdtVok7a6p2\/Hp3121OwS8XZ1PHQAZY4\/LHTqeDznH3iVy32oZGD6gY79cjAPJJAAB+bnp8pwVa5v5W\/x3a8tFq2k9dGX7WD6vptd9t7efdfnY\/zIxcEA\/eI+ZQAD90YXJxkt0wDgkjt8uaYbsjHXnaDzxk5bnOMjGOoxnPzcYrPSG4IGI2HBOdp4YZ2jhiqhRgHBGcdNpzSPaXDgnyyMY6cqcZJA+XgdAeu0\/MOQBX37jo7Sdtreei1tvtbY+AdaasrO+jd1ey0utvJ6r1tuaEWoYONxUDII44B7FgBjGB6gEcdKux6iV5DcgnKg45AI5xuIAOPXoCOvGCthcg5CsSeACNx5OM8gfMAAQABgnAyOBMtjdLjCHd83O0kg8Ac5xnn0PA4JBOOedKL20vZvz0WnR\/5J99n7acNrvRX0abvZv0327+jOyttYY\/KTyMHJbLZwCcY3YCgYJ4b154O5BqpK4L\/e75LHB245xj1xkHADZxnjz2K0vAcgHGRkkMQeB\/sgrjkZxtPJy3St61huyACp+UgdMgICDnnIBIODg5CjrgivPrYKMtUuutls7q++1+nSz7HTTxjfxcyvbe21l1t991uur37ePU2UkFyAODjHqBnjPBzjOSGGcdWz3Hh7VXWRPmbgDBHAwCCoxnB6c849MDGfLbeyumIJDEdcHPvnb1HAIIIGSAMk5yO20awugyZVuMdAWwpwCucnKj+IDknIBJIB5JYCMml09HrZx17q6Wuu\/wAjdYtKz93Vqy5rt69Uul9\/89D618C+IHhuLWaKRleGSNkYOVY7WDMQwKuu49WjPII\/i4H6PaXonwm\/aT+HOqfCv4oT6Hqeh6vpd2\/kaxFZaJrujaksQ+z6nYa5qljqOiXItnI8r7XqMVxOWwbYDdE35O+FUu4ZId25gMHGCPl69RjaWBycZIZlzkAZ+r\/BmqT2skLxQxxfKw8+RGuiC6KvzQzSGAAgFhuiO0AFcLkHz6+U1FzqmpyhVioTUW4StdNSi042nFpShJq6mlKLUkmdWDzX6piKOKjyc0JJNPWM7XvFp6OM02pRkmnFu6eiPxL\/AG8P+CX\/AMXv2ZvE2peIfCFtdeNvhxcA3lte2enrb6hpNvOZJUhv7O3ee0lg8pfMhu7OQxbDiaC3lJSvzAaaGO2jlhWW3vQn2fUdLnjkDRSQqA11ayOod7V9rOY3ZntnU7pJAzMP7svAutWevQReG9evNKv9Glh+zmz8Q3EcmlOJfMYWraNrUc1tbiRyJQ+mSWywTHzktpVLxN8I\/tIf8EvfC3xL8Q3XiLw\/4Y0HwbfwzwX+j6zo+lT\/ANlanExU3Edy1kgsZ9HKCS3uZgt5Ja2hlF2bJ\/LST5qpmmY5FVpYbNqU8bgp1Ixo5pRhFYmlC\/uxx2Hi\/fqRStOtTUIzinNQlaVv1vAYfKeJMNPGZVWjgMfTp81fLcRLnw9apFRc3gcQ7unzauNKrzRu2o1YLlifyYm+kmVUaUsICygE9Ax3ptIyCN2SBjrkg5AFejeFtRurgwQQ3MqmF8JKjEurb\/lUqGDNCwIVmLblJBOQMDW\/aT+BvjL9nT4neIPBXijRLjTTp+oXkMENwFdJ7SGSVUltp8SefazIDJBKrMyoVD5uI3UeLaf4mvdHkhvrVlks5EIiKJiZAEG6CcjYUnjBHmhQVwRKpkjkjc\/Qxr0sTh1WoVIVac4xlTnF80ZJ25Wn13tZryaseXyVMNiPY16c6coScKkHe8bNXT6dN9U1s3c+oNQ0m+vLZ783JidbeMujzBmOx\/LO5hkqUGzaGGW8wEFxvrz++8R6roqLbG4kEZud0kfmFVBSNFErBcYIVyScYC8L94kcbL8Z7y40i4tVYmSQCBiGbzGViT820AO8RXGOA6uMncCzeRan4xvNRsytxPJI8cgOWBAZQu1Ru+\/hgqqRuJAOeSxIxw8a937RJR5kl100Wvz9L6arp0YqphWk6LkpSgm231Vr3V7Jtb2t2s7XPfLj4z+IxG2mWWuXUcckiM482YCIosa7gUJKqFSPcF4VFARcAivK9b8Uza\/fTx3l80kciNDFeXEryA3Usi+VcysckI0m1ZSATFF5jAOUGfNxPcTQG4k3rJKriFIiFMqh4kkLu5+6AQoUI5bY4whwWs2UP2m5gtnyRc3CSmQldwUTAEHOQqxAPIq5wQTvBGa9JcsUra6a6K+qStfS3na55bcpN3vrZpa+VvxS10R3ltqEunWkf2l5FvXkLGAgpJAPMEaO8RIIklwXXIDLCqyKGMqsms+vXV1DDBYruFxcwWoUSzgNeyysHZ3TYxSFJBAQQSQ5dXUszPxbTjU9Q89gsUl\/cvEgIIjhAikSCZmTbsjtgYCcr9yKQHCite73QR2qWYhSJJLmazcE5LxwOsDHcisXWIQzzSSYX7S0knysWKq13e\/RJ3dtNF5\/f82Uu10uzSu21Z9td+17ry1luNdmM8UYfba2qrHGxIVriYxtIZJCWbMKIvy2yjypMjeWlaSVsS7vftKRhXaIzmWQKylnWEqWUZfaFkGWLybsuG\/gGVXGui813DaxOxGGLshdwY0WMRJGyMFkyDKquQV2MBkqMhuqSNlyNyRRBoJHVnzM0QSSRFPBKF5E3ZUGUKdwPCK1BRXNLW3Td9PO2v5X7kOpJtpaWtd6+W3y81531ZYk1VmZYoJSscEUaITnKFP3jYUHHBPnOz58y4kUheRtyLfVZJXuIQ2G3nyy5IUFQ21XOQXBYqAHD4ZiQMFmEGQbac7iHSWNA2CcBld3ypK8Z8gsQSVXkHpiqkAt7X7SzlXm5iLj\/Voem05CgqVO7r8xKrkLmqjq99LWs9X0v8unbyJbsr729fz6a6oluru6LnLFm3eWshDE7ufNcDnk7WDMxJ43nJBWvu\/\/AIJ+\/BjxP8T\/ANpz4YXtt4Ym8R+EfAXifQ\/iB47hjntVa28I+Hb1NSvFlgmlSaR75LVLS1hji3T3U6xCQEO6\/FfhXwzrPxE8ReHfC3heym1LXda1K00SzsoELTTXdyrC3kCo3WdEdDnGySFd2DcYP9QPwO\/Z9j\/YG8A+GvD+mz61qfxn+MnhG0vPHN1ZGK307T9fgt9Ra38LWWq3ot4rJPCt9eafHepDfrPruryWTwRQI8UUHz\/EuawyzBOjRknj8bCph8HSTcajbh+9xDcWnGGGjeo5bOSjC65nJe7w5lk8xxsa1W0cHhJQrYipJ2i+SScKEXyyTlWdoWtpFt30SOl\/4KDfE\/RLXxd4K8Qabeyr4ks9DuLKON4o76zvL65u2uIriFnEUNlc21gbfTbUlVZnMryxhWUz8P8ADzxbrfinwNP4r8Yavrtt4UsrbRby9+y28UGoeJNY05xdQW1pqCvJb6XYSGUQW9pZWF3dC3trl7sCOSKQ8\/cfs\/fF\/wDaP+I3\/CzPFdlq2v2un6SI57\/wOsNl4O0HVI9U33ehX9\/PPbTaXHYFprVdSj03U7PUdTs0uI7s2c8Nw3dftAeFvihqngGy0H4fm\/vX8FWN5p+qXXiLRrKDWLC1Lg3GnaLdXMeoPeTypcwm6eONoja7Z7G+nCvPD8hlGVxeEwtFuE500nUu+b2b5m2lJwt8fLyylZNy91TcIwf2+OzFRrVfZXi3ZJtu6p2io3Ulslu\/dS0UeV6R+ZPHH7U2g6LqMl34H0xNP1LV5DKzXtrqU1\/NaW2yGMK89mERFiVg2+6u31Es0sUA8plN74B\/HDXtX+Imnz6zaW19Jqc+o6eun3Vw9xEH1G1lhuJBHqUEDW9rLApkuZYpUt4p0RWubZ5Mj4h1e81jwtPc6drcF7DqU7Rtc2Wr+Eklt7oTIM3Ivtb0K4l84jmK6itS65WW0vT8rDuvh\/41sTrmlE6PDo9xPO9ktxpVvqFzYSIgjEttf2epu8kiTQyBAy3ccYidLd42g3IfcxGV0oYea9nJy5Pik5NW5V191289d9+3DQzGrOvFKqmuZNK0XdOSve97ty1bSu+qTdz+l34I2198cv2Nf2rPgpb+Gn8Q22qfD7xnpVxYRXsl+1n448MQS+Kfh39h0y1jkj0SK11vSoLexksrnUIU1OSSzvJ9t\/BGPxQ\/ZC\/bXm\/Z313Uvhh4q0i3utMu72y0XTLyxDi8slS5uFSyvdTuBBmILMczzwqHUNOsQCLDX65\/8EkfGlhP8cfFOm+F9O1K68M6l4V0631iO4geGPTdWuNWhsr6P+xkSOTSkmu2J0yWaKaO8sbe7spRdfYzfTfgb+3B8Oo\/hb+2H8V\/C7JBeWXhv4heINO06cwIrX0ulalPHavJa6XJbg3c8a2iyw2jwwwyNc29vNO0Dl\/n+GMVVy7NcwwMnOMJUqWKpJSkrybcajjGTavJciejacLSdkkujirB0cfQw+IjZuclGb0bvKMI+9L3mpQnDa6SvBKMeV3\/AK0dGuV1HStNvIYikF7a20tqX8xGeOeNXB8qZY5GVgyks6FnwZASjF26C3ilVtvzEncMDo4VSTgnnkBs4XO0LnnJX8rv+CXPxs8dfGqz8TQ+Kr6eXRvAunaP4Z0DTryXzGn1CV7n7TdeZdyB5TGkbRG2AlS3jaJUll8lFP7Ojw\/JuDeQVJb+FBwMn+EIoO0NkrgYUgew\/aMLNYqhCtFOKkn8Tba5Xy3bttdXV7X3TTdz8ZxqlhK86M2nJON2k7apONttbOPupJLZWd7clbwyvtwCduCo75wMN0bPy7ick\/NuHGTV6G2mJO7JYHhcHggjZjkns3bbgYJ3E7+zttCZSq7AOAACoB6nhcY5+70wdrYI2AquvBoBOcLjGAR8+dwIYblznbjHDkHhWwQeNpUU1tba9tW22tLuz7LS+33cssTCyfNdpdHq1eN72V76NJX6WTV2clZW04KkerdVIOcDghSwBPzZyeSBjcSc99pC3ETLlmBBQnkAqGUDngMThTjBPUhyXGBYtvD7BuUOd3DAMSCq8YyOckZAPy53E8MBXVWGiOCMpg4U8hs9iWb5B1GFGSCw3nJDbTg8Pvqmml0e11a+vTVb77WZySxU7q19NNLrV3vqmr2utlypbX0t2GhySEAgsjOqgguCSw25UAdWYqAc5QkAZO3n1TTi6oqkkLyCCMkDgbSMDn72OM5IA4YVw2i2Bj2rtIJyfmHPLAAkhvmwEIIJOzg4JyT6TYW5BXCll65OV5yAcHOQNzKByAcMSAwBXmlh2tdVd6dtbeejstbvd9tBRxMm+6VuvZe8m7db72bT21Z0NozgYCuApAPUDcON2FABbJyBgucEAHAB20kJUFgQSQM7mw2SpBG7JzxgHDZJJYYJBoWkGCOp4HCZx94nk5wMjBJYg5BAw2c7EaBQQQBksx4ORjcCAT\/ETgZJOcAA8AVxSwzbvaSu09r9U7t6Ld6u9l8ypYhvW9tr3d7t8t7Wfy3fVpX2a+ew9wQSeQPZQecEDqcHBGSABGcHILKBk5PBHqCdpIxwOSAed2QxJtLEG4JBGAcYOe2Nw5GfmwAD07A9TysZxjJYMMAgkAH5mJyMFiRyeAByQSDzvBtaKMuuut9lbfT3k9rtfJpGLrttNtptq9k07XTSvbvrp2W1tLcFwQpH3QoP3sDg4LEdARjBA5CkjAXJzdEnBBbHU4LYJO3Ac85wcnk5IOSCxJNYqDZhlJBGCQOcjAwOehYKC3y4xkqCBV9JNwyCDyMkKRyCo98cEnjBJ28c5rkq4NpK8N0rd7+7q+qd9+reiXQuNe+l+iv126X1vy3btZrXZ6IsuueQcAEAAkHBG1e\/QEEHtn8CRkXMJGcEnJOTnOQOFG7jA9s546sSa1QQOgGeOoBA5PA6jHABGSCOuVNVpD0U4wCNx6naeDnsvAyrE5GM5+U1y\/VGpXcW10TTtrZK7s3a2nRW0Seg3VT1Wj1Ttomny6pW0tbzu1fuYv2RS4JyYySCE\/hUn7+FO4BSp+6wAwAQQwIgneKyjlRnRo3Luh35BwrBVDJjli20EBcEPuCumG1pHCgIu0tICqhgApYqW4bBwCFXYS2AFIHIUH58+LvjrRPBOm+Ida8WbT4T8MaVFe6pHbTTNd6hc6s1zbafoNtb2i+a8l9cQSG5aNp5RYAottKLhimiwtOjTnXre5SowdSc7dFyppJaOT2Sf2tX3OvA0amMxNLDUVz1asuWFuZ78r+FWdtL+uluhyfjn46waJJav4S8G+P\/AIh6rFdx6Xfad4F8LXniG2s7r7TbeZHqmrK9to+mPbW84nzPqMTsnltsAnxL+Z\/xz\/4KO+O\/hd8TdN8B+Ivgp8QvCeipPoMeta1q2kNc6QNIm1W3tdd1CXU9GnvdMi023hkvIhNHehZBDIMW0afapPm34p\/8FDfiJrPxHttI8O6hfaB4J0+1OiW3hbRU1G9lsrKJ8Dz7JbdDNNpyqb6a8vItMnnkadp7p7L7M0fq\/h79sDQ\/GV1o2mal4cbxFFNPp2na1f6\/plpBPrWhWd1eJGz217PHp8Ub3k10s0D\/AGY\/aZZmsbO5WSCyHz74lo+0cYYCrDDq8VVjPmqSaSXPyuChB8rvKLalotU3yv8ATqfA7o0oyqVKdat7PnqU1US9m2o+7K\/utvok5O707r9FtG\/aV+HvivSbDVNH8T2t5YXVzDNoN9b3CxJqlnLNbw24jn2tbfbDNcWQjRJAJUuI\/MizJiHmPEv7SGh6BcTRvdtOZrtYYZSCpiZmilgZHyqtBPHLNbPtDoszwRyMFjYV8L\/tW\/s5axp3w2l+MfwctdQOj6ami6r4n8H+EJ7uKx0iO1jS4HiDSdAllsotFu9LiS41DxNDaWs1k81tqpu7O3e2lji\/LWz+PHiHxdJP4a8RX99o9\/Z6leXdlATdvJOI1urQxxvOlvM0QjlspRamMqBHGkhDySx19JTxtDEUYV6UIJS0519mXw2qR96zS0XLKXLe12mm\/B\/siNKo4y15WviS2Sjqm7RbundWjfe+tl+nfxQ\/bK8X6CPE40aD7bZC\/u7m7s1aEx+RFaypIYhC7zo0tnjbnO6S3IRikHz\/ACBaft1\/Ea006GCTWZZV0q+82cXbkSCxH2iGPKsYt0sEUbW04GBLGscgXKutfCHjn4u6np1\/NZaleyS2GoJqH2K5hO1hBazxzvNdRYjLM1nPLGkSbleSKZ03Su5OFquoxa5dWotjaGVtJe2jNoTGbiG7tojbXzRKG8yRbq2WeaKUbme4hBC3ErxM7yqNKo5a8y9pGSUHztXtG+m9\/wDEve1s11KhQg3yRV0o6SXvO1kk7WWqS010Tt5\/qvrn7c\/j+9+1TaPqcsTRR2t5bSORLGxkuEgt7+Biy+ciyWl\/byMPMAQF2UshVbfhj9vvxrbNJfapqEt1k3MlxMJAvlNMII2aFDIypLBO7y3MYKRyi480LGG3n8jfD3jK806yewuHcJp728k3nqrQ2hvnn83yZCwdtKlmSSGUMB9hmj87lplD+u+Grvw3BaaiJQnk6rBPbeW0gEllrDT2SmTa8HmRyPBPJsgSRVlNpcMSElV5cKlKWjc57p2UpWez+G\/K7X5uV6Wk0+a7vtGnRaf7uKa7K26S6JPunqlonvY\/bvwF+3b4isE0aTWkWVNTmgtLieZxEqQARQzOSQyI8DnzCNxG1llChZVZ\/v8A+F\/7Sfg\/xtO1tqV5BbX9gBbRyK5\/fahd3ONo2na6R7l+bLAA5DLlgP5vPDPiDSPF2knTbGay0zVtNu0tEubm5ZrIyXFuuwXcDR\/ul2qcOTGYn2Krs0hEGz4Q8QfEXwZ4ni1C1M1je2V5dy6hGsrTabDerJ5kPlxlpIxb3O1kU5KQySbVUQMGTk5cSuaVJxqdHTmlbR2babVmmlZ3s3H44ttGWIwOFqxty8jto7St0e\/a6v3SV+mn9dayCGRGnuFmhRYmWZ3XaUlglIwcnKs8aKQBt+fkjO07tg8bSAXAA3QGWM5A3Jl8NtwWbKtuOAc4AJy2B+M\/wq\/bI1LUNPi07xY6xXUVrDbuAWeOO5t2t3RoWLbiiQW0xmikztDojkDYT9w6l+0z4As9DbUW1uGNbaxmlZHYCWCC1hS4RHkLB2jdGAjkIAliAJIDHHTRUa6k0vZyi43U7J81\/eW7sl0etk1yvS6+axeW1aE1G3MnJK8UndO1npfZddHa22l\/sBYxIxaNgyqB9nOdwKswcgsuX4yf9ogBiORi9aWUbFizIXd2RYweCZAQuSWwGU9FBY4JGBnFfD3\/AA3L8HNKsbW6lvtn7hpvmYGOJdm8+aN7AAIHb5gSAj5254+Zdc\/4KoeDNF8Wy6VbafC9ib4wRXwYMDFDM8dxKuV6CLy3wq7ijbsg4VexYdU4+0nKMlde5FuUndXV1dW1Vnpa3VOyXLDLa9STTi4R63jy3u0raXfN01dtnb3j9fv7KhK5IG7cAVHOChHLY6DcCCPQArk5rGOnlp3woWPJUfLyRyDuJO0NhVY\/LzgBmAKAfN\/w1\/bH+FvxDlghh1a30+W+WEhzLGYcsoCDzAQgMjDexLAn73VTX1ZpOsaRq1m13Z6hY3FqGw7xTRuN5G4bSGGUKFSuO4AOC5cXGnRrWjSmpNaNJ2m7RT1UkmtHd79e2vDi8DiMO\/epStGzurtN2im2tOr2s3d2vYyBYEYJHGPmAP8AEcFSSMj5WHUKeCSScEmcQFFDKpDZXG0cEHIwQD8p7YIChQMtgYO88dqVBS5tPLyAMSIv3+cHcTnJ6EZK45U5FNkl05FeSS8t1jjLZkkmjVdwLHaG8wrx8wwDu+6uMgiqWDk7q7S6rbbZKyem+uytdnB7y+zK97aJrXRbK3VLo91fqzLSI\/LlSpBY88H5uo46AA9T64OOWrQij2tjIwCBk4ycDI\/vLySCeGwzIAQCDWO3jHwFDMbefxdoEcqBso2qWm\/tkE+aGGSGBUgYYEYUkgti8ffDxrmKwi8X6BNfTlvItU1KzaR5A5jwoWfIbflVPAGE4O5Vqo4OyV501qr3lFPdd3vfSw3Tq3sqU9VfSLW9rLbRPvtfdtrTqIpSmOWDYHGBnPrx0ycYDEAYJ42k1bFy4wBnnAyTkcYwcHnkcck5HPJ4WsjRy2y3UUsMsbkFTE6NEC2GGHTruJzkFjkEA8FRVkaQfMVIUqGBC4XB3AnBGDx1BwMZxkqCeqOAlpfaya26tLWzva+i76210MXVcbptx1s097K2mrt32tZK+ultyK5YAAk8ghdrdcZyD95cZ6ZxjkjJ5bXhujkDd0wo5CgYzwCMkEjGGyGIJz1weKSY7+c5HAAUkKANuFAA474LZzgEZwDrxTAAEEHoRyQTwC2D1IPIPBGBznBz0PA6JWb76PRtq+\/V91bbbdijiX0n0u7u+9rtJp33\/ps6xJ9uwlmIAGMMuMMQCVJPGMZPYHbt5JFFYiTkbRuPIx0DkAspJy2SOB8xBJ68cHBQsI1so\/NxXVPb1+9eZt9Z\/vv\/ALd57K7TW0X089Fpukf558PgBzj90W9Mrjptzjbt5O4Z5A5wQpJFaCfD7JH7sjsCwyDx8xzkdTwACT0YjaSB90RfC0g4EQ3bypxHkjAUbiBwoPzYByzcDJ5I0ovheDkiD5twGShwxOQ5U9RuJY\/eAx90HBr7ZYTWzaV\/LXS1tNdHbW113tqz5J4um2\/ebta7Vk1ZR1+FXetru97brQ+Dl+HxznyuB8zALwRyo5A6EtnODgnj0qeP4eEk\/uRy3UqzHpjIyOm7acZwWOenyj76T4XLnJthzgYZFB+UAEjcdwJLAKCGCABRks260PhcMki04J2gsg3DqoI4yBkhSfmP1J5Pqi0XMk9NopWs1p26q3ddHoS8XBvRt3vZ21V+Xp56Jvo03eyufAS\/D7AH7k53cHy\/UEgjkDHA5AOegzjFaEXgM7gRE2RyAUAzlhyTk8gkZ7nBOeMD71HwvB24tiSSi8K3U4JOOQCASMCTcCDgEgOtuH4Xr1+zAgg4JXCkFsksGO4AngHjj5sNkGqWEg7XkrLSOyS2fkvk7emlyHi6dr2bv1ta700b+7vvZNHw9beBm6eSx5BPyc5244G3GO53ZCnnIUk12+keA5SwHkAAEDgA44OSSAeVzg7vmByMACvsS3+GSoECwfKDhgQRydoB244GMu2CNpDIflFdjpfw3VSMwEAlQcr\/AAgAcjkjcGJ+YEdCcgEifqdPV29PdXW3VWtpbpZ66XJWMukoqV9n0jva7TTur6t31WzWx84eH\/ARG0mEgqFAGOCRkYZTy2SVbGNvGQDyR7jpHhDyoR+5bA3Yx9MEAAn5sD7oJU9OAVWvatI8ArH5eYurcYQkEkc5ypJPHB7qcD0HoSeElgjHyFAylt3AJ+QjGVABGSQuFzn7wXoM6mHppWUUnaztdb2trr1ve+t1sioOpVkueXIl9l63Wltn72u1le7fXV\/DPjHX4\/DTrFcJ50QZoXUrLhggO1d8U0EqjBDEQTgjDcsRz3HwM\/aL1ezkg8If254P0Pw\/FcqbdtR8aPod9a3N\/JcR+bp41a8vZZlfzfLukskguJC6LLLdpO6v5j+1PpkmjRSzREx5VpI+igHB4JDHIf5cqMHOQoCkZ\/Bz4ifEzVvD\/i557MxS\/Zp0MlrNPeNDKd4f95a2c8Ms7byApS4glU5EcqZr5LOsHSxNOeHrU4yp1k0730WyejV2mlZq2qava5+hcLTnhf30JOE4tS5rvVKVuVXbsmns3s7vu\/6TP2pf2PdD\/aH8HXGkeNdA8M+J7S5so7zTvF\/gnUfDer+KfC1xNEXfUdOtNO1GPULqyuDK9xJpen6XLb5tl+3LZWu9n\/kl\/aN\/Yt+NP7NOt6pDq+g3mreCZNSnttA8bWdnLJoOuWqIZY5BKFcWd4tu+97G48u8imS4jVJEict\/UJ+wOPF3xm+HMgk8CfCefS444XvJfHOleKdEZJwuyG3sJPEniG8aJpGMsr3Gn\/ajJJH+6AYQXCfYXjfwFbeEIoNL8Q6Fofi\/wJcp5OuaVfQahrWg6RFKGZ7S31TVr65i03SYWVIrOaTTrmPTNjzRiKJpyfyPEPMODqzjGMcRl86iaw8pqLhGbvzUrTqShLlupRb9nOSekZPX9mw\/1TiSlD20nTx0KSjGtTjFuSjFLlq20kk0uW\/vK3LHRNH+fHIn2eO6dFU7nEe8nmISby+VIUoWO1c5BGWByDiudvH8tVXpk7sFgxO0FSpK5AOPunpy2Ayc1+5X\/BRX\/gnhoHw6j8Y\/GX9njdc\/DWxU6h4y8G3erW1xrXw+uNVvVvrFLS13G8vdA8l2trW6Ml7NFbGwunnmg1GF4\/wbmbe67c5J6YGeDjqAoz+BA4wSOv3uVZhhs0w8MTh5pxaXPB3U6UrJ8k1fR2Ta6NPmi2mr\/G5jhK+XVpUK8Hza8sldRqRuvehdJtdHpeMk07O6XU2M5nsoFB3NaXEuN2DlJgjqRkHlJY2BGduXB65YbELIk0kkaxq0nmKjEMzAKFVnCgAjDDIYAsASTjrWRp1k9vZ3NyZgsaxRSQblY\/aLhJ7dDBAy5QSolyZmD\/8ALNBkZeMH0Twn4Z1zX7X7VZ6RLeaa909v9tt1kdLabTYX1C4gcRgsGe0mEjxEBpI8NEWEMmzvlUjCM5acqtdysrWsr62WzvZ63030OSEZVJRik+aysoq76WWjfy83frc5U73vbdAJI1tmA27FT5Z1dtpJBUFt427jgtEQQCRjpmia4jmVi+yDTrmITbjhZZrT7YkUbEArO0MMyEZ27HuF5YrGYdc+zyXzW1pFvnhhtJJFiDvLJJv2CExYJLRENIfmfCr1J3Vpaq62ejaeUUxXd\/e6jK6MzCRIVtLW1iXhF+aQtcxOWIKA3Gc7htqElyqT3auls3dx7Nu3Xa1tbhJO8krWUrOW29tNe1tVfdK2xzaKLa6W5KOUmtVEQUgIhjlEO0+YVGwOu5jgkiNemGJvw6RJrVq6WUMs7tLbwvLJFEjBbi4SNZYkdx5iXDyxqXVS6YBby4WOXa9HKlzDbR2bCeGyeWRFIdIY5XkkhkMaBvIBlljSSVy0YdkVWBYAfRPwf0Xw9pGlX2p+LLLUL+x0u0003s1kgjXT59Tv9Pu9Qkd5jttr6G00zUrCBzFOBdmOVo2SF2GOIxPs6Xtd7tKKWrd5RStrrq4pWfVb7GtDD+0qunokldt6KKtdvstG3rta258s3OmrbWszznZMt5bRWunHm4ntpRdebMxjIcNGbe3t8hRvluyIi3llE4\/UZncvG7DcPLZQo2gFl4QJgcJyAAMqFAJIU56zxRrjaxrzXmlRy2lul6TaLETJJEi3k09uEdyzvIgZQhLs0iqpO7qNfxF4Oe4lt30yKYLfMkjRSoA0ElxHHcur7SCywtM6h\/LjjAbghSwSlWUPZ+091zu7N\/DpF2a9NVvqt9kZeylUU1TTmoNbJ+9d73t5Xt221uz9Zf8AglL4P8J\/DG18U\/tM+NtEsNY1C1H\/AAjHw9h1e1uvsuj6rPd2rXniWK\/SGaCK4azF9pBjkQCC2lubt5U3x3ej\/Xnxv+LWt+MfFOu3f9j+IZbWbVtA1uCxn1C3utOik\/tO6i8WXWl38Vzcw3kk+jXUr3FneyCJ7aMXOm3oivp7OL4P+AXxT0Pwj8E9N+HeoQ3eqW9teT6tFaaheape2MepPcRxXVzBHYXtiba+gi+zpHp+oWc2jXNtNIj3K3k6FPXfBOl3PxR8dR6npS6rPY6Vp0Wnaj9l1G\/tDpS+GZWfwl9p0r+zje3kdpp2nx6dZXCxyOLZYJ7m92jbbfnucU41cyxGOrualBewpTqpujDDwlCUacEppRc5c7uvelOfLe7SX32TOVPA0MJRhpLlq1IQtzzrSXvTk3o+WNnbS0FrZJs\/Xf8AZX\/bC\/Z90Ea14I+Icet6d4jtLm6nS9nuRfxxaX5Av0bU7jS754LPw9Y6c1tJdE32mNqF5fzWk0F5ZzjTk774\/f8ABQHw18SNJg+Gv7Nn7Oc2neHrbT7p9Z+M\/iXwjpkF3a6TKZIZDo+gS6FFoXh221pRJbyvql1p8TWsklpft9tluIF\/GPV\/AHh7wXrOonTzp2teIn1LVby11HUtasre2uNVjtbaGS20jRLjxLot\/wCTbazHAdAN1dXH9q2scc1tp0kdm143qdx+0JpmseBtN8FRar4gPxAuDP4b1mwkvPGUUumKks1vdTato8+pXPhvxDJZ30gvtTsrzUNMlkilSawvrpYp7W99PLY2hFxeIq4ebUn70aSUmk3dQpym4N2vCcoJJ8rjOLSWGMpXqOU4pVIKyinKUU4NJbyd2rvZSV1olbmPnb4\/eJfD6Tya54d8QwweKtqx3lve3+oahBqMe5YZQbabFqs0S\/u4X05l09nSSGGaSCNpoMT4Cz3+s+LNO1DxLp2nw6NBPbXsdrOs6W18tot0lzLJMbeKygggt5bi8aZBLLG0cos2kvo457bXvPC39teJ9N1D+xdJ1SLVtHeTwzBJdy2zzxanquvXS6rqL6tY+J00rw14a0OO9k+0akEt4otDIBaxt\/JHjGjfHHQrB5rLTzrVpqAuZrOCLy4NV0fVIbtRbCG4uDLpUoyr74mbRJTGRC\/lFY1iH0Epe2wdSEpyc3CUoRi5OMZXcVTcU5PVxl78uS9m27nnq9OvTknammr81k5u6vLZS0TSsrtLlbdz+yn9mH4M6D8H9Z8P\/G7wBaR+JrXxnYeE734jadbRabdWekaT4cHOoRWun2HlJommqumW8qWFlcay+lQTzTPcXEFraXf85n7c3xK+Gf7QHjz4\/wDxf+H8t7Hodp8atev9FurpdYu2urO81a48p2XU1s7yUyNPqN1BY3zWNvZWvmWVpZsLR0h\/Z3\/giv8Ath\/Hf4ha\/wDE7wPeafoFt4I0Dw\/pF3pNxeaNBo+lWUt\/rI0nw\/oMHkahcRQ\/Lca9eXenaNolpeX72L3moTXV1PFHF+SH\/BQ34e6Z8EviN+1T8PLCRNO8O3HxY1\/W\/DfhvTNLtYoptI8W3Nv42+zWF1aXN3CdC0CfXJNKspI\/Pltl06GxguLVhcB\/zXB06tLN60cU6qxiWHUdabhKiqlOEno5PmcHTgoycYpubaktvpcZU56EXT9nOio1GqkeZzc2pTgpxagk4STtJKTmpJtq7T\/WD\/gmn8JPhP4M+FuleOPBmqWWoanr1rGdVvY9Wt9R1W81DUEtQg1CCwv7p9HigmtX8rSntbIsY03wecplP7Gadowntw5kSaUSOkgIO7zQqGSMBgzlogFDLkYKlSrYK1\/Kt\/wR6\/aO8MSXGq\/DW30Wy0S+sws0urrp8lvcXo+0BkN3r90zfZpbdo9kdlE8TT5VYrdpYoyn9YvwmB162kntLW5a1RmLT3n2zzZHBVl8uW4UoIVB3JBaxlXlkeQt5TRlf2Thur+5lhaj5p0ZSspxSk4O0k7KU7rXSXNFOyavql+ScTUn7SOKirxqNN8u17KLV\/dejW3RNt67Oi8OBWGE5Xkg7iWzyVOCMnnIAxzuBLnAO3aeHAcB1OHGQx52gcYOSRyQWyTj5cfxCvXYvDLNhghGFXaGKljgsOCoYHlAOcN6jJAPR2HhYsBJtUBBgMCDjLc\/NyWLLuUbQDwWHCgN9LKKjFvTsnr15WvO+rs9dNGla58mouVoxvrotW3dNPTro9d7LzseMReHlXI8sD5v4UDHccbckZxk4+UkAKSwyA5rZtdAwm7ywRhTtxhiTwMpgA4OGBycBccYCj2geHbczquGHmLtBBB2nbkkYyRk5JwCvoQpAOzb+F4drIyfvFYAfMSQdq+o68nhhkYypzkjnlOmldyVm0n2vdJJ31u3bS1uz1Rf1StKfI4t6NqyeyS1Wqe7V03aylfXQ8nstIaIqqx4PJYncd20HaRxwrbiSMhuo\/hFdlY6cVCMV+YFiCeDzuJOMAgZJAc8cAnggHsLbQVDthVAQNjdg45DMP4WON4ODjGQQSWzWxBpPzlCqgoBk8Yx\/DsB4LHnAB3YPHHC5ylTf2lZbtPbayb07pLXTawlhqitaEtb6NJ3trbVWtp0367HNQWZ+XPUqOTghcqcE4BKgk5HcHJJJYMby2gyCcZIyMHcR1J6rjJ9MY3Aggg5PSrpT7ScYbaMjjIyN+V6g8jtuznIDbiQ1LZkwCGBBOTtU+oHI3jgZHyt3PIOCY5FJqyXy03a106d\/W+5z1OaCStJNWWqt1WvdLXezs7JaXMBrUDJKhtxOE27cdecED5Wznb6fON2ahaIIeCOoB+YDODwApILEg84zlQScAZXozErA7wSORntnDAHPUqQxIAbIAyMYINKW0yMFQRxnco5BIAyMknBAOMHqCoL5BSox2aTs1r01tbrt169X1ZzzqS6P3rqLir3btF7NP52vfSzvoYgiG3aVVQVz0CleQCC27acEY6A8Ak5XNMC+X8wbaN21l3Fiu1eccjccEndz93bg7cHUe2YD5VJBBYkLgfMQecjJJJzkqMkH5dqrVUxZZgQeWOQAB6Lj5geBjng98kE5qnQi7e6rb2a8lpZ\/dfR6atGPtZq6vre19dLOzte7\/DVNrsRGXnBOMd92FI9c4Ck8FTghgVbOQDiKSYFC+EJjQyK+SMoqsDxu9AVOEILMFbksRZ+zbvkwQCQcbQRliSWydxGCdxAyQQAo\/hENyYraBhLIseVPL42KoUkDeOAOSu7gDIJ9Tn9UpJp8q8l06dbXfda31aWuhUKtWTdraNeSvZa66Xevd3v0Vjz7xz4ssvDWg3WrXU0ds0dtNJbmR1EaXSLvGW2sSJGUKWClVGW4UuR+Iv7ffxe1jU\/gL4T1TR57KGLxZ4u1bVNRs3e7fUppg0\/h\/T9DtDaXNvOY7u0tdUDQ2hmMZdR5a4uJD9dfts\/GLT9J8P3XhH7Ube\/uopBYzRO7RTMysUtmKl0aSVwMxMVdlAbeAPl\/OL9qqK40z9hz4ZatpuotceJNAutYk1S7glVzYXds+qXpFxcQvNHcxWMmq2lpHIsyQOLnbtgkENrH8fxRXiqUcBScLStOquZKTknBxhbRy0fM23a3Nza2a\/WuBcBGlUo4ytGKlUco05uMWlzQbUrt2UXays9JXSs7o\/Gz4ZeGLrxb4z1Caw8Pz67PCwSTw1Dr1jZ6hdxWhNzMlpdXWqadPqUFnttbldGtlutUkitXCQSxRTTxfdYsB4evfD1yl5pGleI9LWeHVLXTbDU54Us5b+3ub3RfEV1q2keFoYzb3X2YTaVLfW3iGzDyavDq0lzZwaxZ\/jBo\/jW91fWbm38L6\/e+HbyKGJ9RnjMUL6jczXUYnsrSaUNbPNfSealhpkyx2uqH\/iWH5GYv+ofwd+N3xZ+J\/hW4k8U+FvC\/i\/StI8PXun3F5eR6Xoni7SLSOCC2e5Xxxfpc6GtpPCIo9S0nxJ4WSOW7uLKyW6bz7u40\/5nCYFSpexqQWu0k0pKT5bKUZKEGvf+f2IOVj7fHYuVPEe1hU5o3tLdWsrWuryd3FtJPTl95ptM\/V\/4LfFrX7HxXd+CNSu9B1HwF4gsdFtbW1vbibVNMsLSe+bT9ElN7EZLzS725uby5tLDxHH9g0G7vNFj1GdtPs9P8yvzU\/by+FGpfD3xraeO9J8KR+CYviLHpStpVjNDAlh4k0+7hTxPDpwtdQuLOKxn1ZINS0mPSY4YLvSZ7NY7S3hs5Te+ieBIdO8VX11f3Or+I7zxB4fVfE2geFJfB+pab4x0m31LUdNGr3vhvQ11GDSPHGjXuj20kWuW+mS3q2clrq7\/APCEW9nq+vWN19qfEv4X+Iv2ivhJq\/w11Lxa+oeLdO8PaJq3gix1Sxhh8QW3jWw1bUIfD2uXEs99DaarF4m0yPUfDP229ksL231C+uri8R5dN1k2WFLmyvFRjKSeHrydOoouUI03LkUZuMna0fdk3aMlGUnHn5oN81dQxtOU42VSmo9LubprVqUb6yTTmm221BKybjL+Y7xZ4lh1LRNTWae6F5oqakbbzN9zdxNH9rsIhGzlA2xDcuqxKkLs\/CqDbzJ5v4O+KluL+wtr+6nW3uHS2inN28jpbw29nDGFcp51ulsImkSFkxsdI1CgR3MOd8UbTxB8PfEHjjw54jglgvLO72yWV6Fa5s2ksfOuLW9ZihN9YOBZ3sLRo0V7azG4jjbcknzeEfbb36OnmRKp+z5CM7JEpnWGSJ5FeR1InyQheNzDGoaSNLn7DCxk4yjN6RnptZLlj7qW1k9Nk7PXS585iZqEk4K7mnKSaaejS0\/FrXR23Wh+gtn4007TNNtbh7uKSa8fVNP+0W5Z5YNRSZJDa6kvlbI479PLZUeGNJTawkNC8zRQdHonxF0OWO70+4g\/s2xitJr2G+sIf9Hg1CKeL+zLtImRFe2jubMPO0aebbrDc27Qu52j4Ku\/GVzKbGKKYB5Z1V4wrKk11cW4n8yXy0Ck\/anZ4nlVmSZEYSODiPutM12+uppLe6N3Eii7e2VYoZ42n+zva39iYzgpK8dnFcPLCEiZtrATBA1bypvl97WyT7crTTX4pX6N8zuknFZwqqUrJO90uay10je+l768utnpp5\/WN78V5NEu9Ytrd1iYHz57ezmSOVH0+S1uLWTlG8+JrYtC24llgaDzseVKlv7B4c+Peta5p0WpaJqwXUpLUg2GoSBvtE1ms1npgMisytC2wIiruCzxozRIvlrJ+dviuO5SWyvJVV\/telwxag08xXY9rBOIDA4YSAXy2ZKyhmjW5muLRUje3dpuj+H+rWkbmGVpbS6gS2XSbB5JGl+1JYpd6tNKmBFezR7GWFGBWZ5LZIkR5t4w9jdwqLVt7PqrLS6d17yaunq\/hNHUSvCV91Z2v7yd09UlbV7O9nZX2f69fDj403+q28d9c2cMCjStRSaJUWGTUElmtC5CuylNtnB5lqwZiQ9wqs8bOD3fjT4rX2s+HtT8IO89ncrbwwLqLzSB7pLSC3EcQdseYblF8sbT5ebuTytyKWP5zfDL4g6hrmtyW0TeRbWMjByLMyxIkCS3Nrp1rIgja5aJBIbkbSqwSsZAm9kr6fn12HXtPl0yxdf7ShazlhVpImngjSBoVeW6yP3Byu0qECiTKBZCwqaS5arUkk+Zc13e91FWdtdVopab6XtZVUSlHmtGT2imlLZJJK7vs0tPhSclZ3Zw8\/xo1qfQ9c0l2cah\/aBuRaSM32mGALcNPGApGxLe5Ei7QgTyp24MbLXAXHxAkubY\/aJ3m1KVbyO2UFzNEXDJIwABJMYRWI+6yI4IyoauK8fadew3+n6taM5vJbRmvrW2jLy7IkuSXXoCt1m3mGdpzJvyFUg+Lx+JZoNQm1GSRRObeN0tJWw1oQJsMGXPytJLKshG75pjCxK7hXoRnThZauN3JX6KVm076XUm3st9Eczpznul7tlbbk10a2vZ66tb2t0f3Z4C+P2teDJDpFlqk9reX9lEltIZC7oLZo9xILMy8yAlhsZSEAyDIH+sNG\/bN+LmlAQ6d461WJHt44hbx3ciReY7MnnNGhQlFmUMw2nEfzOByB+Kw1+Wwvo9V1a6VbqZI\/s8MsyyT\/vi8sTzTJ9yN\/3bkKpUpGUyW+WX1LQfHljKTfXGoCy\/0SW6kfd\/pFztgkIghh3sUMcshii+XyyAMEqBnCdOm5uUIx1as2l1SV07aWe21umiV9I04yVppSskknZ2V0726X379Ho9P2Yvv23\/AI3vJDe6p4\/vZo7cWphtNOlmCJK0IwJcOCXBySSzqskSvxGOfA\/it+3X+0DqGnz2UfjvX7DS3UslrbahcNJc3KxqzJEY3Vmlfy\/MZvMCiZTGAikgfCP\/AAte3GnxQafHO13ezkWERBkiLbixu5GlRciPexjPyoJMozMpBPmPiXxxeX32e2OoIlrayST3wiRWkFxC8rTrDO53YMsyCRITtdt4YOqgppTfLFuzbejcr9ElHV6tq2ydtWZyw1GT+GmoqV0lGK35b7JNpLXXZ9E1d+76v8efiOskWuXXjPxAs7gEh9SvJJ\/OkWRTKkIkG25mUlY9+4RSSJLjOEXU0n9pT4j6RBJPB4l1BddupIlgnsr+eWfQtPkeG58iW9DN5F1KbeGSSZyj\/vJbVGikEcg+edM0XX\/HUyakltdRww2kLLBp9nLczuomaKOdYVDPLIH2s7KjNI6ZMaBia\/fP\/gnH\/wAEkNe+Luo6V47+L6SaJ8Nzcafqq6TIRbav4oaAKpS6Uq7i1uRGkskihJAJt0ZjkJzjUrRoKMp6yk0qcIRvUqzdk+SKtzJLl5m2oRVpSaai0\/ZU72SikkueTXLGEU18Teza2Vm3qkm7np37BK\/8FE\/j3oEV14C8S6\/pvga01GW3uNc8VbJ7VpGmZ1ktpNRRpri3EQA\/co3kyw\/OpkjmhP7++AvhZ8RPCtlBD8QfiZdeLdUSCNLqK0hitrFZjHGsojG0vtSQEkB9rbsgBiGH1T4Z8HeDvhZ4Q03wX4N0200LRdMtY7azstPX7PEiBTkqYlbEjMzSuX+Z5S5JJYk81cxpJI0m53Zsnn5gfmO5g7AMd3Uhsg46kivbyvAVYxdfFfHN3hSUpqlRgnolFOMZSV7SlJPZtRi22fCZ\/mNKU1Qwqhyx1qVLRc5y0WjaclFW0aa6PsjnLe1WCMQp9xTwGZ2KhlHP3mPVVAO5iSoYZUg1px5BHQdDwSRgkZUKDjadox\/dUkHaBtNnysYxnIz0IPOMHvxz3XrxgnBFJsxyAck5GD0wMEAZ4HsOc5JHJNex7O+iitFo7XvaKd9NvTvZvz+Wu9G7ydtW99000+n46NJNLQl807VGTjABAOQp6hh0BHJAHBDN8uAM0VACQT94eh7ZHfJGP7pxzk9hgklNUGrJW7uyXW3l8uvW2+t893t2slFPS8dLvXol+Op\/PNF8PVBG22YhR\/dGBkHkZ3EMM85O4HqQcg6Mfw7UAEQMV4DAqBg\/MfTJPQLt4GFLHI4+x4\/BClSfJG7GACeckqc7mXc2zHDNluWBQKvN5PBEZAUxoVJz0ypJKH5jzgk44C7iOASFxX0qnHo2urunrotdLu1ru9rPlett\/CWGVlaK6u9rSbdkr7reyVrtXXmj42X4fKQVMBHA5CMvU4GPlABABJHAyCudwbba\/wCFeKTn7OCCA5+UABVHBBGVweCB97HOVBxX2OngqMcmEYPzAlRwcN0BwMYGNu3hVGcquKtr4LjBU+SDtLFQQQygqOoB+YA4+6B15yD8q54J7r8La22TWzXR9LrVco\/q7TXu2vu7JLdNvVOTTutFrrqrav4zX4fqW\/1BBJ53IuRlSTkhc5C4GSuWA2gcAVbi+H68EQlgB\/dz1\/ukHoVUA7juA+ZeSSPsZfBSEcwBgCeAqgfdY5GMHlgAepKgAHCllsp4KTnMSZORwpwRuJAJAbdkDk8MCwXBUNur2kb7rXs010b89Nd+w1R+HZb7p2+bs1fta703SWvyBD4Bx832cBTgcp2Y4BOBjJUgADJ+9s3naK6Sz8CbWG2DtuHyAH5SRt2jADlj02jgKCOCR9TxeDVGMR5DKCTlQAeSTjnqCPldtwAZgzA4O5beD1XH7pcZUfc4x8pzkAAAA4BPy7jtyFJxlOrG32Xs9W1ppeydvJL52SaKjh9tJXv1te6s79dH6eSfRfN9l4ICICYsttBJCE8Z6k4CgcjJxwOMAYJh13w15OnPIkYDRqzHAOSOCcZG7aRwpAPGd2N5x9a2vhRApxGowAccEjBI45BJI4B+9jIJZWBHJeNPDSW+m3XAAYNwArAEIfUAZAO0jJbk4A3ADmnUT1vql7trW9NmpdX23e+h20aKVnr22WtmnfSyTbil1V+7SPwU\/bVfZoE8kcZUxwyBiNoYEgkZx8x4DEjKkZ2tjg1\/Mf4++IB8P+OLi\/OmTXYhvBgW816pG1\/mLxJM9vOw2hlie22s2SzKCMf06ftwRLa6Rq0Tsu\/ErKVGcBY5SrY+jdQc8EALhRX8j\/xu1Gdte1eK3meFjeyn92xVyDIwKiRcPt4GQrBQQcAk5Hz2ZaThZ7NSVtdU7NardtXu076uyvr9pkkZRouTbi7vRaa+7bZJKy7a663TTP2D\/Z7\/AOCqvxN+Cllpuh+DPBf2ezuZirXHikRm6uPMjECf2FoOg+G08URu5Xy49uvG3aQ+XPqElofLi\/RP4cf8FMbr4zeJ9N8K+JtC0jTJ7+wgm1jXLrxVbeHr+a5cvHLbWPh\/wxd+JbqGJYhbzT6td3+iwqsq2iSXflR3D\/x\/6ZcX8O5YLq7hmnDx3DIpVXt3UiSFXikt3Xzh8s0vnLK6ExiRUMgf7C+AGnWy6xpbT6vJYrHcpNHoU9pGz3rou9ZHv7m9lt7eNmiVGa3lm127dfK0\/TsKtzXzmYZfhMxpyp4unGpzLSdWUnyXVrqMeVWjdNcvLzW5WuV6\/V4HG4nC1YToTnFxkm+WSjzJNXTut7J95ayaTbP6Kf2q\/B8mmWlzr3gqO7v9L1fT4NJ1to7uW60W60uXz1ktNQuNRt57HVbRxeTWlxpUelwXs8Us7xyremOU\/wA6Hxy+AXhS41rWvFnw3sLbwrpMeoyPBpetSTPYa5MPOkub\/wAN\/a4pXXTJmhDRadfSm5h+0RRGS4hdfK\/a+H4oeNNW+HRnGk6drui2VjbadqMa60ut2Js4F8hEh03wvfHWRDOqNGy31pbPbyolxLZWE4eWb84Pjb4fOqyWmuRHUb2x1G5ke8eS1u3h0q0UlgLLTpbcXen2kSPNDcPPqMzFkSSSIP5bx\/AYWFXIsc8I6icJycYTTSjUp25o\/u1JyUrJ8t2+X4byer+6rRp51hKddK86cLzg0+anNtLm53FKKcvem9U3q9EfmX4v8Jy+GdNgmvbebTrjUHt9StrVJDJYGxvIpBMYWlCyOY2S1ER\/eholdDNMIBPN6r+zv4gvbPw1490V9l3Z6hbR6jZWYllhmttXitrizOoWUkU8KCdtPvLqFQ7uHyG8uVInR+E+Ld3f6j4gl0Gxiv8AUYI5GbSLSGOW4uRbOjXj2ttFEJpAYo4pSEjDlAodV+QEey\/s92ml6Nea5Z7\/AO3rR7S38T6ILc3Nrql\/ax2ltDZw6dNBG62mqrHqmtJeaddQXVk09mLeSJ3a0u4vrp1FPAN1tZVeWXJFSVlzwsu6asm03du9m7Nr5WNNU8xtR0hSlKHPpZyUZJvWykm+vLZRaTtdM4DTPAl8Z7vXxaTxPYa3oOpl2iQRrBHc6rDFFNEwlhEVzc2K2pW4dDJLIFaNreYl\/df2q\/g7Y+D\/AIi+EE0KSzn8G+LfDlv4h0BtNRphaXmovJc63oywxbpY47O5uZNRsBM0sq6HdWVt5rS2sjj741b9m\/T\/AA9o+jeMFlXVvA3xZ8L+H\/FPgrxDY2UNkk1ze6\/4g1DT\/Det6fB9qe2vbLVdUv8AwYbNbm6in8R+HLKz0y61C0sbTUr3wbxVq8fjnSPhVpngiW\/0rxV4DtLPUZ4hqmoXGo6F468Pa3Yae+qOl\/Df2segeJIL\/Qdc0aZ9Pvm0251a80u2s7rRBqdvp8VsXOhGmpJSvPR2d4RVNxleXvJRUrOTcbNWWjlZ60sLCopJNprlTV0uduXNblfLeTs0lfmVnze6m18J+EtJkmlGpWd9FfXXjHQbjw1dWFz5qT6ZBqGu6cLCZxJbXUMsV7bWAi0+8ncmG61CBVWC4s4bqWz8dPiWlpPrnhXwo0MelX2q6nO93aKkT6vaXd9O9lLdRJbwOrpbOkbwuQEmkkdY4zIUX1P4lt4i0nwlY3WteFW8O6pbHxVpV\/p66ZPpWlre2Wp3N94gl0KNoGaxtheJHqOoeG47y+tLDWptQ1DR4NHg1A6ZH8NaWH1LUtcv764F3Fo9hfXjzIZTHPLHNFDZiP7RFDOEluJEKmWGOUKAHVCCBeEgsXJYipGPLR5uSm2pptSThK6SjJJRXI0lF35k5S95c+LnLCR+rQlLmrKDlJLlavBc0bO\/L8bUk5XvGzsro9A+GXgv\/hIUvNLnm8u7ZrLU47VJIBdTmznEQSNZnQuwgvJXS3jkWSZhkZEbJX0odJ03RLrQXE8Vz4nks3vLqC7RZ7K21SxlsRa28cLuIpEhimlsrmOPzFfULKS2uUKujN87\/CdNZtPEml6taPcQTtcJLc30zRfZoIpp4VhcFkYxyCRZmKTGMu4tGjYLKS31xfa1pXiO3n0rVtKm1HWbC81S+0XUkhe1luLbVUjvI\/nghjZ5rm6a5u4ESJpkmntw91ABNK3Bm9Woq8UuadKzc4wcVKF48jck1yypuTg3HmjK6T1SSPVyWhTlRu4qNVyUIOd2pNOM1yJXcanKppO0lry2UpMufDn4Ra34\/ksrfw\/JqGmaxFqz6fC6x3m2eWWHUryS5uLK2hu18u1EDWNws8TQrI8MZl2rNCn6z\/s5fBuHwxpHi1PiDd3Gq6hqfw7t3tbu0GoaH4i1nWtSuH0q88NW2o3QtbK1ktJp5La4uLWCW7tkmv8A7KY5TMF\/NPwb8VNX0HW\/DrXti0Utk6x22qadJNZatJKouBbWGs+Xc3U94bu4v4bq6cQeXcxQeXC9yqlYv2U\/Z4+Lngq5vfg94W+IkU09voBk8P6Xf3GpQW3hWCbVtYu7m+uJNLsJ5LzULpI31m8nlE93FodjHLNJp91iee2+KzPGYr29CFemvYOq5xcHCdRQpXlLlmkm4pwjeD5OV1FK1ocr+2wWEw1OhXnhryrKEYSjL92pOcY00nBvl52pytPVvldnz8x8JfFz9mzWR4uuo9PnbX7+e1N6lj4fkttVj0KymSWS3DX0Nw32q1g8l\/tN4k0kkE9ndRyLcMkzQXfhl+x7rnhjw\/Z+N9bbVPtniBru30\/TLOynMthpF1bT39zqN7cx\/uNHt7vRtLEEd5czJHNZagV09GkSG4X9u\/HXg7wD4\/vNPSz8Tal4M8G6hZwTXXhrwnHa2c5j0q30+LUL\/wAU6ldx3p1rUrd7xvECacrbbOG5s7i4uxdzwWp\/Kf4weLpRoF\/4n0qbxpfax8OFnt9A1XxVrHh65\/4TG9FzJcX7Ja6AdO8NxX17f6dBJrm\/xNDLHbWtrpjRLfWjJe\/WUs+o4vD0qGHhRhUUV7SUlaMoydotxSUOWbXLbmm0k3eTlLk+Zr0KtOUpVFJQi7Rty86atzRbb1ceV6q6e+t4uXNfFH4beDfBnhTxVpuh+NxcfEPxXJpvwyNvBE89vY+AMarb6vosSQSXGp6foUPh3QvDml6\/rdtHZ6kmk+LLy0UyPrdvFdfnFpngXwrP4z1G41C017TvDWj2rh9ZvtIlt7\/VtZmiluYNXu9PSaWPTdNuLlxJp9pbj\/RdJgso1+2Xcd1dXHuWjftHWl1D4o8R+JNAtYtN1TRLPRriys7LTTqUYttJi0QalBcRWGnPNqesa3DY61PFKv2W2\/sWCVftUNzJdp5V4lhDeH77xD4dnutA1vUrqO0+xTrcxf2nfQq9nPY60sztFBdyW8c0unSBfnhheGUOTHNJ6eRyq0sRUjiIuTlFtOcIeylNQjL2EZRum4RWkZVFzczSlzSgzz8dKnUpU5wlG0bO0ZtzacmlVtKKajKTil7t01vyrX9tf+CZ3jS88G+KPDB1Saxg8K+PLrS7zU9Kt71tLGqWMAudRe\/1SUXEF1LpmiSX0msarYWl3\/ac1pDdzadbpDAJR5J\/wV7006v+0FFc3l9puk+DtR0W88RpZ3S6daanZ68geNY9Tne7v7m1uJ4IIriKKSGQWK3Z0+8EJt3WT5C+D3iDTvhTezXHjK3tdR8Q6f4Otns2guLOfVk1ewht7VdHsYI7fU4tIure3TUBdW0ukahe36rpWoGwu\/MW21b3T46jSvjx4fn1ASaZPrPhnQLWPStZvpUNncw3Vu0kNtFqAvNeudZisPmnikmbRV3yeZPZadGyOPk8bhp082WMVlFuUJTUPLlUlNykpuMOSzVrSWm8UvYw1enVwzoXvLkTVNL3WnONR3Tejc1K9k5clldJSicR\/wAE0fhvrt34t8S+KdGtLyPQINZhXWbS8uY9G8MXX2SIPdf2pJb2ck+pTxvdFIbCG2uYbcFZG05lO+L+4r4AaJoFl4M0F7TSoNPa6soJT5FsILdkKsxAgaNSEOSQ8kclwVIMxV94X+Q79ifXf+FU\/D\/T9N0+7guNYubmSbW5J9IhuP7HSa4E8xtVsrSa3hSWKNGmkvLl7yVXDTX4cC3H9K\/7PPx+s7zQbKOa\/MttDDFFHKsPkqoG0IsgknldGGUKoxicBsOpcKT9Xk2dYfBvE1Ky5eecYqrZJzUYpaNWajsnzK99rt6\/M55k9fGLDQg24xipqnBtuLlytpx2Tbk7xT9Ln6WSQWNupJ2oEAZDtULlSPlAxnByAMscgjCqVJLDqNlFA6o4JYEAAcgoQV5GCBt2klix+ZmxjAb5z1r4p2V1AJLO5LlAI5FBDhVO7+FXcEhizDbkscKANzMMzTPGimM3UxdQWGfm+QlgFJZTydpViQCSMlTu5K7Yri1Obp0bTVr8ydk1zJqSla7as015N+a5MLws1DnlTcG7K1m5X002dt47Wcr2W1z6YttSWa4WNHVdpLKW4yAfm2k84yM4J4wAc9a1YNTSXVhDE4ACxiWMAdQMnBI3H7hXgkEKxB6EfPkfiyJ7tZI51VTGzHG7CvtYheckgNgjbwevoy5sPjiS31a4uPNHzDMZD8MwzgAggZH3SCeOeOQlfO4riet7SSi2oyqxd073StPS7te72S0ejd1E9rDZBTaaablGCaWqXLZKVm99vS1uzZ9Z3qmKNZoHVsYLLlQ3z85KkNuBAOc\/KRuOVwDXPy+LYLOUxueQNpVVGAFTOTyADgg9dxcNk4znxnRPHl9qr\/ZgWJcphG3AsjB8mM\/dkUGNgxBPOe8bEWb9b2a+lijR\/LuLeN7eUbt7SvII2AB5ARUlckHLJtCjOFFx4jxNalz0lNXnGnrd2aVlonrr1b0dk03ZvKeRUaU2p2Tir25V1t06O2mltm2rLX6K03Vra7ELZRWkw4yqknJ+6o4LHpjJYbiM9CTqzQQyt+7AKngYB4G4NkFW3bSO+49TgYIFfLmk63f2qxeej\/u5vJ6MWQrkMjgE7WDZQDp8jKCdjEe+6N4gtZYUj3KZVjhkGWyxSQqd44BIV5ADgkn7oIKEH63Is8jilyVvdm1DSa95SemztdLl3u9r31Pks7yJwvOkk923FaOMbNrSyu3dXtqkvK2q9qvIAb7vUHJPAwedoUgA9zknnPFVHtjwCegGRtIzledpwM9eD8vBGW2lq6JxG0e8dG5BUdQeSw4+VTnIwMnI2k9DE8alcEHJ2MqkfeG0EFQRjaMrye5HJBDD7SLjJJqzva1tr6PRb67N22R8FVw1SMpKV04pb7K3R63uk97bO9nbXm3gAHoQgOAD\/eAPqR6jB6gdCcCs9suThFweVBXHbC8AAbRnGB8oPTgAjoZbdckcEAHbk4AJOCF3dACMEYIBGQATzUfywQASGJBB4yn3sHG3JwWySSxHUZYPt1jRutLbptXfVx8nvvr5a7W5nBptWs00nppdvu77bW62u9dDBaERIX28BQW4BdRnliS3Jxy3zdBwV2kjwz4g+PNP0e0vYZLmL5I5SFdgpchMhI8E4c8AIUVSAcgEEH1Lxp4gs9D0ya4muUtHRcrK8hTy2IJ35wy7AFJbcR\/CflANfjb+0j8Z4JL6eJrm2LxtKrXVnKxjKMhJaWNCytgHLMq8L5jJtAbbNWMaVOdVtcsIyk7WS0tZX2s9d3bfXZnfgaHta9Ghytuc0nv9pR0beutv5X2stb\/nT+158XP7c+Ii21vcs8MV3cR3lo0btmaBzJbQE5MkcrkeWLmOB02SKxJdfMrK+DGm\/FD9pzwF8TfgvFpksHwu8HeOvE0tl4yvYZ5IjaeMLWfWb6wjaaN49QvPCmrGGWW20q+RooXhDw2kNuxn+T\/iz4qvrnxzHqkHlSzSXcrCUSMqyzRKkcM8UjNtE7QAEKyobhoyFzJs2fs98Bkt7r\/gnRp\/hn4c69D4F8aJ4e1rTpPEot4ru5tPiBcjUr7VtWvbO6DRal\/amouk01pcSmK7tNRAs3sC1rLb\/lOZqWMr063LzSnWq1Iyb5ILkUeSnOSaspxlLRXi3Tu1ZJr9ry6X1CmqUXFRhGnTSsnyNqzkk1e6u1drRNb82v8ALb+2J4P0z4P3+k+GfCF2MeG7DXYde8QW2Y5tQmlvftNmJdkiXVm0EcKQ2LOsayKrXVs0hldq8M\/Zy\/a5+J\/gHxfpOuRar4o18aZe288MT6vp9vbTw7jHLYXR19DoVvDe2891Z3OoXoe6toJZoot1tPdR3Pn\/AO0HqXxd07VdVm8Y3CT63pms614auLrS4ZLUtcWt1cLPsiSOJ7ZY7qC68kyRw3YgMImBYpjyv9niYat43s\/D2reG9X8YXOszstrEmtPbvCsI33c0ttJY3U9\/FaQyG8ns01DTZJ4raWKDULOR0ni9ChQ5aK+sU05NKNTk30Sjo2nfVW0cm7q26RljKnNV\/dSkoRb5VLVu9nG1r3b06b69dP659C8T\/Db4++B4fGHgfQtN0\/4kWliNW1nwLDq2nfD25OutYpLYa7F4f0VJ9Hk1TV7mRYp\/Es9uuj3LWbXYtjDdz3GqX\/DHxm1D4Z+GrLSfiJ4W8ReD\/Elp4hW5sbm7n0rVbe5vJIplvtNvr9dD02+0Oz8TXerJa3Ea2t6sF7qfh2eG+0\/R9Tsf7K\/PWPU28AWHhe58PeBF0zWNJj068l03RItb1rXvDtiZruOTVjb6nqviq50O61COEQ3tneah5tuUaJ5kW9h06Kt40+L+veI9LWx8T6JpGt+GdRtPsph8OzWnhnULW6e5s54NXvxp0a6Uk0rBL68tQ9vfWpS1e0u9Ntlu9On8nH4Sc4qNVSmrNxm\/4qWzV5e7Jq6laKTfRSUo37cJVV1Zu0bNx+wrJWS0bs1dNWaSbi48trd\/\/wAFRv2cdA+OHw7b9sz4JSafJaalJFpHxe0yOJormGXWtS021tPHX2ZbeJowdW1BLHxR5tvJqtnfyi61qcvcztD\/ADmRzKMWTxSRRReeltP+9cTWaiOPzIkwfKnKxiYDCpEhCBtqoa\/qT+BHxb1BND8RRT6bYy\/DfV\/DHibQ\/FvhDXIr3T9L1ltZGoSavpdxFfGOCfV9Rtor7TL+3trW6jGla3ZJCJ7W7tLbUPxb\/bJ+C9h8H\/i7rHhrS0dvAniLSdJ8c\/De7Nn5N\/e6B4mtleHSGjjkZ5n8K3f2\/wAL6tem5dLq60ee8ge4a6iU75PiaqpywmJUnVo6RqPSVSjBwpxnUjbSpDnpU6i92\/NTklJubfLmeFg5qtRnFwnCLcVaSvKzlC6eiUuZqSVpLdJqx+fmpMRlmX5jbBjcoudrxJsExXhkyw2MApdC7bUViyL9E6E9j\/wj+i6rIHF5pEaRqRC8ck0s+oJcXdzBJE\/7+OBZmt5JUdbi1VY5TE0aLnzU+FJtQvhPZKzD7DeukG1sTpHGfs0KQ7Qwl3J5MjMXEpgkwjAs1dl8M5b7XpNL01YdxSRor2C4QwpcWU098txbhFQETSWTedGbgb3WLyFmMawND7tZ\/u1JPSKd0tHa3w903bRu1urte\/j0IyhV5ZLWaajdOz5eVuSfVe8nte6avtaLVb7U5dc1XR7kuLe0S5jsrdkjkS4VdTkvbi2kjRYEj+xTxXhSMKqw7V2n7II3OpqkZ0jVLHWraCU2HnWEtvMEkiuLSSVgbjyY98NtMN8QtPLuhK0Vg0UixhHieL134waPbeFNRtNHWyS71NbyTU7q6t\/9JivI9StZpVtssJLhXtb5tZksp7eYhreMzSCRBBmK1dPHHhGfSLW1w+n3tjdNbvAkgaWZ4rESyzs7yrDJd\/2fLAVeaKDfM3KrDathSmn7OSjy05K0+0W2tb6buKlq0rSSd9jecLOScnKafNHr0T5bW6JtPS6avZPVdL4I8daR5z6lII9MSzk1C0gtYGEYTWLm1vJnnlIkcmO31F9NgKKytIJbiPOyOBR7DpHirVIrm21xvskdzq14LG4twrKkelGFbSK7kkWNUAu7hr+VAwmnYRyOSEfMXxtolvb6dZa219NE0mJNOsbZlhZ4tVSCHVrkzROdzzm4nt4GiklVkdZxI+6JUH0B8O4UvbzRoLu7S+hlkttJYtaGJJLUlLi4nt4XISV3e6tmklkdleQIIkO0Ic8QnByqc2nvczd7vlSd223JtL4U0\/eT3baNqT5opONmrJRvotbJLXZ2d36NpHr5jTxDbahYxzTSXZa202ORiYmtnFqBPEAyKJ4pTc2xilXcgTzlaSWVsj4r8RaVrfhzxF4mtLqJ1sdOhnljaYxsDbmYSTOrNndC8ymSAKQrOqGPbucD9BU0Q67Y6i+i2++6tZM20dpE8kqxRXM6xX0aojEiR0e2TzDAFhL4LDp87fGnwpc+I\/D19dWJ8rxDbxy\/2hbsiia9it1lb7JCC75hCNHuKMf380iru8lnfWjOFWM6bS5k0k202rPmad07XTet9bX2aRMouDUryaackl8Lel782m7ul5+Tv8Lal4lvr6O2nWMyW9vIYolckSXc6AKN7AjdEkflFdhDZZl4csDv6HqTXMb3V9fSRuPJ3KjE3MsRcQxW0ZJOIjhhKSAE2htrDOM3xB4M1PTtK09zIPt6JLLLZwEE2778vFIRy0iShUVSoKhsZyAD7d+zv+z98RvjL4lt9I8E+GtU1jUJY2S6ubWzMlhZRxbLi8DvMotpGRGYRpNJGrEK+WEbI+8uWEItWSei+\/XS7d+y1vd2WiOZczqWknf4rbX93dWavqnpe7W+9zPtE8Q3MNo2n2d3ulga1t1s0YOEtiHjtopHYFAYioldAHLB8li4I+1\/2b\/2N\/jL8d9YsIdG8O6hbRsbVmv7qyf7CvnoUjNxdsjQRGMpPvQgu8auyp5iKT+x37JX\/BKnw74Ui0PXvipfWniDxVZN51t4MiukvdJsIbxvtUs2qSQ7hcamGeSNIYne2LRIrySB2jP9IHwO+C3hnwjo8FtoOk6fpXmw2MMkUVqLeN1s4mhhkjjhKmIYBIJO4Fnz95Vry5451qiw+F5ZVdG5PWC16xvF36xUmtG23ozrcYUaftazdk9IL4rxt8W3L2ktXzJKy6fmj+xb\/wAEsPAfwqttJ1jx54WXxV4qjitr2G5lvJhpWk6jHcG7Y2tpsjZnEscCySypKW2bm2CWRV\/d3wd4f0rwppsNvFaW1sY4AiQQwqFRAAdkargLgEjgbsDZn71XbXSLLS44\/kQzFNjTFmZmAwoXsVOMqBxn5QSoyao6hOjr5aAsWdlwrjIxgbSB8y46HZ3wB0Ir6XKsntJV8RN1a7Sbm7NRslpGySST5nFLZyburnx2cZ5O06VJKEF9lSau\/ds2lu3orvV21WmkerahaSltltDvBwGG4tnIwNhzn2yWII3LgrgcsXUncFUDJx8vXH3QRyACRg7RxjGRkmpJQzMTjkgnsQcbhk465GcDGMZcgAb2hKtnAGOOmT8o5PBydxA6kZz1yTyfsIYaMIqO7tu33teyv1v\/AJWsz4WpUdSbk9b6uySvou3pd6LW+1lZxZckDJIJ64YYAXjj5MYDcAHGFwSMGoHx0AO5uOF444B6FSctnBBJODgk5DmRySuOnp82DgtyMcYGSegPOCcGmGM9eTxgDecHjOAM54JXnGG57DFXGhG+11a6T20VrLfTXbo0tdGnl29Uv67erdv1r4xwRxjAOBuJLLgcDGCBzlVA+Ubj82SpvKJORyR23EZyRkL7HA4yCfmyvzclX7NaOyXzj5Prr0Xy6INdGrr0TXWPkvL7+6Z8qr4eUHbszy2SUBVXztPGSTxnOOSTg52jNkeHxgkR9FwcjLbVHXqoH3cqSSSNrBiVYH1EWCjBGBtYhT3A6khcfeX1GSSoXGTkyrYpwAqjIPG0E7jnjLck45XoeccYFZOr1vLdXT72X2r6W+VtbrobLDrqlpazetvhfZPvs7O71ey8x\/4R9R92PqpC5XhQO+CRgclhvxk7SOmanXw8N53RMAcjAVeq88sNpA5UD7xJ3rwwDV6clkCPuHLDOdu7BPQ4O1SMruDYC5ILZ+bMi2Hy8KQeT0weQfmJYdQQN2e+QQRgUKql\/wAO07cq2bbd739bXRf1fZ2Tt3s46OPyd9N9tkr6HmH\/AAj\/AMhxGoUMFwyBfmBByDjghhg8DJyTg5Kzr4dAVSVUdDkqjYQlgBkYO7GOWAzkFgT19PGmnKsFJAxgcqCOFGM\/XBXBbnIGABVqPTGOAA3sCDnDHdgY4GAwHTvxlQcS63bb11Stor+ffVr1BYez1V10snbpe3q3p3W77eYx+HRlFAztyTgdMdRkHBD54IJJ2lhjOa0YPD+OSFycZG5mCZxtO45JAIHRcKMr6mvR10t2wWVVAPJAPUjGQR1IJBGcE7RkHcKtx6TkfMwI6EYIJyQPvEYBBH5EYC5Ule10SjpdK9+1r720bdumjV9Co0IprRau11ronH+lutXfSxwKaMiAYQDghcqM5wo\/iOVwAOQoHB+7nnzj4naakehzyKOVjkYfdHITevQKAW5xgtnCngDFfRj6R8pw8eQOSN5JByc\/IjkZIXaM84DDnNeLfFuO3h8O3omeVisMrhIVWJSFj+b965fnggkxdCPlPIMczbVnLRvXV\/mrrZ9LdUrbaOmlGTtG6SaT92yXe2ysn013d2j+XD\/goVrC2SXah2+aO6Vlyo52lTkZIXGAQCpChuBgsw\/k++JqpfeJbudn+9dTAgDe5zITkAcMANueVA5xjt\/Tj\/wUf8UWMVzqsEGjW0rLHMxmvr7ULl9zGRlEaWVzpduF434aAtgA7iOW\/my1nxDqUurzrBpPhVlMrgi68HeGdSfBcg5m1XSr64ZsN99pjKePnBArwsdO9dRd1y+jVko+bd0779N1dWPqcqpcuFp30bbv53ej7WaSSdtkr31Zw\/h\/QbWeeJ5nZINw8yQIDKF5yUTcxJA7jI6k9K+qvh4fAmlatZ\/2tNrM2k+XsmtpbGA2k2WG8SBJLi9dth3JcQRwtv3I9k0LvHJy3gkWqN9q1bwf4T1dQo3RXlvr2kxLkDBWPwnr3huJCAQVLxvEoChkK\/KfRI2+H1888UcWu+Fr1VRrba9n4o0SacygPBLE0Gi6zothFHucXCSeM76TbsW0kY15NWpaVlrvdSinezVnrzLXdp720d9T6HDwtrG+9lK13rZWsn6977Wta378fA6L4Z\/8Kck8U+Ho9N8Uz2um+VIb4eG9Rvf7NjESebdadpWm+HPEdpHEyvGtreQxRLDEqRO12Q1fkX+1N44t7bV7jSPC8VlougyXUmoafa6QFmhu5rxomvNHuna1g1C+iYSEQ22pnULhEeSADfJMlclpvxC8c\/DPS5NQ0u+i8TeD7K7s4J9f8PalqNzaWZulkNrDKkZ0\/WvClxfeVPHZ2\/iDT\/Dmo3KQTzW8FwsUUi+W\/EeaXx\/qcOqac2pyafe2\/mzy3L3rrbS7w1w0lwXvra5nWVYJWMNzNEZla5ZYHiuJ5vznMMsr087WNr1HPC1JOVO93GDjCNoNNv3k37rdk1KUXzSlc\/Q8qzCjVyirg6ULYuNlNxvFyTsk1\/IrpuSvdSjCVkoHzHBJB4h+Kui241OPS9TudVRdLuo7eC31LTL2y8i\/0vV9Kumu7a3t9QtLrTTGtsJktfNNpB9i1GzkmtbT0n4q6jN8MPFehz3fhrS7LVtH1K0PiLTtEs7vwlPp+u6RerPeS2Mc6La6Ff3dzbnVLa0v7G40Kzv7mFr7w+kMU+m23BfEm41PwRrujas9hHLJqUUc19DqcOl6hba87MJGvY7a+hv7ELdSOJrdbqyE9usz+aq+fNK\/tvxJuNNj8NeD9Y8T+Ftdk0++ngkttc0W4HiDSrvS7C0smtr\/AEbWr2W9vdK1rSo1nsdW+HfjuLUVuILN7C91mIrC+h\/RwlJVMunFr2ClyNJxa59LSurNxWrcFGTcY87ceSafzNS0Y5hTlGSrXjNNppqLcdEm2oya+0na9o2blGS\/e34k6T4W8S\/ssfCPxv8ADK7PhzSfEnh3UfHnw\/0fSUtbvT9F1HxNKuveP\/h5qOnXs8VvPoMHi+zsvGVpozWGm3IsNbuPs8FnrEtpYWP4yWmuan458R+HPiVr\/gttNl8DeNfF\/g\/xn408N39xNNP4e8WWWpaNqEHjbw1LbzarHJ4akvFe8tdTub+y8U+HTrGmR2y6dpmvXN1+5H7PHwrn0b9jGLU\/CF\/Z6\/8ABm6S0bw3qXiE6hJZfDK38RT3mpaTqZbWg97Z6Zomta5r3hyTV7a\/eewhi0ueFpNQvxe6J+MPx0t9U+E+tarN4j12Jrj4g21xqkl98PdLttPi034ieGdYh8PeK9M1S2gn8L6ba3lxPo+nyX1hY20Wj6\/JLpmt2ryvoXh+1028yoP6w6TSbqRqQotVOScVUup0oxjbmi6LnZzU7WS5JVIuUcMFX5aXNzfBOnOpeCnFuMk1O924SjNQ5rOMrycr8k0n8xftUeDfiJovgLT2iuXbwZpWs6lqNjE2qQasySanY6VZTXdhqwkSe\/0rVdP06yuIY7i1t7hFtpp0gYNNcz\/AfhmCR\/DXjiaJS5W38P25IwCBd6wFKEAMcSNGi8c54XJNfRXxf+LOqeP9DWx8L6it3oXh83Fxc6PAl1b6lpcTxJFcz3Gl3ryO2nBhKJ30u51GxsmkZtQNo0sDS8Z8CreLU7HxpFPbq76fpNh4iJiW3F1MNI8R6PdKjJcQvbywxSzGXkCQq0lqFdJAF7Mvp1cHgX9YjGLTUnZcsuWTT9\/+9u99L2ldpyfDjZU8Xjo+x5mpK2r05kkmlazSSXne19me7fDb4Uara6SdAumtYtQ1XSrbxJbXFzdQpZ2+itYahNcy3Ny7xJp80CW1pqNsLhmNzBa3LQRSgRBupXRtJ8NtDc2PiTVPFWqXD28up3JuBo9pcrNfy2QgtbWe4lnk+z3LWU0jy2qySWxMkdskCb4vSdN8P3snh9PF2nT2FvqfxE1vVNWffaQy2mmeFbDSkuk8M3VyjM0S3WoW89sbS2W2ht7ZVh+0T3LmG0qr4aj8X27+N9PsIdO1oSxxXmntbfZbaXxBH5gtm0i2gnjnub2fTZ7a5kt2luFNynmXUkUTRFvDrznP2lWrO9JySqWiuWNV2j7ObfvRg5Jx54ys5wu01OCj9NhIwpujTpx5KsfepJy95wS5vaLVqUoptwg4p2dk375yvhfT7P7Dbx29rqljLe4025uWiiuLeaaMXRmkiby4r8SpHcHZFD5cyRxCCNHZ45D6J4d8R3eg6\/pulaPf2wvrfQpJWu7658RLZpBNIxki1ZbW7ih0+GCzhM50yGO3inYJJdXU8iSmTLtdKNvcXVtBJcyavYy\/aUnkVo59NuZo11N55Qq2gjeQo5dLWN9OtFG64ncDzEqr4L02wFvLBc3l1eyaZbX17q8lvbXm63vY54jbWunMLK2UGRdlteJqM7lXNwY3dVc+NVlSqTqSqyaUlJ04qMndzTSnJvV01BxSj8Urpxg0lI+jhCrThSp0Yxl8KqTcoRSjFw54U1H7blzXfwrXmleXK\/sqb9rv4g3nwivfhl4Un1CbxE2t3VvaeINBiksZ9P8ADetWtjpTx6jqH2qFbG1vJbafULmK+guIp4rCGK5nnM8uqjzKXXPtGnWuiW2qjV9Mh1GHVtV07Sbm4lXVtVmtLYPeq8dxPGkNldvBcQA6LJbTvcrHZxEW08t\/5DH4IvbBrKO1t2TSpvKl1iGHV1tLJ7qKW2aW\/axWZka1jScGaSS5szhFQ300kxiOno3hvV9B8UR3+mWk1++oRFRJI8UOowJZ3KSWVzeG9tIVsWdhBBYwTT\/bBukuYrcC2jebClUwtK\/sJRStOqn7t51LRupz53yJJTlGNlL3pSV38GNfC4io253cm4Qai3yxg25c0UoJybbipS1TaS3XvdpqOhXHhCLVNQtNMks59OihtbuzNrNf2NuDaGW9it7GcafNfpMSj3szxwQwuloBHDHdQxp5\/c30niWw8QaO93dSW1o2k38Ec2najLZXUuiX8szRRW8ROnT3+mXDC5lvoPEbxDS7mWxS0uoEgsj9teIj4L1Xw3fX+s30Ntrc9iEurqe4\/tTxdaSRwQWDHRbXU\/stnHbz6hGJNPlgVXmmkvLsrCInd\/h\/W9KvPAGuW994fj026l1S1kjgkvZNLkttRknMXlXun2ssV01tqQP2iO8uBcvdXMrXCQvbW7o7epleOhVlKU5tV3rHncbOcbPm5pX1SWkr8zu2\/wCafiZjga1JRhFRlTglFuHM7Rm7JJJa\/FquX3VolpynrOk+Cv8AhY\/h34a+LLJ76TxLe6ldafPPZ5ttNliubP8AsjX\/ALNZG2ks\/Ed5dW2nR6dp8ZuYppDHcXEsDxwrbr9WeG\/DthYeA9MWey1CS21a4tp3lMEFrNdXIJkhxa2NnEyxwWaRQW0Gp2Espt2hW0hit7KGWb5T8M+OLLQrHw8niTSLXSjoa30KQ6KllqGoD7TBbXOzULaCTVNRicpb\/aNS0u40+GWMDz7e2E1o8Uvvei\/E0eKbi3n0TTL6PRz9jvYkt4\/3Kk2wimeG1e3sroWUpOwRapbtHG2GurNUQmjH4n2iacbQU2ovdKPMmoqceZNL4rJ2um0m3qZfQcHfmTk4q+mrdopvW2t9Ne9tEtPpbQNWg8F3k9pDaGKzutMR7hdO+yaddCRghW3Wzv3tDfXYBjW2gtFgsYxiT5pC8TfQfwg+Odz4duYtPvb3UbiNZJltbYFbSy8\/eHLO4VZLqUscNIsFurBWwGhbMny18O7YeK9bbWNTuNE\/4R2N4hBol3JqaRQXkTbII428J2gv72S4jZFh063eaFQI2a0WGKKVvtuTwE+sW0N6lr8PLDT7KySK2tg95L4hkZYwzu1rqMUVzZZI+WS7ZbpIhukhjVmLc9DC\/WcJXU9Evehsk2lezcuWKb681ny6xWh2VMVGhiKC0s3aSknZQnJK65U9Fypx1k7tX25T7h8BfFe6ube3kvbhfKvkQ7fO3HzCQAFBII2A\/MCMhz\/C2MfQFl43N4YrZLpx5ioyxIThs8fKDgF15IRcDcSSByT8X\/BDwVdavpht7+3SFtPljuLJkcuk6\/O0kf7xI5F3r865UBgxC5IJr7V0L4cxywpcQvIipJFLG2CksEgdjNCjkcgAtJEB95wnPL4+X9hiacpxW15NKU7StGUlJXTadrNRXVtXdnde+6+Dm4vrG0bqN021G0trN91ZqzbSulb1W01K88yycSP5VzAVjl3gxyOBjbnIDHLKSAM4P3RhgEjs9aXWLRYxJc2by7Z4Yz\/pcKvEs8Elqk8kcc0ksLs1qqyhLhoprVnhXMrekeG9DtW0OWyvZIItUtwJYl8hJ4orm2fBuEQiS3e0vUcrNHIjQw7gCqIiyJ09jo8Fy8GRBELR457XYZZ2iNtcpNb+QjFpprf5pg0Lz+daPbK8FzL9quzDaoQny89S7uqllKN+aMlzQduaScrOTcklCLSd7uUcFiHFP2dONrShzNX5lJLlqLRX5eb3VGXvO+iTUZR+AdPn8O61LJqmdS067WMxTWxkjt0ujlkltpJhBPDdSCFJjYP5LCMQCCWcpBd2\/wBLx2UNzBHf2kSSw3EqRwyhZiJLe9t5DA5ikA8lWUxxGEqog8iaCJUFpbQLyfh7TJtWlhtpbOOaOQRyF4dmEWKaWS3kEkUapcJGDcJFcqPMV1QOnmxyk+7eG\/D8KWix36eXM0lvFeQ4UG8t4t8UN1HCyLGs8ckzm7SFlG8ERuyOqj3MBCUKdo6UuaTi5xa5W9UlKTfNGLu0ryv7yupKSqeJjZc8+epb2jjCM3CzTirLVRtZu1r2inK32XznkF7HpkkTx3UEMTpAs0UwVgXDxpNNGZBueaNEjJBILw7SfLdJBC+THol\/b3RvdOnaSKBTIIAwDGMqFaMYLIQYJkYyRl1DCRXaMjI9o1HwMYtP1ExhDLHeNcWcibGEkTXYlHmIURUZw6qjxlQI8O+ybeEzNF8OHTcrdTFo5MywPsUm22TT3EsUpRy0oJlWONSo8uRSGZiZIoPUUuSrGckly04yjUUlFw9\/lg3JO8rNJNtNcutlZtebKnCpTaTb99xcZKTumouSirK17ya10bfoc7D4rWG1FvcsiybfkkZmIG9Y2UBiqsFkWX7QNzKediiPLMOs0XVbe8drUzA3W3zEjBYloiRglQFUOFlQyckoZQHA2Faq+IPAem6hBJd6e6W8pe0wFwE8+HypklcACTB8qOGWMs3mRSGPBZnFZw0q70SCMW0iTyEmGS9ZGUtE8gecxxtG2yRJLe2EkagId5IxGuJvosv4inRnUVaopUo0Yqk+ZN8y01Td03ayfK4qLejsfP47IKWIpU1Rj78qr9rePLaLULRvZO2rvq7tL7TTXaTzoxYEgMclhuVsknnJDKdgLqWyCGGWBZWLDzXxPrX9nLLJ5jqqiU8kjIKkg\/KB3JYAjb3C4yTo6rNf2gmQiVI1SGVHJQ5hZS+xnAHzEHzXYOwWMjbxGQ3yb8WviS+jWt9FKwKx2iZuAu6P7Vc3ItrewBaNGa4llJiwFJMyygAgAD73C47D1owtOL9o\/dV+kZWvfRRjfRcztdpRV5RR8Hi8sxFKpUXI1GD1m1b4orZLdt6tR5usm7Rcl8xftYfH6LQ9Mv8AS21FrW6ktpZIlm+W2uIjGWCs5A8tpEKtkq2RgmPhlr+fbxP8XtX8Qa9dzx3DASyXME8UrkI06MYVhj819spiG9z5Zl2wTRs7DzId36C\/GzQPEfxr8TR+F11C0LXdvqGqG5a5Zbi304adqDvqUFvbpcTixtIopL2a5+yOlysE2m6TbajfW9xCnwW\/wi8O+IPE+q3dtfyPbaY5s9GhsJY5IoNM0429ssZnhe5Ef7y7t7rVtSvhNFLeXF3c3ly959uKcea46hONTDQqxk40VKo4vmUVP3Yq8bpc3K2mnaWvN8KPayXLKtJwxFSm4t1Pd548iXK4uaSdu9tdvdba0PmXxxZ65f3SXmk\/aZJWYRvY28rGUxlWLNDuSRElXLOVkQqyblfarKW\/Rv4HfFeT4f8AwJOh67PqL2+o3k9\/erbWkZitJbqFIRqd1G\/luLezuYIDrCrDNieNbgsJLu2Sf5Wu\/Cn2bWGmspJZorSMPDdTgxLK0JywYCIsdsahmBQSoHHmJHuCV5N8XfiL8Qp0\/sOz8m30qTykspLWYBb4yeXaXVsscyxxxXH2edluhJ5kjqU3JMysB8ng8IqivNSTgm1FNWu1bmS9Pv5raXd\/sMVW9mlvzSau1ZN2aeuqcl0elt7va\/xX+154hi1fxZpepMqga5rj3eq6Tp92r20klnG0V3cxBBnyZZ5jmRyWZZApZhGr11n7Ivww8J3fxF1v4ialpMdnpuhKBY6YJNlu+p6xajS7cwT2yPLDdrqIszNDJNbw39vdwyRyLPE0tbn\/AApbTviXrnhnxD\/pU7KGt\/7Ev5kzbWYhmuHl1J0eQW07TWs0KWzNseEQ98bvoLSfEvh34WeH20Sw8Jw2lxqZjaCWxZNmo6dJNHHcwyifzbaWOO9sLK7sZHSVdzt5mFRgPXqUOTBVFzxT5oOyhzSaS5VeVuaNuZ6cyu7OS1bWEaiqVoNp6LS8vduldvT4rS0V7u2iszY+JXxj1\/4a+L7WTwp4VsJBqehvYPaRWM7JNas416UWt3LqVrLd3Jt5Ga2sJ7r7KIZPsjQzqEsW0Ph54Q0z4wrZeIfCnhy8\/t6KIG\/8OX2n2V3CzTyG81G3m05rJbaSyaWzt76O0hjjsJXttSZ7Vw9xHcc9ovxi8IeL\/EWlWPi9NP1PSNRgvNEkurfQ9J22MytPDc3rrqCiOOSwlluF1M294z3AH9pRtHLbJM32p+xv4n8B+D\/jR4X02O7OoQ62njCFtfuZtPZYidK1s6BcWVk7SzmbSZrPSmluC9wl7Y6jfqdP\/sy0sL698PGSoSoVG1UVWnGPKm048seRNtau8VdJx96Csl0Z6VOXJblinF870XK72UkrJ6Xd1e\/W2rTR8parr2oaZH4h0jxfcXVlqXhPXriJI9Svk0201KDXrJIJ9Wk0+TSNWtZL3SXuZrqK+lmS6TT2S1KTWWhWyW\/S\/tTeIvhZ+0l8LNG0LR7GzjvPhz4ctm8B+J30+LTJ9YN7p8eny+EtCW7nhnGm299ocl3pbSSzRrJqV9dSPbrc3M1z9B\/tb\/AjT\/EPijXfibpSWmoJpl9c3djo2ltbQWUunajp19LpOraW5he6vtNttVOrQ6\/BI16+lWmiXmogahbieZfzt8S\/CjxlqNrp2pW8szadqGtTWOsjRZ7oyaZqNtZwzXunSmaGwnubcLfQNe3mlMLaXTnRLbVNQmiuhB5NHF0KdaNZ1FJwU1COivGfK5RkrpSfKpX6+zaknpCT3qUKtWKUI+7KScvja2XJe3M+VJ8rtu1Z2TaPiXwB8PLyG4nm1DUjBHp1reCSSGOMQXbMt5BPbtI2HuZpLSCe2GYYljt5VuWSYXYaXz3RvE03gHVRqtp9mmlee8uZrZIiBpt\/c2zt9njL28uz7ELryIYiZJbOZxHG0MkaSL9raD8L4bHStd1PxNPdeFWjudXtbKG8lnvp5I59EljsTLHLJay6dPqE0liNONzEz3im8i3B7tmT4N8d22o6f4q8VaCbSSWLR11BDcxJ+7mmt5b0LdW0zJElw0tiLJ2OH+2xWwZJpY5pJ5u\/DY2OLqVIX9yFnUWqaTSitU+Vq91o73bT0atyYnCyw9KnJxak3yw+0+kndbrRK617pbnu2pXF58Q9Z0zxXpeorMNVtoP7VjEw8zSrqIaks08saI\/lXI8h5LExQrI8t9BtVInbzLPwhh1Hwz4s1G11Cze5u7rw9c38drEC6u9rHpV4w2yebFNqFvNbX0MsAkjQ6lALaI5tpI3+XvB\/iiTw\/M8mWRJETFqS0Ad547uG9haZEzDM8bBYz8xSNmctE2Hj\/TXwh4aWC90Hxvc3kRGmeGoGexPkwwNZz+PxqmqRRQNaGKVJbTTtdigSdozPFdDU45JUN6r6Yiaw9KcJxi04QdNKSi5ezlD3Xe95uNkkrJye7ehnQh7eVNxlaSdp6X5U7q\/ZxttfVb2tqfFGh+D9SudftIdQtNSW3nebW9StTCpuU1nVbkC0WaCVUMKPfw6fHPExjBtpgVaFHVm+pLSLT9L8WwX5ubiC1k1XT4dJSGIzRS6fa2VpcXF+lvtUwxyBdPM0bLgxPCsiM1+Q3MT+KZdL8IzeKz9vMOkGPTpLQx3P2y\/1m6Tw+142pxSOCWsgbR3OJJbRboxW8ck7yJD3nhhl1JdOv7uOSa\/tb5YJNMuYHtV0qJrtxq0PmK5eKKRtHhsjJBOtrcsr2UscccFpHXFVx7kr1ItQnzQbSTfMoJ3v7t2rptNK7SdlaSOmGFab5G7+7O21lsnbTezs0m7Wbb1Or+EWqeJPDt7qt9qFjPp7y2N4sccfmS2sltJFGbX7Q6OyiaCaQPJcMZA8dzJw4UxLzfhfVI9d8c6j4auo4\/Pu7y7ns0UJLLZaTpSzNFO7lQBFO1u1zKwQef8AacfKF3nota+IOpeCNB8TS6robJdeK7LTtOtnuysS2d9YLdQ6ldWmN08EJljeWYyQhlggWJ2iUMq+Y\/CXTdYm13TfFMdwt7DfXV3YwtDpzQXN5pC6m8dvJLIcyxJc2LRvCsqRxRW924kHlqpO8asVRxGIp865rSi5Wi5OEFF6O3RuFpOXLJLezbj2b9pSpSvdP3k02lzTXlppr26t6I+nrj9jrTtc8XS6t4gaaDRNXttJvzfaay+VGLuBLiW2gjYx\/wCqIYyrEwlimVldWjJkb9jf2X\/hroOkWel6N4N0iLwv4S01LG0tNC0xWS4164kBa6v9c1G2RJb+4dmuxskKRq8QjSJl2bvEdI06LXvCuiA6TBcasWg1HT9H+yXE1zLYQwxC8uHSHz3s4gqlS7vIkiQSlt3mRh\/0P\/ZH8FeOmtrO8nGjxtpt1Mqaels4gS2m2OiR3jwkKYZPKzGisImDRRBwFDfKY7NsTmEKOGpNxnOo6c1F2c0t73el2lKUefeycWewsFSwSrVaiUnCN4ymouLXuvTeXL8K1SV03zJpW\/WH4PfCrRl0a21C\/W3W5jJ+xQ21lBAfs4dpQruD5s6MxzuBVowXcx4yB7\/b2drp6iOOFQkeGRkBQoUwdpIIOOeOASuAcbMjzfwO13Dp1qLqOWyHlo8sLziZo5\/LBKxMqRMsJYZUjYGznadxr0trmOfkEkkIQ7Aeg+8QWJxknOMEc4JPH63wxkdHBYGhKdONSvNRlUrSi3UvLldnJxUkkrxS0aWiWx+ScRZvWrYirThUcKak1GN3aVl0Tsre9p2aTck9BrzOTkO7DOMZPII4wecYOBgY4GMDmqhLkk898Y5xyBkgldwwGztO4Kxxx1lOCd2c5ODwOpwTjJHI79s9TkZqJh0XGM5IO3qcEjAyMk4x3xzzX2MaceVNLWyu9NdEmlsrPo2ttNrI+Obk3d3066u1t7K6+d9rq++sJA4DFi2QNwy2AOSMjkgcqTzkHdlsE0085BUnqOhOTuwScYDKRzgHqQx6cznLc43AEBiABjqMZwMZwc9CAT8pZSTHnIGD1zngg\/Ke4GOcYAO0YbJOeptK3Z\/lrbtffR6rS3zG7tNWd2lo\/l1tZJddOvTUhfk+44wAAxwQV3FcAdicHABIBG1SYGyB\/FyFzzx6gYBOQAVwcjAB49LTLndkHPI+ZWOSSOSeTt+8CwAwflHQGonUkf3s4GPukkkjO1umQOWOSSCzAn51pK1\/66Jafd5ehMk\/J9d\/S\/n1v872WpXweQQSeeAQTj1wVOTjnrkc\/e6UVMy8N90jaRwpy2CCTwCuMjBOeARuywxRQtP8++m7\/pktNPddP0217fjrqcQtvH36E5IyNoxxnr0xgEcjrxjGLCQR8DAznnBY9w2eu08Kd3RgMYZhkVjrqHTOBknHIbCkKc8Hbwd3BbDELhiDg2o7055yCMcAg45AUjAUjhcnsCNq7uCfKS76bW69V9\/ov8z2VBrWyTtrpby9Fp07W10NqK2TapwvGQx6EHnByAOVcHknoeeABV6OCEAnH8fYHB4X1GTgZB5xkHGSCKw47k5ADdeeHBJOSWyMjGRjIUHkYxgAG9HdfKOSCOD3JGMA5wRn+LOCchlxnlnbbZO+\/N5av5t33v2VgcHpbp8t7abPrpa61s9Erm0lvHgjaoGME5HIyP8Ad\/iKnnAGMcE5q0kEHJAHBA6Ef7QAGB0HJx04HYYyEugRknGRyuQQcEnrjABOfvHsRzzuuJdMfutnI7MMFt+\/5guM\/MQc4OMjcDjAS7O35Pp1fytps3tqx8jfNprs1Za3cX3t0T+SS620vs8fAGDnOcEnJUbcjcoXkdMge4ww3SraqRxtHIG3n+7wOwOSARyR8w3D5jimlyoHO\/8AA7uSxLAghehbIxx1wB0qdLoEAMTwFxuIGR0GFOSTwwCjoMnqcFf12fS339LXe7ZUaatqr2a1VvJRktk9dEuu1tLE0kSBWPykLuIycEBSDuxkEZJ5ycnnccDI+dvjfaPJ4cvjCBvEE5BLKBjy2BXgjB+XkjC5C9QAF9yv9RSFZF3YO35fmUZ5IzwANpB5w3PQcgoPnL4q+IopdD1GIMGkMM+Yzt\/hViTgghRGikk5zGfmwAjE3BdddNXqtVo1Zb6vVabLrqKUEtNHd28ujXda6rd26u6P40P+Clk91Z67rscibOJNv3mHLv8AMGJYnIbcfmyMjI7D8GtLWG41lvOICtIdoJHOSScDHJYenPTg4yP6E\/8AgplqfhWPVNVuL6Ftdv4hPH\/ZtvdtZaZFIW\/cnUr+BRe36sC6z2mlyaewXy3i1wHci\/hZp3jbxRDrEep+HLy18Df2epjguPB1pF4avLa3JG5Jtc08x+JdWYnkvq+s6ldOSFabA3D5vHuMMTL3m13tpZ2baTtvdcurT12ej+qy2LeGpXS2TaumtHor6rXe9tNb3asdtNoGvvYQR6J4d1zUp5UCxLpuk6jfGUNgFE+ywS+Z0OAFPXO0EZrnR4B8bQ3QOo6dY6K4ZS1vrvibwzoFxHu+XbLZ61rVhdRN2MckCurZDKueOb8Y\/F7xjrDS2b+J\/EdxDKNl5dX2t6ld6lqrkHdJqF3PcyTyoT8yWhcW8YH+rMhaRqHhb4h+PtKXbo\/jrxlpYDLhNP8AE+t2IGASFUWl9GFAPTGMYyD02+XZz1tb\/t++mn9xLXXrv53S9WU7tqOiSVlt97s+z2+Wm\/ez6N8QPD90muaLYa9bTaYriXWdCSfUdKhinRoruCfWNJN3pU2n3ltNNbX9pLdS215aSzW9zHLbSyJJ6z4Hv\/Buq6Paajqy2PhLXoJ5Le5ubBTB4Jv7pbVl36h4et4LVvD9\/fNBua58LLqem3Ur2dlYeC9KghvNUfzSy8f\/ABD1C9tNeufFF3rHiWwdZtNvfFSWnjKZvLYyAW8ni+21tLe9QqjQ7REboAxROtyIY7vvdE+M2t+JF8QWXjbwZ4b8b\/2xBM2r397fR+G\/EFwGTDJp2tXUr2FsoR3kl0TR7fRjqKRiNJoGBmfy83wv1jC8ibVqkW77ct7O71aSvF3V721taz9bKMTLDYudVpuUqTUeVpyu0vstKM2+WyUlbXRJpMxfjn8Lrz+zNO1a50u7ntzcWtta208Vlq1\/f6bqE6QT32jeJLKe60XXLazvfKhWQ2Nrc2d5fJbytrFy0lyvufwR+FWr+JPB\/wDwrvxDq93o2sGMa78PPGcYh8N6X4x0nTrlZfEHhi7m1lrXTr68+z6q76v4U1Kz1DUtK1KXTdWhl0+8fWtA+K\/0LP8AATTdf+Bun+L9HvNfgsptKE+p6P4g8OW10ZrG1CpZi+0RoXXxCLWxuGsbKVNf8QSWKPOfD+twyS+ScGy8R+OdT\/Z707xh4G17wjqd38OtU0nT\/E+keJtIisPDWvxaJcbrWz8Zz3cumWVprlpa3dzBY654gj0K802zmuhrur2VlrUNveePRmoRhhKlVOj9ZjQlKyTpc3L7KpyyUXKKmnzxfJzRlNJytr6eIgq0quJjBqs6KrJNN+0jHScXyuVppWcV76bUZe7zWX2z+yD4p1Twl+zl4q8HQ3upXl74XvvEmj3Xh7WYLaefxF4B1CFZfEvh1l0p7\/T7+98GTQ2\/jHQ75Wa5tNAW1vfCN1F4Ui8ZXEn50ftqeErTSNOt9R1B28PX0Ohabpeo6cLWSXQ5k0u3\/sDwv4pFyLu\/tUiudHt7SwsvEGiLDoy\/2P4g8HXsKeH9E8Fwx\/uJ+yH4Z8J+L4\/hn8TdD0rQfBEXi3U4hqvg3Xr83vhrU1u5LQal8NNR8SazZ2k1xren3Eunal8PfF97FF\/xN5rJPEF+dB+JOkalpXQ\/8FY\/2EvEvinwkt78H7XU9O1PRtItXsbeK1IvtT8JFLc6xox1M2z6vZX+m3F5p+LNPP0680uzvZIoNd8QalfeGbL6vG0W6eHi3eV6VOpP4XF01Fqa3S5vsqzSUnyu6Un8xRqxVSrJJpPnlGLu7NpXi3o2lqtnt7zSjc\/k2+G37OepeJJNQ8fFrnQdG8R3Vjax67NZCG3s\/EVvc6haamlpJCl7Bp17b31vdX81t4ibS9Kubaw1fSbySawvrKWfJ8R+GdD+DnxB8Q2OnC1XSvEHw6vb1YrSH7NPp19bzWkd9p9qt9DBcRJBrOnyrFp9yZLl7QWq3TO8rXEn7i\/8E4\/hF8RNY8BeNfDXjXWYvGHh21ku9L1HSNZS8nfWpdJure603RPEj3kcn2bxp4eRLS3tdes5b+CfwbqOk29zdw6dqfhn7P8Ak\/8AtZ+C9LT9oa10bw1FN\/ZUWvxWWk+DriU39z4eFxFY6df6PDPdyLLqWkpcaVFLbG9mjubLyrnStUeW+tLm\/u\/AjiJ4nOcRgJVUqEMPOc4twilaNNQTvGMublk27WjZJ3u1Fe5Tw0IZdRxMKTjiPb0oxkk5aTu372n22nFe89brR8z+zfC3wa8W+PIPDU1xaX1jaWPgjwtaRR2sV1ClvNFpEF54r8SXdkitazqL28liltbdLi8urqa0WEi4tG02T5b+Lukar8J7C8urpp7I314kGmeHY7+OTWtP8JNBcrLrniYeHruW00eHUroILG0v77TLmV3M32dImty37X\/D\/wCGfifS\/gx40+IUxe31iy8L3WhWmbY6pYXUc1xbx6jqtjZ2cV3DpGnQXWm3LWbtqdxrLxR2q6fHPf6vbF\/yW0f9l3xB8QvF2onV\/Evji68TarPqPjTWojDdS2+g+F5pPsugafq+oM4srW58UySsbaxtdKmtpbGSz+xaXfW2ySfyMNVTr4iGIkpUKUny0qcXP3ZTbcYKN9VZOdR3t+8SjytteriE1TpfV7wrNWnUqSUW5RhFucpNJJOXNGEdejlJy0Xyn8J\/Fpu5L+ysJjfT6rbvNPb3CW7WUQbzIIWG4xkOIpikU2oPNCiwy3MoaJkhl9bHiFPDF\/oeh6layW1jf3MtrDc3Nj9uMaw3EoMISGNY5YreZi8UiTQsHs4Jo52CCRfqy3\/YBuPhXdW2r+Io4vDGr2rWt5r+maxq2lCO3S9t4nsI9B0KC71DVpNJvjdx2qa9fLd22j3cMNpqVxplxdxXNr81fG3VvDXgeJPEV1FZ3DRSwG0tyI7S1spLZIkFusd4moS6nMGZpru5gEUUjOzuiy3Dxngx8qFbMIU6FCdWGISWloSdeEVGCUouUYuCad5JPlTuryi362XzqQwE6mIr0oTw1+Z354qk7Tm7fFO6Tj7l2rqzsuU+1dI+GPhqa3sZbHUIZVnjuJ55rObTRFHaXFpaQmzW8vBepYzSyrbRQJAlw0V0weW2lTTn8z5ij8P+JLTXtV0LTSNB01ri7Ed5CZIv7Q1K5uGDrbXd601ytmyQSwz\/AGuS3LwRi61C4gjfFv8AnX4t\/a8+IutSXUGkak+h2ks7Ol7YBrS4iiQGGP7NFbSKjuqvKikRLI28yzyQKiiPw5vjT8QkuhdQ6\/qipBvMPnXMksrNKwkeSeYEPLczygSyzr5cmVjCNEkMKx9eE4WxypzlUqUISnFe5JSm+ZO\/NKyUW1e2t7XbSvY8zE8VYP2kVTp1aihdOaaUWvdXu81papOW9rt3ufa3j7SPHGlazOza3pS2yBLkafFr13PaWl1bZYSXUslzEJCwaTUBBpvn3CyXFuDJJORCfLdK+Jet+D5bWO\/1OS71PUGZxY3WnNrGiOs7Rh4nW8ZpBdXYEbPJNpssEseEF2duYvl67+JfjvV76XU7vU9QvZJ5Y1leRWuB5h+RIwzxsGmcNs3FXlYkKzMSQeu034qNMII7\/wANaZfTxDb9sWTUob+aQhVb7RdxTyXF5kLgK7KqDcIXTk19FRyypTpRhVjRrWiub2UYwV0krPnu2ttb3dld3aa+eq5pSxFSU6c6tFylde0c5rVp3Spu0dLq3K0r7LVH2F4h+IWt6tb2ZkvdEFyY0Wb7NplppNrBDGiBDf6dvvNKu4tsaRM0ENuJYkjSeW5kXyZOCT40+JPDt3D9kg0LQ2YiJ5LbR7IRTQgAySpbwypbwu7bSRaaXakso8+a5kZxXzZqviu1urqS+tNI+zFGRTDBJemNJHLERIZLqaTJjBLOzPJhCchQoO34L0rV\/FWoxNFavJEZFjjjJFyyqTgBYnAkGMjDbAoJHKk82sBShBe0pwcLaKSikr6tNJ2lbTdWVl5Mh46pOaVKcoydlo5OyVkmuaN03Z9bv5WX7D\/sM\/EDxL8QPiLplprWqa7qekJeW0Ut1Fqd3bm1tTJGUt1aQaXptvaRupma3tLOOd3Tf9p4Vh\/Uho3wl146Lp\/h6z0Q6nZ3Bit9IvdTG\/TYhLCWWQW2lJeNPgusgd7+LDNubCyNLX83X7F3w+svBSW2satb2t\/q7srWVjPBM09rIdu3zPLkgeKNGUNIlu+C4ZixZSG\/ty\/YD1fTtO\/Z40Xxr8QTpt1e3F5fw6XM6vPFHptpMsEAUyCVWjiaN40uY22XKxCd23uSeepKlhqM5JQpUtXe8VFc0b82z2tfSzW+lmddONavKHx1akZRUoxSc5SbvFWSera1vd6KS7nh3wp\/ZL+Ifg5mmuNMtbuyvEhu4vKi8lY5hw0EKFnmhKygywyO8iJtKsWjmlRPqIfs4+NrO2sr62h8uG7\/AHdzAsqM9gZCUiaZV3wG2Z1RbhChiO4Rh1gmkCfb+l6p4a8a6ZLqmgX0TOhCmG1lTaGUAjdGDhcYOFPTAyB35ZPF11Y3F1pz3iNPEFjEE8oUuoY5AU\/MThim0cbgyhTtIHzdWWAhb6xF1lVs6dSnU5eqk0uXVtx05b2V5faenrUZYyfNGjFU500o1qVWL0fuK7TkkkrpuTXRPRXT8T0z9l7xfLJHdCa3trm2RljIdplubICUyWssTvtkufkjjSTzVV4DG0ao7CSLZh+DOqaRHDHq1v8AYbtIUMc0YY4uQhlaTLo8UiRyw2s63Bg813hkaVGmlO\/6O0Txvdw2oeUsdvmMsRkDSPGBltoAA2BQyqjZwmPvBQT2Vt4m0zxTZm31AQEfKYyx5KKQu7LHdiSPIZWCud33QMVpTo5HWilRp+xquN0qkm03ZRTlzXabSWvutWWraRnUxOb0nzVLVaUXZuneLgk20o8ratdtq+i15Wj5u03S\/wCxbOONLrdMkE1tcJKFWSK4Xe6iNkCoi7pxGdu+MxjzUU7FY9dp10bu1dboql0FUxElt6Oru4VVbJ3MHEYAUoVCkqFCsZPGmhG2upJbJfPtLuO4jmhZVZQ4j2qrkgkB0I3yJhyEkx8p48g0rxKuma9Z6RdCVbG8tUuLX7WGkdCd0ciGcbW+0Rwx2cy+dFGivGdgYF0TzcRXdGrGi0owi\/ZpczcUnZxle1tm1vdN21vZddCh9ZoyrJ807e1ul76avzQteybtotE4pu99H65Lq90NOnV2SRFcxhmMqvANspL71DKUeI7RKAVkMsJiAXywMy7unLRFgnnCNE+1lVZGZ2do5SjAllZ5BsZkBjYkK8civtn0zVYLqe+tLiNBMwaS1kULHDcIk8RTcVI2SuqRoJtxLO+9GfZtqa8t7WUwLHKsR8yISIUR1RFXy8oEztRCkhLR5AZWKHzFYLm6k5U7xrSkk+Vxba5eWVpRd7JNNppX0SfLdDUYRqKM6XLdc90m4yUox5XoruOjjZrV7q90LbwMsMckErywortPGpd5UCPcRqQFUbEIjwjOVkVZESVW8uoLnSpZvLQSCS3LC6WbZiTz4pWmETqMLl8yRyxbdr\/PEpZt1alxZvoZkvI7lZ7WeK4E0e9zE5lEbqSoAVsRvJskYqxVQHwYttalv+9gZ7Zg22RG3B92fmTzFboTl5ECkArwXZ16UoxUJcuqkopygpe7JK1uVc1mpdU9NNlpzJtySkkpKT92bik0+07xVpRunGS+JNXT1t5vqdvDq1rf6ZcSbFt7mGCKQEq6xxRxTO5w4kKhWdIkXMbBA+3CJv8AL\/EHwr8OeIY1sbsRfZ\/tguPONskvzWgkkKQiZJbdZZ5ljRLidJgkBVDH5RxJ7veaVbSXxkz5d5JZNHLGCTHPKsaNG0QC7TJHOGEWQD5IUKVGQ3H24gnk8pXihls7xICkiRiUxf6QZ40K8+XKRAOfkd41O04i8jenmuMoU1SjWsrum1zS5nGOsYtqS5UoyaknZNp62eilgMNWlOfs27RhKzhFuLlGKc1a905Runa9rOVj8rP2oPgS+g+BfFOk\/DrQ9OXWPFukHTLyS7tLS8uNTEc9iYJdZ1XW1Ol2enxeRLdPYGGNdWfzWlJXTIJZfyl1r4ea58MfDbWOoRSatb6bYxQT+ItahhuNa1WeS6YaTp1rI9vB9mbxHfX+o+LJ7WznlvtO8O6pofgpneK31DUbL+sG506yuREoi4iVJd8hREDSkjehYnfKp8xI3x5waRTuZiu35w+J37OXwx1uXRL+TQ4J5fDuoPrGnefcvBaJrFvPeXNnfS2rRtZ3Z0t7y6vrexubS\/077f8AY7y6srl7G0gj7cLnNSgpxdRTpym62I5pSU6kpRUVFSbtJQUVGN0lBclrpchhVwVGpKEo03TqQj7OioxXKor3m5L7DcnfROTb0atc\/kw8dRanZXJ+127wTtPLa2flrJaxAW+0NJsu7eN0hkmkSSWYqiSXUiWEKQ3NrdWWn\/LfjXQ\/iNHrdler4cTVBAJCILOSSO9i08qBJeRQziRFnilKTeZEI3Ufd8jG8\/0X\/tJfsM+K\/iKkdx8MtL1LX77RpLi6tP7PvrfR4NL1GKSWWwsdPhSNksbaOaYrEmnK88k9wJNS1G\/a0mkk\/KDV\/wBmn9rDQn1mx1n4PeONXsrPxFd6NZ6lp\/hnU54dTnilu3gd2sbPURcxLFaNejzdS1Py7SSCW2lmjuIZJfsMrx1OdNVFeUZJcrUna6vdN8rTtraV5dHJtvXxMbhm5OL0lFLRqzjdrWzV3Ky7K+miWp8h+CfBckt1cR2VzqNtfeIVmu7+2udUSCPSYmDXV1DZz3BUwyTQRyIZXlS1nMkohO3y1EmpeGB4nxqB0xLbRdBtINPjvQ8smy6tVdI4hNHII3ie9gaTzMsyzSKTMiuCfQvGvgP4r+BEFx8QPhl468DadqltADqmqeH9Stref7TPPBb24vLu1xDLKtpd\/Zvs+97oBihlhYSSdR4a8J6hfWDaYsGmz2jpb3K6NJA82qGCYiVbqYRmI7W8q1ndYFdjKqs0BDbj688TGVPm0afbRtaPV2UbXs2ko32WyZw08PNVUuWSVkrWtfVdG48qvze8m20k0rJnxZH8LYtA8NatePYJbRLrmoa5by2QlhmsXSW0mjkjdnkvYGvoGuFlDxtC4gtr0bo0ymJ8NvGs3hKJtL0O\/wBS0PUdNna50i0to47q1vF8y3itLtI7u3M9tJplpdPJEIZoodO1i5EuwxJEg+2NZ8Epf6Zq507T7vUr+\/tpLG5igja4tXiJKpPDFBbLElvaKzFJ5DFHFBM2zaY8J8Ra18MviHPqK6zceG7rSY7COSeBdd06\/wBJmkv9KHkvPDLHAmsuLW2jS4aztjdzxRSNPLYSW0FzqEfztaqpuVpxbcmlfle60hJt7S1vrd2clre\/s06MoxS5WmknrdWTtdpJJaXt0Ss7tpJL7K8XftFeIfG2naXod94usdO1zQbibxPp850K2VtStEtZXu9P1O5vbjYI7WeW7hubnQ7nSpZpLmS+s1kubx11DxPxr4hvLHRfDq6b4s1Cyk1jxDBr\/ixXuLiObUtWsfDGrXejpotsltLqtu91Ff3Q1AeUtxdSyakj3RjFjM\/kGmfCzxH4llg0qD4a+N9b163VLyLUvDVlqOoXr6lDDG9jqEWjWFzHNpumQpDE+n6o+tG9uSIo1W7SFYB9Iyfs2fGPRdTPiOX4e+LLSwuL6yu5dXsdK1TRrXwwLjTbqa90HWtK8QR2ti01lBG8B1WFzpMySXhvV1TVJ7q3HiVcPFN8ji42lzR5dW2tE3aSsm3OCWy1VoqR6lCbjFX5rydNQcXrFuUU3FX1bSSk01K7a6xR5HrniJ9U8DqG1W1sP+RjvvFnhvRSZNTikvWgstF1LU7m9Rr\/AFG\/g\/4RyOa1vLu4mttJtbjTBDcWqLcO3n3gnwjpaeFdT1TVFj1vVmg1eSytr3fcyXmhaPpkNt4avIlvZ2uYY7iwhv8AyI7WaVVvLdZobkaZcWKWnSfEbw34y0LxtPa6hprQ6MRpU+m+JvCtvDZWeolbaWJ7Ea4YLM3l3Zaq9vpmtxqohtjbl5ori1urC6uPPrnxhF4f8Wa9JdR2tjaaPpGpi1sXljtvJll11pftOHke3M2n3t00X2fUE8iW4trS0eOeKfTo7+qEZ0LJKScpRqKy3jOSbaktWldrTV2Tt7uqrSVZttq8YqCvJr3oJJpL7LTirp6LmaWlmfFEPw1udQ8Vw6BYhXGq317PBdIlzJaPaWBWW+uLt50Cxx2r\/aLO4u2dUjlW8RiUhYj9CvEF\/wCJP7N8OeD9Dil1G9m8J2tw822KfytZtW0zTxKboPBnT7mTVtWee2siyXiTRm2e6SATS\/Gnxl8dQ+CLP+z\/AA3by6aniDUtFmXUoliSNodOsYfFWtQeZHGYxp02sa3oGp2kcM81tia8iuWWeNgfs34aW178VfCPhbxtZaiNL8TW73OgWtg6TwWlnqGq6\/p1nDrF5drH5Agtvs97fabpZCNDNYLIlyWuLWJvQxtac44bE1Fy0ZRmqbly6N2bc9Hy3UGrdOV7XipeZhKcY1K9Gk06qcXJLe2icYN25uVyaaVneXaLa+eBPqT+AbWKTci6Jr05sdceezg+0i4v9PsVvrtoLloL8QSltFa0+03F5csulx6cwtjeXR9D8DeKhpPj3wtZ391bJa38sOmXrXBEkbziNNOWO8s5A1uj2VrZQCe1lWXfdJHBbrM9vKJPMdc1jxJpOu2PgTVhbraeI\/F0NzNItklxBo+o6vrV9q8Oh26xQ7bq60\/TYrO4Rbe8LxjUYkltI3lEDcBrPjS0u9T8GyX0kMUul6xPeXEtobk3kqx3d\/qfkGOZ45ZVS3+xqiOy7biOBHKf6SqcVXCTqU5Rs46Vppw95pTVSdOS0\/mp2lG65ZN2Sasu2nXpwnd2aU6UWn7t5XhGUX8V2lJbXT81v9ifGSLxXd6zf2EeniSy0VvEGv67LJI91dSXd3aXlzaQWg8uUfZAulRxzDeha4gknuFV5le62f2W3ubmXUtN8QztY3OkanprxSXNrNJJeahq0aP9luI9uLdbLTyltIfuWl9AUjjXYNnpHiAIfAcHioWt4iahZ3ES32o3psLaLTprWyguDdASWyFg1nqkbmVALDTpQ8syyX9vE+d+z7JZ+J7i21HRLqOWLUdTivriK0tXZru\/u7Kxgu50XMv2ZZDuvIIWCsJJZVR4PKnnTk+sz+ocjjyptvnjdK7Tb+JfE7vZtOMtdUdUcPCWOhLmveUXyu92m422smlZJPeTTikr2X7A+A\/EOieEAutR2s1\/r\/iB5ItOO54otH0iLYb2CG4eGCGUXHnSNtDbHY4DojrIf1p\/ZO8QWniWEfbbX+z7V1L2lrHcFHWGMqkZYLvDykIHILSv5bKRJIQWX8dfhVoQ8YyWumRXuoTxWU95bWkiJDCp8mCwRpnSNZUkF8ysqR3EkihDtkBkQyV+437Nnw80vQ7Cyu4Z9xube2jk8yJwsUqkfJHJOAAoT7ggGGRRsB2JnwsoyvGZrnGHpYOTjOlP2lWVRpQgqc1du9+ZpWVlzP4UnaMUdnEGNweAy2rLFR5nOKjFRTcm7K177R5V6Xbu9br9AUhsLa1t0tEEYlQB2YBiVQbdytnLsybQvzbeCUyFxUSlIWXZIzHdght4YjHOECkgjAU5APLAnoBA0w8tY4\/322Nd28bEBwpGQhEr7gGyGMRxtO0jIFKW5uHyDIyqdo2xjYpG4BQSmSQAQMs2AuRkBQrf0xl+Fq4fD0qc5qcoxSk9Ypv3U3azb3drqJ\/OmY4ilicROpCnKCvaOnN30eqSukr2bXTWzZ0KSB0GdqkggiQ4YEttOELLIVAAICq2T2LAAOZUG7JZiQw+UlCDggAMykkeoVVJHAx8xHLJM0bHDYwMnPy5AxwPTkHBAHOfm5JrZgu1kyrHBOeQxB6cYIHyjGMHnnkguRXc4vu7LySva2vXfydtV8\/P5fKyXeV9eisujdm9Ovezds8kggABs4UkAcHkHONwHRj6d+KY3UgYAww+U8EnAzng4yuRlh1PIzmpipcckkj7uCDhv4MgdP4mKhhlSW3BRkswQcKSM53LwFPJI2jBYhiQO2QTjn7y9Ouz9Vvp+vX5F7K+rezTf+FaJbpvW7WjaTfaM5OMDrgbTwRnODnA+YDI5Ck7uSuCKQj5hkBiuCOT07jIIHOcFVwSMnJwMS7cEAnByTjK45XJ6A5ABzjOMDHHGE2ZIIJOQpOQCecr1Jbnb+XXOQuC39Wt2t+Fk+\/4DSi2opq7s+qV9LNvXdpvd38iHaSoBGSEPA9Qd3AUBuuOAQCcADoFKmA56E4GSDg56npjPsSQDgqccEkp3t3+5Pqu\/wDVrhytpW5V35+W+8ekldaN9XfX1PndL485IzkhTtJOCu3oQR8wJ4wCGweTV6G+wOCTg5A7BQSRkEgkZ5DN94EnJxxwovNp6qAvA7gjheAxL8Buhyvy7hhdtaVtdY4ZgW3AkqzDIGMDkElssyj7x+Y5Rxgr5PtItWfVrTVOztv5u72b8\/P6D2TXLondvXRK65d7pN9el7d913UN58uWOMrk4yFHQEZPQBSM\/Ko4ZSBkmtKK8OTk5wzBiRjADfe4IAODzkjjvgAjhorwbQd+3A4BZgMZ+bJBOSAxAyeAOCQSK04rvcR83GSB94YJyRgDJGAASMDPB2nur3vZ7Py0SaS7tPZOzvrrqa+xi1ql0jvZp3u9drJPZJPu9HbtUuwNuSQcgklcgkZwACTzkYPU+oGTm7HcELwcAjI4xwD1Gecc9QMkn\/arjor0AA7s4xgq3+1yxBON3HI3EjBOTgKb8N7wCrg4+Y9upCkMOOmCMdc5IwByr3avr3eu+i631en49rE\/V0\/hb7dWujte2lnq36pbHXi7AIALEg8nbjgY5JBxncGwBkYwTuxxLHdc4JHTOMEcHnPQk9S3oCoGc5xycd9jHzZC5yQxGflIIHJIwQRgDqCSc5qcXwGeF3dc\/dyxyASCM4AwOoPH8KjNHN36WWr2vbr5dtdNrXF9Xaasr76eejWzd3Zv5K2rLeuO7RtLGVKhAzDAAxuIJG3vkfKAACdgwoHPxj8adUaz0jUjGWSGSKVXOOXzzuYgMxVd3EYyqMF+UnLn6e17xDFbQu54TaQxO4ABlJ6gDqfkJOCAQVJJy3wh8fvGWmxabfQmbYrwzvGzOPkGxl5256EHJIAPXb6CqNap207rSXu7pevlbd62Y1Q1Sdr3001asvubfneyd9HJv+VT\/godcR3mr61tfKmYquXJ27SqjO4Y5AB6HaSBuJAz+OFnpmo39x\/Zmk2F3qN\/P5pitrKCS4ldIlMk0jLGp2wQRLJNPO+yKCCOSeeSOJHcfq7+3Dqsesa9rSW91GsMc0811eS5S2tLVZShllZGkkIyRHDCoaWaVo7aBHkYKfyd1nxLcrp02iaVusNHmwb9U+W8114pGmhl1m5Vt88ED4NnpisNNsmRZlgm1A3Go3Py2OlzVpt3STTSTs9Pde6bSurqVrPbfU+kw0eSlBJX0SbaslZLSy8+ifT5lVtC8MWE0knifxEdQulgMqaL4MS11bFwJSpsdT8VXFxFoNjuiImjvvDsPjiBSyxTW8UodE9X8BN4Qv8AT7mS18A6Bp+j2txDBeeNfHniDxNff2ZcNG0yWiXOh3nhvRNUv54kLx6PZ+DNZ1WeFXmg0yaFJnXw7QdPtrl59Q1bz4dD08xyalPblFuJzJuFtp1nvBU31+8bRROVkW1jWa8mjkhtpFbqbRtT8davbWOnWm23sYJI9M0m1aO30fQNIiYyTSzXNy8FpY2cJY3Wsa5qlxbiadpL\/Vb0yO0o54qVrRTvo7221TW1pXeu0l302e+0ul73u0uiX4aNa\/jqfTdn8ZfD\/hWNLXRPCXhDxa8cDL9s8R\/Cr4Y2OiJKxKs0FtB4UuvGN8sS4ktdTn8aaLckk\/atGjYbK+4\/2CfjTP8AFL4h+JPAXxE8D6Xr2j63YQW9nrXgb4G+Ar\/VvD1zNdIiXOuTaT4Qudc1O2jPlyWuqX41XWLO4UTLqVu8VpPb\/mJb6v4M8OQR2SWcPj\/xC0saBmOp2HhC1aWEqIYoraTTfEfiS6imlj2zGfw9pcdzbvCtn4n06WO5l+tv2cLH4lf8J\/4d8LaR43n0L4keLHu9P8C+BtF1mHwFo3hq6WW0N7qWpHw1YQW+ma\/qZB0+DRtA01PEMj22pz6zq2hazp1m6cmLgquHrQnOSThJ35+X3opTi4tRklLS90m0k2pL413YapyV6ThGMpc8b8yWl\/d2ula9k78q26WR\/Rl8LPhUnh3R\/HPw91vWdEW1EF1YR6ppnw4srPxXp7agRJYHXbXQ5dfI81ruLy5vG9vYbE+0meyj2IZPgb4D\/BPw78KP2j\/ib8JfF\/iLSNak8c6ZdHQ5orbw5DBemO6ujcw6jruiaENGhukillgi0nUJprySe5WO3s7K4tby\/r4b\/aR+Pv7f\/wCwJ8S9T8EX3xjil89Rqdt4U0jSnb4cGfUdPg1Fhqi6\/aSa34tvJLOZI5pdf1DWLmeN\/tNzr9xeNdQM\/wCB\/wDwW5\/aA8P6lpes\/Hf4c\/B340eHLa5JuoE8EW\/g7xXBFMrJJfaFrek3dxo2n3FtE1ykemxaFZWV6JnjuruANDJafM18rx9eg3hpxmqmHUVatd3SU4NOcYcjvrF01q7q0bqZ61HNMJhsR\/tEZLlntGmopc3LCa\/duTlG2rTk1ond2cH+4P7OPwQ0zwN8RrHUb7RLm48BPqz6LrPgPwJdJP4L8M+IbQjVtE8Z6V4bvtQksPDthrSJJaeLfDWmLq\/w+tNYvNT1HRYPAlh4m8WWlr\/SQ\/wI0P4mfCWx0a\/uri\/hgkGp+H9Zmiu49Z01SZxYArPKL63v9LgubjTJVvBI9zp5udH1W3u4JbmCb8Wv2TPFfw0+Pcnhn9sX9mrXdUn+GviSWPw38d\/g944iSDW\/CVpPcCTTNetkgmukt5\/D+tpDq8WsrqusaLeWAvlW6jufD88MP9F\/wcWGTw5IIkeJVnDfY3SSJbaYr5Ught5drW0FysQn+zxRwQZeVooYop1Qe5luOxFahHB4+nOljsHTpwxFOopwk5RUHGq4zjCSdSLUkm024vRJWXlZhh6MajxWDqQrYTESc6UoSTUVKXvUpcraUqck4u11ba6Z+IWh\/s13PwI8W69Dqdvo+qaVq6nF811c2mo209nGJraQXS6fP\/aMlrbz6ibLXPEVzPqNtFeTeH9F0bRfDUITT\/5sv27f2CviH4g\/aMuvEPghNc1m0trvTdfvCiadfxiLUdV2z3KT311Kkd9Fp80kzaddWOn6VfpZXQ0+5nhtZ4rT+4f9oj4OR+LbifUbLeLx44GNs73CW8xi81BIQJEj82FHaRGlEzRmPcisUht5PzZ\/bbjs\/wBnL9nLx38VLe+I1\/T\/AA95cK3sUl011dtHcRabpkbxfYZrXTri8doL4qRM0F5clZBcXIum+TxtLNMHmGIzClJPmUqMU7u8KzUKcVGPLztSS93lbTv710m\/oMvxGGq4alQnFuTlTcltJTpOLcuZ81rqTTaik42vdX5fzZPxN+Gf7O37Pk1r8UfEQ+F3hnSdP03RbDxj8UbKbWdJPisWUvna3pXhM3d+\/jFIZ83WneHk0jUra8gtBp9jJ9ngl1SH8XvEP\/BRL4QeHPGviO\/8K6B43+Ll1YwDWLfxRa3k2ianqet\/2e9rY+M7fS9V8I+NNAjsdOtLyRPDszeHLPV\/C\/mR3FlqWnanb5u\/xZ8dfE34h\/Hf4ieK\/iH8RvE2peLPEGneJIryw07ULt7\/AE63W31Bbv7FaabcSSWkOlIscdlDpcNuLAWqLHLbzPJvP3F8XPjl4z+N3ww0B\/FVrZ6bN4XvItdtNA8Pwp4X0ezs5oWtbDUo9E0wWNg8uks8lkkq27XFmlwXWSJZZQ30GU5FRpRUcdWlUrVkpVqkFG96kYz5ZTladSNRvVQjGCVoyTUIyPn84z2ssQlhMLT9nzuMlOpJKml7kZQp8jbceWz5qidm5XTk4n014Z\/4KD\/DLxbfR22nfCa91Pxz4lgsvC8yar40k1DUbi51GWWO91jUPGk3gjw\/4kjvNQub1hemfVNKtrqUXD36Xdllbr5D\/aO\/Z4\/aN+K2uQlbY6X4K+33Nloun31xJrVnHcWs+yVbPVtJgvLXVpVlmW2k1KJIBdXAYss2JJ2+rf8AgiV+zxD+0J+2W\/xD8UDT38CfBDQtR8Za3c63FfXWkXOuTwtZaLazm2ni\/eLJKbqSW7uI4oVVZmWVlyv6yf8ABQD48aJ8H\/8AR9P8T6Rpmy9n8Qro1trXhufxBaxvcQagDbhrQxW1vPdX0FlaSWJ027n+wXsl3YXkckc2o82azw+S4jC\/VKMcRiKivGNaXP7NyainSioSlF8r+JpvWydlZenlsqmbUJQxMnh6T1qOk3FShFJcs5TnGMtY7OyaSd1dt\/yJ\/EH9k74p\/DVnj8QaaL2\/U+S0GlZuYLGdHRZYtUkYR+TNCskavBDHMIWlKXc9ubeeIz+AfgEmpXiT+LtRGnaPEkNzd6rewPZ26QPs2lBKkbxJdbwyyuPtK2uyUQi9lt9Pk\/RjxJ+0bH8Qrjxfr+ueToPhtrMaZHrWrT3t7v3kPfXmm6RBBd3E2oanNsRIGvZooABeOJFBt1+YvGXxU8G6FpEepJ4Ns\/EOof2XFp3hvS9R\/tG10zQ4mmkaLVLPS4L2G3l1B7Nmne+u2uBHPdG7g0Z7c4m1o5rmGJj7CVGVOomlKpShGSV1F2jzSjHmjfVSknFNOaSspVVyrA4b9\/7SM6aXNGnVnZySlZSfLeTUuV2tFuSVovVM7aP4EfBwx2GjTa1ZwXutWBnW7M9ppdtpemTzyRzzRWdzb2Gow20kcbWdrdQ2tk+rSfaVeXU5nnn0\/ofEX7OPwz8I6U0HgfSbbX57bTv7Svr\/AMcarfaPZywAlQ1naaTFZ+IJLKR5Av8Aa+p6vpFkBEsSSbHbb8K+G9e+NHxF8UOugNr2oy3NwzwaZosl6NPt9rAIsNlax+S4hUZkdARCih5HgMe1foi88BfGfWJobbxt4p1u2j0cbodC0HXZtXGmbEEZluLnT4rzwzpTSMGhmuJtZuNUSQMLvTZiBnoWGxMJ04zxd1LlbhUlzSm1Zu0VZy3cny\/ClbmsrGca+HqwnKlgldNxjNQjFRWiV5yjpdNXTtdtu3OzynXfBOr+Wxht\/CunWtvHNLa20XhnRp7h0DY3x28n9v6\/BBMBH9nu9Qso1vf3ay6hFIsly\/u\/7MfhjxHceIInT+1\/s0DRM91a3UelWwdHBKzRaerKFA34hJXZjDqCRHWh8OPhN478a63b6Hp0moyaRFcKbpv7YjlgdwQha9ur1XvNXuto2B7JU09GV0itbdQsa\/pxo\/woj+GXhw2mnC3tteuosmXUpo2tY5JVOXSC1sQI2JHByBkkHzGwW7q0oVYKipuckoqUlLS11dfE7LTaWum6ujjp0GpOvKPKk+W0lztuysuZpWvqo25ddNEj1Dwlrmpaf9ntNN1q\/luoHt2NvLdfZYrhoJRK0Mt3PJCCLnb5Qk2CQyN9x2HP9Tcxi+Hv7L3wW8PS3Q0u8vvBunarfwmVRcQxarm+Jl2kKZQZlVioYCRm2lowDX8ov7N\/wI+JfxI+M\/hDSNf0jWdZ0dtb026kvfB+g6jq39nWP25Y71taksYGsb7Q7iMpHcTEwaho7SML2JInglT+rj9sq2sPhn4b8F3V+kx0Wy8EaToVlfCRJdlzp9nHBC1zHcOVjEYMckcz4IklkLNhnr5jieahl0o0mpR9xSau+WM01C\/LpJ7pJO9pbe9c+s4SwyrZ1gqcoyUp1JSp09Oac6ULqEVLupJqy05W0tGcn8B\/jnrfh7xhcabpkH2LR45UW4F9fLHHcL1eZ3nlaR5nXOFSNo13AcbWx+sEWkeF\/ihoFv4l0EWseupbMXkiYMRIOXUtGGWRMl13bnQGTeVLKRX8ll38ctB8PeLbHxJcXMut6c15Dahpb9re3tppv3cdvNEjRsssskoWMRyiNpGWOIKXUV+\/H7JH7RVlquhaFbaXZK\/nrHFLaR3duDZqyrhJIpJfPUlDwcsfmwAQGkr4vIa3PTng8ZadOWsFJK8G5LSCslBwe21r6b2P0PjvIK+Bjhc3wcHSquEFWnH3ITaiuenWcqsnP3bK84QvdJc1rH0a+ujTJvsV9NPHe28ps2gaM+eZgAGdl+6AwTLlFUEbpFGwrW5a+IRa7v3x3wRly8Xz+XGyuUU4CsSFCqgAyS3r17Xx\/wCCNO8ZoNV0l47HUJoFMgRESTzQWZMMm0sCcZ2vhSQVV2ya+eHF\/omtyafcRyvAQkMzMjlHuAN4YH5cSENlwBkld2EUKo5c0hisvqtpt01K1OpF3unb4o3eqst5J9rvlPm8tlhsxpJJKNVQcq1KTXMrOPNyOy6OXKtU29bHvVj4vh1m0EyP80MYdt4Us0eZFV9oc7cbW3FgVaNsEH5Qvlnih9M1m8hmilktrqO7Z7eWPbHMCI2trsRPkFkUopfcSqGMYAYBX81tdWutC1LX2jLiO5t5PssfmSMkD3EaJFsVVCjbcRlkVSNm4kAAlqwYPEck2oeHHvMR3h1a\/srmKTMaqFtGZSqEBRHLLHckCRiJJGVlJkIJ4KWdVMTGnTq3daLtNNJJuMoxi30TcXotrpNHfVyOlhalSrRb9lOCcEmudKVNz5bK9+Vqzb0vfR+7f1yx1+Sxv4ku5Glj3iK7WPlFMG+fzYlxv2sZJCAC5V7ZUOSYwO1uEuInXVbWTz4rVBKFVzi4hmW4JdQu5GUSnDBiyM0pYjKKW8IOr2dnr4trsxfZNYtYp9OvJAz2ssk0Led91swFp4pI3Vxjy5M8Eg1614PvZo9HhspJPMeVLyykVSxNpMiJJb5DCM4njlMobAVwivHhjgezh6iak57Xc423i1ytNJvW7kpKLumrrozx8RSlBxdNWdoxlsoyi9ZNJK0eVQ5ZO1+ayfvWO8udWk1vSSkQjUMA8ih\/3v8Ao0KybAuWEgEu4bZQN+xlIdSCd\/RtUjiNjbyhhcXEKGRolIhBnjK7XxklIp1bDbmy\/wAoZiDXkvjfVZPCng7xJr8O9RZ6a3mtGGZ4rm3gimSQqPnVnjkchh9996kMww3hGjfGs6T4n8MeGtT1BJ9RuLzR9IvblCgghfXfM1S3JnYhnn8p18g7WaSTfsVTkHnrZjDD1IubkpNKXO7K6jKKSSbum3zO9tNW2rWNsPlVXF0JSoxTpxlPlgr30pxlKVkvsJ0072bvFq\/Mkfbl1C0jC7u2VJLW4jiRVGF8hb1fPkdS37xWEEBXcVdWUlWQlhXJXlhaya9BeGERRXrQyTtvKrBOAivE0jh\/3AjdBC0akvHvUqoC5jTxGt5b2c8dxHKFS4tZHVgWNz9qKq0nmEFGLKGHytuYqCMVpPCJNDS8hl\/0lnmkijKhmdIWkXOx0wDccq6bSPLACjbk10urGvG8FzKCjNt2bco8qv71m2+ZrpdOyutTgjSqUJWm3HncqNk3aKntotUlyKabvZt7XZR1lJ4RFe71jtyJ9PKIpKw3EdyXEh3FiJFMRKuAyltpDuzDzMXXbObyFG4CG6Q\/Z1RA0hZYkllMoY7Q0j26iEyKrLvVYwxL7WaldX6DUNPv5Sul31kwsLiUgPDOlsiOkmVAeaMhwWGQUMI2sYXC3re8Oo6Vp0C\/NNbWdoEDP5oJi8rCu4JIC3CS7X2Nu8s7sIzis5ThKU\/jUpRWjdnzRaXMtPgkrNNJLyurLdU6kI0naEoRk\/eja3JNKUWm07zU7xndaNO6XMm\/OfCl\/daaJFukntvLZLaKOaaKOOIRx7MC3hRrYmUtJ5jb8s8dyUhlYozexx68lzBb2pNu1vDCpKSkMoYySq0jQhSq5nSRYwx3MiFyrHDDzbVtNhkuI7pEBkjuJ2V41LZf7HOArA4j3EnaUG50YogIDHzPK9N8T\/Y4dV0pIpptamllu7yZpEihW3WJVWBbuVoykckaWkXnCOAeVemQTK7Slqo5lWwPJRcnKEpON27uV0tHZW1dlbZ2TUrJpOrllPGxlWhFRnFQbSUeWN2ouVm7pJauWrbaVrvmPTfHWj+D\/ibpmoeFvEWk6X4l026PkPBqVnb3tqAi3YdY2mL29mkcqSCVjGHnVTbCV7e5maL5a1z9l\/4N+FL+1urD4feGWk1Oe91nUdQudMilkkjaXzbryg8ckAkljlWK0doPs9nDIkaSwvfK0vr7+J7mbU20vSJg9tplhC2p3toYk07T7+ckXLCXznVr4QK4jiniuJpbtYyvmnTZoIPRL+40zUYbG6Lfari9glit4rdpYkmW0QT3k9zIqTS2qJJmGOOBo55FJRZort4dm0sbWqwqRhiKlNSSajGcoxXvptRSk3OzfImrqV0\/iVh08vp4epRlUoqSakmmlKVnG8XO6ioXXv62sotv3LtfNNh8PPC\/huGdvCngfw\/ok0l3ItreQeGVlvrY3MySTX0TpZzTG5iCTbn324NzJmC9Ecl7Nbcve6V4Y1K51VJvDOl3FxLBJZ3Op6lpFhPHpNhE63E+mpNLaTzm7YG3WWz0+CeW3l8h7r+yr53nH0zrck8ImtYbrTLaVYfKg0uzEt3NaqYUZI7c2z29vNqMkMOLmRr65mswQIUtQ8M9z4j4qguhZzwLpFrq+oahJFHZ6ZfmC603SYhFEl3c6hCfOW5vSBFdpAstxK0UUEU1xEk4gHA54jmk\/rFd2u205N7WlpGUmnLazSajytR5knH16NPDNKP1aiuZx5W1FW5nFczk1FSUYpu9+S6leUotqfCW3iC30547fQfDujaRpayNc3uqXMKWt5KkMS3c5u7C2jtv38q+fJeRoli9o8DGPzRLdW69Xo3i+6jUPc2ltqMtw1tcfZ5bO0iSPT5f38tx5WpDTLWNI4PtM883mRxNJPBI1rLGZ5l8+vf+EgtLyWa+ttOtYFjkhbVpxFdXrQB1uJ7gIrR2Fjal7FPsmiWkYBvnsJtSvbCz07Tr+XCsJbOPUb\/ULjQoLi6vHkZtRuZ7Uw2NhutpyiRM8unacl9cIRDbBZL\/AFHUJJ7jVJ\/JtJ7KbJ1a8Xze0qJ86s25JK6WqUYyV7p2lNvq+Ztnb9Uws4OCo0klFXUWpufwrlbk4rVNXUJR5eXl9nFXv0nxM\/Zs+CH7SOi6vo2uWVh4X1O\/hludMu9LbRdasrWR18iTUj4evxqWk6HJLLGq313pVhazzKVQXkUhWeT+cj9uX\/gjz8Vfhytz4v8AB+l6n4+0W5uS9pqnhPTtZ8SX0llKYru7t7zTfD3hTUrq1ANsLqD7Vfvp9pAspuZoLYyTj+l7w7ZSahDCkOk61caZftPqLSpPr0g1W6gvN8Woz3N\/E1pqZthG8trf6s+n6ZYPBb2OmxWy3d1ap7t8TvFGk\/CD9njxt8S\/idaX0Hg7w7pN5qf\/AAj94+h6nrWqX9rDHNGLK+kg1bSdP04zLEVuPsNpbaVGXuby5Btht+myXMcwlWp4dU54qMrWtFuXvau82lTSUeW7lJO6vGLkrz+TzjAYTDRlNSjSSk4+yqSitbqN4pSnVcuZX\/lTj70o81l\/l\/8Ax58O+MtbvPCnhmy0vUJ9WMmrTw6VaxyXeoxXFzrt94UZZoLGW8uY7iKy8IaY0kOI5YbmeWGeFJFKN7v8Bfi5H8Hbyy8KeNS2uQtNZeINR1OCee30b7daLZR6BodhcwTRz69JZ35lF3qthdWWmxXmnTrZSeILBLfUD98eIv28L39rz9p+\/wBB8U+B\/CnhHw\/cAaR4C8J+G7J5rbTLEte3ms3uv6nO0Vq19b6bbTW+uahHpVvFcpqd\/wD2Nc2+iR6Xplr8uftp\/De++G2seCPEnhjR9CvrnUYIljutS099amtJINRv54LFtN1O2vfD+mW9063k1tbvbXupebHfyLqlmJvsNt9fVqU61X+y61D2M6dFVIJyjLWUea0JJcsopRak0mlrf3lZfKRoTp0ZZjTre05q3JOK0atJaTScndu7itG0k7KMtafxktNUWa+tIo9JPiqz1s+J9Bhh0rQJrm7e0057e9u5bq406S6WO4j8Oiz0x3vpjcWtjKZppXkKy+TfDzwt468S\/EHwvp8PhjSpINUUamur6r4K0p9JtIrK1ub3UvLu7nSfsT\/a7+C+0\/7bc3h8jTxDcyLGDbTWvW\/EmX4oePdV8HeK9NvvE97bap4Z0tNa0HT9X1ZdCsPEbRajo7SJALkpbXDXVpc67qIhtlsbU35urho2luUXpPhprNr4A8JXPxU8Tuuva7pVjpdtoVhaRNGLVPEml6ff\/wBl6tfs\/nwm1j1CJ7xIQJGFpdRtEHnmaoSqwwUVFe1qV6TjCSvFwnOCvTaS5bU5SnzXd03Jq6vZ\/u54lxm3ShTqRlPWLXJGSfPd6pyVlqm9LaO1sr43fET4l+J\/G1\/8IbbVPM8M2FymhWtnbCBr2LSZZ5byeyddOl+wWl\/e6fLuuxJLas9iixZICsPqr9nj4d6voPjm48HaKk+oi1RWtYtOkuzJb3IUw3NnqCIDBFsCNFcXu3YLB1ViFSWZvU\/2EP2cfDUvwj8Z\/tXfEpbzWNUvdQ8T3NlqGpmB7JpLmxvYoha2l3HLJMyYMyXiqstrFCkMMcz2u1Pp\/wCFXgDV7nw1qvxF8OaZGkfiO\/gXULiPTZNWubtrm\/VFtdO0liguorYpbLanU7qDT1QB7nS5ZA12fBxGMpVlVwmHjywoVPYKVrRrYiP8Zxb0aUYcr6Wu1q4pe3hsPOi6eKqzvOqlUUeb4KK5PZRetrtzjJ2btspO11+oP7Kfw5bSdAW+RLTV1a6afz5ZvK0GKfEiTJZ3sjQvqzW2IredLdbfT2CRuj3wMyn9fPCFneTHT5YZ7OOR7OBNqjLxbUAMUKR20UaoxO7MaKhB3KvFfkv+x34k1HWIw0nhHXNU1LTJIbCXWPFM10YUihRbT\/RNMhhgsraEIzMkEU88SXKzMo2KCP148Mrdh4LiW5tbRViQzLElrBM8mTsVI4E3okQJdWklDrn5SxkG36Dw2i3mmPjdqdOjUU4pS5LqrC6dScE+Zyk+VR5o2vaSSdvlePZP6pS5ldSqU0nePM7xTdoQlaMUraPkatrG6cj222t\/9EVSE8wIVI2ujsRlTlSNvzAdN+MY2gAcZ9xb3EbHdE4xhssjAdP93PGD1wM4553Vz914mC\/L9ochARl5Gw4X5RwGyBk9WyVPAOBiudufFKA\/LOy42gsXYYPU\/cZcg5KhgBuySrYxj9xhCStZp3V7O8uztey7b2u99z8gqKErvpHrZJO1rW0sr2tv11vodo7FPlIIBLY+8B1zjJx3xnJGAC2OCKak20jBAPzAEdOgPBwo3YGTgcfxEHGfN38YyRlgt02AMMPNYArk\/e3YABJBIJ6AEhQWBbH4vjYqJBA\/U84RsZB2\/u9u3rwHUjHIDDAGvK7P3el+rvp1ul9\/5GXur7Vn5pJJW291NK+6TSelvd1T9otL\/I2sRnEZzg4Az7noTzyM8YbHNaqvE4JyNxK8AE5yeccnJwc8qeTkgMQa8Qi8V2JwfNaNs5G4mWPGDwW\/duBjIOYyemcGuisvE0bjAkSTOR8kik5GAQVJVgedoG1eVJ4GDWbp63W3Z30va3fff+maKzaUWpRVnZa3Wlk7WaT6bbK+iPTSYx9Om04xjaAMY9snOBhsYGeiGSPDDA5YE47Hj+AEqO20A4x8uSMk8E\/iSFB87bDlsbmYZ4GeSRk8qCQMjcFbsKrP4pgH\/LVT93kNnHI5YY2g8Lk8+pyQopKD6vz9NtL99+\/4ofLrpdarSWtrpX7Wkra2s7W62PQy6DjILFenBPz4B4GckNkZOAMYIHO0rzdvFcK4zKhypx8xHU4yMuADkE8E8kHlGJJS5H18vPqvy3+QJtW5XHZaNTVtY2+F2fn1et227nzNHfnvycE5DAKFyPlUEDCng9TkHORlBWlDe8Yzld2NxI5JGE5+6M4GSTtJHy8GvIY\/EkCk\/vBzkjGF5AzyOSzEgEMAwaPk7huFXIvFNuFBMyqSo3coTzuUlQQDggHJJUYywwS1eE6lPXV3SWtna7S0Vltp2u3d6o+xjhpO17Kzvorvpda6XspNWdkkt3yns0V4AAckE43YI5B+8doOfQNncfuncgBA04Lxs5LHH3m+cABipGcnAJHXGc5GAQuQvicXi+BCcTgqVO7O0BsbhuzwCOmMlhuwqkgAVdTxrbhQFkQ5DAk7eeOeFABwBjnkg4yflNZyqQ5m4t20tvrolrdLXdN3+fV39WlbVa\/j01TV7erbendHtyXgbO5mG1Vzl\/8Af6DjJHYkEMwOV5INtdQUbeSRyA3GTkkrkqcAEDGTwGGeckHwxfHMAIPm4yQAN+wKABgt865bJbOAcj5mK8Blbx1CwILjAXs67gCwHdsk7lAJYEA5HZsR7VJ+lt2tEn0bb6\/L5DWGnZbJ6aWdrXW71t1S06Luz3z+0Af4t2A3zK4IHl7styRgAnoG7Ag5GaT7flMRycnHAwVG5WBwVYDAbKAjGCvHIxXgi+NlztDkgEcllZjxghmPOOflyc5y2S2QZ4\/GsRI\/e4YHGVIJIPGeCSSSDlSSQQQQxAYQ60e63Wt9bya3100vte9r62H7CfRW7Jr0t066PXR21a2Or8Z30gs7hQx+WGRgdyrkgFTkDqRjAIBPXAOQD+LX7X\/xG1XRrDULWCRkkk86MO7bURCrmR5G6JDHCDJKxUrGFIbK7iP1B8beNYINPuJ5Z08sxEFvlUn+IEt1CDByQAFBK8nAP8+H7f3xl0i1tNQsodQgaV45jNtcBkibJEAbYobzOJJAzcIsYIy8mcq1dRhLlkk0l89rrWzsrq7a0ur72HHDRTTly3TVtG09YdE7ppavfS6W6Pwv\/aS+I0nifxFcabaSOdPtbhmkkf5ZL66AKvdzKCPkALLaQMCtnCxXJmluJJflSeF7oR28UbPPM6xxrj77uVUAkjGMseG29y3Qg7XjLxBFq2uXlzEQPMuWYfMWzuZtuMYByOwXJOfbPPajfNp0TRREfb3iO543G6yVwd8ZJGBdSRnEhVv3KOyFvOLhPAm3OSk2273b77a9Plpt6How0j5RS1sra620vrfffv3NGfSNQ1GWy8NafPAlnaNPcXV5LI\/2ISpGX1TW7lo1lYWljbQsqyRpJILO2AiiknnKSOuNReG0k0Tw81xb+H0lR53YeTfeI7mDDR6nrRjZgQjgy6Vo4eWx0ONysQudQm1DU9QyrDVb2LS2hkcebqu4SgBVY6ZbXEZVWKngXN\/bFnU4JFlETuV8n074e6NHr19FFPaxmzgV7y7V2VDJZWcb3E8RbBcCdU+zLsz+9nRcgEEaW0UXs9Xt3VvktL36t6NbkfeldNppaa2ta23TS3XvtuP0wXHhq0tpbSAr4x1O2t57eXEhuvDmm3UYlgntgdnla9qkDRz290d50nS5ori32ajfRzaV7P4I+It98Avit4D8WRxmW\/0S503+0JryzsZH03ToxC9rY2sGoxy2QlnuX\/tbVJzLDcyJIml295pG29up+h8FeBdLsdWuPF3i27hvG+0vfSRyvtguLhpBKtquCAY13J5gQBYrZQi4LRI3gHx88b6br3iS6is4t6LdTh5YxEm92lfe2AOpOTycBSvQgVy1p3nGnytXupJ3TUHFJtS0Sk02pPS+10mkdkFyRc3JKUXFpaP3oyTSa62SvZ3Wq0vv\/Rb\/AMFGfhB4T\/bW+CPhD9qH4ReILHxRqdrpGkab4+srKCNLnR9ci06azsb7UbZTJBp+i6zb28Fp\/aMl41rYzW9pLjyLi5Zf5cfG+np4Is38Oatp17oGrWKzrd6dq0ctjcKzyF4nijnVC0LgkxvH5kbqyOjGMivpD9nD9pD4yfArVprr4LeONZ0u41CL7DrHg24sYtV8J+JbW5WWCe31zRGuPsWoQskz83EAlWXy5ftKC3hx9kzfH\/8AZp+L+uWmi\/FrwD4m+D3iDzPJ1m+8Mad4Z8V+E47h33XF3pPhLW7O9vvDsKqjJBpmj6hrU809w1xM1vtEbee6rwTUZqc6MU5RdK85pXu1KDd5X5m3JSbXNpeNlFzwscbNVISVGc5JSVTWnKTStyzTtF2i\/dko6JWbe\/uf\/BCr9to\/BPxXp3gHWL6S78OeOfE994Lu9IkiuprW90\/xPDbjT2mVYzaQww+Io47eG\/vntrS0\/tO9D3UMMty5\/wBAf9nfV0t9Mk0S1cMlnIllFbb9wjs4UDWaxXDzyLLGLOS1e3KsYhGggsvLS38qL+KzV\/gt+yn8F\/2KPiX8YPgBq+hfEDxmLiKDxBqPjXwtr9p4w0XS4bSa60yDwXosei2Vraa5qmpGFFbUpbXSV03+07oWutReVaS\/0Kf8EUv2rLv9qP4D+EvGGraBNpWqzXur6WLOWcvLZJ4Zht7CNLfJuZtStpAzKkjSIUVUiuEuLkSzNx188lnGe4PGUaPs6FHCYLJ607JOrUo4aMKMpxV5+19jCEZKVox9nBNR+I9WOT08Dk1ag6nPW9piMfCDjypU6lVOpKF+VcntZtrTmblJpyd0ftr4v0V5Y2mBTYU+cYYMqlWUtlGLY3bDtWNDJGHZGMsaJX8wn\/BfrxZ410z9n688H6Nbv\/YGro9lrmtxzI9tpd0xC6V9piDmS4tbmW3NvHeRRG1trlrRTPb3Mgif+rXU4ra6tpo5lixIrR4jkCSnzIyvluyMzRSKzFhuwmShU4Aev5c\/+C3fwj+KniDwV4k8Pab4bh8R+BPEehyGzN5Z6hdnRvEOnrNd6bJLHp1\/a3BiHiE6asDW1jd3LSz28VtExSeN\/RzfB1a0MM8PCc+WvRnUjBRfuRmm5SblFR5by967Sla8WrnJk1WnGvNVZQXLSqyp8\/Mrz9m0knFOTd2mlytNp62uj+HLWf2O\/jZ4asz8TPBehve+FtRaCX7Z5Wopb3KtBLPdG\/ik0qS3R7l4ppobeWby4IUFpKt00ZeOj4c+GP7R\/wASNc0bwr4P+HWqX2s3UQsoo7Gf+2I7rTrkF5li07TWnubqCa2jlzG4ji2RsWkgWB3j\/sG\/4JG2nxQ0z4TS\/D7xr8JrbxV4Zt7MWX9k2uo23ijQrS0eAiVLW0vLDUtdee9uFkuk0X7DHpItFkuBqU22FU+0vir8HvjZa2V5YfBf4Ufs\/wDg2xsWtjYa0\/gGw1m+0i6mvJlS8ttYsvi34Ai0ttK0+7vbiezm0Wf7DEWt3uIo52tzk81rrmovLJurC9OnKUnGm4LWEnJpp826XNKN3y8y3KxWW4L2\/tHXilOMar5Zxi05pSlHlk9HG7umovTRK6PwR+DfhHwb\/wAE3\/gHrWg6hfXs3xz8c2Uuox+E\/EWlzaf4Xu9Yv3086Og8R3ek32k6hq\/hzUpDczPolzPd2FjFe29tPbR6nJNJ+E3x8+KXiH4m\/EPXpPFkukX8T6raahd\/YIdNn1LxdrPlpH9il+w3uv3dnbreSXU5s9e1D\/hIZfOkn1e5sriUWCfs9+1h+z78YvH3xD8RP41+J1v8XPFcC3KWupaF4Z1uD4dw20WNP1e01HxDrOpRaX4f0zT7lLTTpbzwVoetQz6g8ek2HiG68TX8ial8KeBf2W7v\/hM9Ll+GfwS0v4na7FrzR6j4l1W18f3fw80W7a58ie60e203UPDepeIPD6jy7m1HinxFoniSG6c22o+GrpneZ\/KqRlTlUxmOlRVWd37s1U9nKKbSjJStGMUrJqMne8lJNnoYdKfsqGFjPl91OPLyqUbxi\/jUU027q8oRktJKV5Hkmo2F9ovw002XUPD9jHqWp\/YYPDfhqxgMystjL50umJA9pPGlrYSyxSXM8xuEuLtUhfTtXkhmlh4fwh+yH488fa7Y+KvHdsPCvhfUrxbu9n1q8WHVtYEbO5gjt7me3O1S3k2ehR6jbOkhWG109Y3tnP8ASt8Nv+Cf9vi21\/4j3Omw6qVtZv8AhHb3SRqHlQPHCVsoNIu4pdcso7SFluLay8Sa9aWYidDatzGx+lYvgp8G\/Bt2moR+FbbV9ZtbWKCy1HWTdzCJoA37+PTbOeOS2UR4QWR17ULNVVfkcoK8nA4qpCnOUbU\/aTk5TakmuaS92MZScouyV5Su22mm1yte1jaOGqVIRk\/bezjFRpwcPZ3io3lKVoRlrf3YNqyd1HaX5CfDz9mOy0Dw5HPp3g22WHEUWmW+o2a+HoLyAII0uL3w6JtU1xrhwSZL+4uLm5kJVIre0XLnE8R\/so\/FDxfqkNzqUVwdHtWjaLSdC8N30OmpHBJuBNzdqXMkahmNwIllh8tpFKZcj9k9cHidrGWXTLuOw05ETZ\/YFrBodjGCGCpcx6Lb2d4SArY+3FpWxlJXcGSvkL4k\/ETTfD8NyfEviOe9tYElV2a4vrlkZFDZL3Mk20KAQ2YyQVG5DlmXvwvtq1S8KTlzJWqTvD3Wle1pfvNG5Xk3J3cpbNnFWdJU3zuMIwfwc3NK90227JLRJciaSfqePaJ8K7H4b6D5lx4Pv7q6SImW9vLpzcosf3pPPv7Wa5wrBtzmVgBvyEwwr5Y8X63o3ivxF\/wjmns1tfSy\/Jp7\/EHSVkk\/jlWKxW6Es2FAYpFE0jMwjEbStHG3MfFb4iweKL2KDw9q+qXLXMgFm1tfPDb3ofcVhilSJYp5WULi0Nw9zKrHFu5wwn+Cn7PusT+KftusvqdpFeXFrfWLmPUWNldPMJIbjTdTmM9xZsGdA1rMkKQzEpHIySHd7E3SwNLlm6cW4vmna1m1Hm2XL5r3umurOCnCtjqijRXNGMoqOzTTa5Xdq6TSUWr7NXi7NL90f+CX3w0j0j4hW9rqo13R\/F2nSWF\/otzOL94NW0aRt13FEs9uunztBLGwlvFSWGbyxFFJHI13HX6g\/wDBT\/QLv4k\/D\/8A4Q7w3tOpwabZ3I3hoEuo5E8h4LS5bbGZ\/tWDEC8kqTpFGyAyPnB\/YvuJvGWkeHtO8W6NYJ4p8NQ2lpa69mO31W7jVVgixJYLbSM8qhUkjltIQ0QEXliBE3foT8d7XwV4X8BrY+KLnRRr81jcTadFqf2Oa7urkpIY4rW3uZ4prglwFUxCRlkVSVUoCPk8RTWLw+LUqiWHlUjUlUkoxbcJK0I22cmm09tGtLq\/02W495ZnOXYulQk8Rh5fu6MXzpTerm2k5ShGNrq11zO7ex\/I3ffBzxP4Jm8GxXkFxdW+v2ejapLbzsJWgadTbK7SzNtlmuNU0nU2hiZ1aGMQmUKJNlfr3+zH4L0G302y1\/X\/AAtcQajZzJBYa1Y295LdXMQ2pGiLpxMiTOuA6lAqeWxlI5jT8yf2iv2jbGHxp\/Yniq3W7s9L8ZLpGk3ukvbnTrS3itYzcae8tpM8XmQzvJNEgxFCwuYdwC+W36ufseftM\/DTUNP0\/QrbU7XTrXTQgmbVdZtdIjknMhGENxKrSpzxDECSxwhfeYx4eXxw8MTytqEG2oc3K7NqLTba5buza2T1u3qj9Y4oxObVslw1edGpNzU51p0JygnSk+Ze8nreMoQalT5ZO2jspH62fDLW4xZ2UUUd\/wCXGdo\/tBJY5LZsgbX8\/wAyQOc4IkkBwFIGd1eqa3oWkeIYbrzIFtborG63MRVRIxIJIXJwVO0naMAMTgqSB82aT8b\/AIeXMbLpms6bqokkKrNYXttPZG537PJZo7hH87fgBZELt8xYN0roNU+IerXVrFeada20NrbxZd4Lu1nIgkjP7xkWXMewn5lcnIJIVj972MZOiqMozXtUlrFQurO19rpWbf2t7Pqz8bp4fEvERnDmw85y5lKclG7upJJSs5Nu0XHl+K1ls1geOvhxqsFnK09vLLHCUuDJbZEd9Zwym4UCSMg\/aEKCNvmYhGZVfKua+LG8S60\/iOTTprYS3i6jf38BmVVligimJsbIuredJJ9nRmb5dz+YCTtLGvuH4V\/Ge71LW\/EOia\/DFe6HplvZKtxcPFItxd3s25obJty5RUI2AllVR85LHKaXjv4E6bqPiD\/hOvA2nwajbzF21Fbd1Fzb3UskRleNSTmJoVYTM5JK7UQYxt+Er5XGvfE4BzvGfLVw8l+8UU2pTgl8cYpNX6JXsj7WhmlTBueCzSFO06cKmHxMJNUHKVOnUjCTb\/dSmpQbi5b8sbtJJfNsSR6va2FrLLJapNKbVI5IoxJZXsKFngEoLFUlhRVR3YiUsAPmO2vUtLvrC2bZb3JN3P8AeiZsSxypDsjePBdgIgiM+SAEUMeBtHO+PPCOvaRcpFaaPceXcQSXLooYJI4lMVvcR8ZWeIyxtISdqRrtKsJAp57SIrq18V6NDfxt\/aGpK9tmJpP9M3w3UU9xt2mNVj2m4mf5GHlK5AAGd41KtKHsnBqSunOUXG1lHVX1cm7Pls93bong6UKydSE04NOpyRnGV\/tPmsnZJR97VfCnf4rfRcQttY8LvbX6i4XW7RNP1i03giRJY5LSZlD7trxO6rG5w0QO7+HFfK3xQ+AlzN4h8JXWjRyWtvp0\/h+2ubmPy99wNOSRrC5Lqgxd25t1VZnEilpShIUsD6pYeKLvTL3VI7yQWml+HtItrme82mS2lN1bJ58RkZVV54Lg5YBtyPsyA8lewWWpWniTwdpjZaSSR9JkjufvfaLW5YlSu1sBzEUfDbdpZGIxgri3QxcpwqRfPThNxTS\/eKEo86dk7qUlZvS\/K0lZu9U6mLy2UalFr2decE9ZOMHVhFwaSdnKEJLR8z5XFNfu0eaeFUu9J1GWC6l8y2gvfLBnljCExJHejehYsEH\/AB6ZGCGJC5hXLejXHiG4WTwvb3Xkxy39xdJfFJVMccNxZNJFgjbuQXBA3KoO0mPOSQnl8TPdeNfEeheYgtIIE1GzYvzGbV4rZkc5IjSbyyyghmkAYtuxium1G3Rp9Nu7hPNtxcPFGrvtQiSMMk0MgIIMJ3KQQqlXVMAgAaLEWjONP3eSSU03paFRc0WknJp2Ub9FJq19DOdBSnCVXVypuSsk3+8oPka1jHmvK7TSXNCO0U7+l3zxG3TTrqB\/JvpW8osSy\/aJVaWSJmALDz2iKxkFQGXYFI2A8lojzRa9q1j5HkRRGI2ojWSKNrRp1inmc7R+9tlheMxpnkSNtKM1dXNqVrc2Vl5gZiYo7izYY4uPLYoWbPyvAUiBOMb3OMvkNyPiC9k0m90rUUZrh40vBdOg3xsl4YVvF2uTgoXMluCOIo2kBB+90zqwtzqd1Dlm7ct1Dblfl71420bW6vc4KNObbpuDi6qlFJt8rqRs+ZJ3SvyRpPmsle7Umml0k0CMk6zKsbKpYLJtDv8AvVVXY\/K8mXVi5YkSZYkNzn5G+Lmh+IdDs7nUfD92mm\/2xfabbXV5dQtMlkJ90t6Ygrhft1zvWGIyE3DzSPdLG0ULRL9qWbW+qW8d7GBMZCqykR8mbcksIhZg+xYvMBcqBg7jwFAPGeJ9ATWPtel3sbMsjZURxo1sLpYjOGO\/KSJB+6WSOUBZFzE+6OSZKK1COJoO7T6UqiumpNPllzRaeuqa66tbIvCYp4PFKTinFNOtSnrFxhKDmlFq2jSl711bl91ptHw1feMLDQ\/DX9jaGNTuoPNk+3LbzEXEs6yJdaheQTxxyXEitcwpbCdbNJJZDLJamaKxv4k2f+E41rTdPg0vQ0SHxDf2lvafbJ7lLsaNpcUwfVP7Mjgmka81JShDyw7I3u1lRtQW50+1E\/WeMPhZa6JpGs6jcSzTy29m4s7a3t5DlIIwRItpFLZeZAdQfzbO2mu4d1zaCQ3Obu6VPkfwVNe654h1e71OZNHlv08i3gntDNb6BoFgzXMQvbyLyVinkEsd7GtsqTS3cemTNDcW1jZw6b5MoYmlUpRb96ovYxlH3FSjzLmbcZO2ytyyb5rNbXPq8L9TxVGrUspQpSdaqqsZVPayk48iauudaTdVOHK1Bp2jLll9Mr40tppNVsLe9uTY6Hdx2F\/eRyR2sdzcw2zTXdnp8yJp8v8AZ+k2cUdnFOL6zjF9O9zcSG48u7Fy+8dxan4ea7tH1K60uIQR3OrafA1ws8iEKNK0+4giu5715J2SS4h0mW8gUiRdRghM0eoajk6R8ObhtHtI7Fbiws5bWGaE3tn9rN9p9xK0hv7OxuZJrzUL\/WrkxHUbpNN01dZTUZrCJ9RsYba3i7Tw98B\/iT4i1LRY5tNujDpNul1NrfiNru+1HWb+WS5DxoY7v7Lbw2dje3MtvFBbzW6omnWVvqdmkYWD2qOHxLgnGE6kpJLlgrvWUXGNt7JNSu2udRk1abR5dWrlylKU60KUaUrp1JKFuWKjOXRSnKfu8sXP2UpRtFwi+Xx3U4PDzOsMqR2KzXDi3SS9utTul1Gdd9pbxm6ayYalbhG82x8P6lYrosgf7de2N1HdX1v6Z4Q+D+t+L7HTxaW0mgQwzWj6fqV7oWlXFjpyPeQvLc+ddC1l1TUZFjgvWh0\/QYbK6v2FlqFxPcLb3zfTejfCbwJ8Jbe613xl4gh1KVItQlZLkaRLqGTNJcSS6Tb2mnq0E8yFIbiG2CzX8XlLqR1Gdo4ovzc\/a7\/4K2\/Br4DeG9btvhz4N8U+IvEen6e\/kJDomu+FleOyaa3mhsb+60\/RoLmRCDDvsI70RSBvttu0kqzn2sJkc6lSDxfJRUnyqjL3akvhiruHMoxd7y+BTbbctpLwMbxHGEJU8BCpiHC0vrLXPDTdRjVjGUtmuaXO7JJbyT\/SG08K+Ffg\/ot54s8b+Irmy0my0kyM82tWEd5q8NhHLIkkj38tlaaUqbruQWcd0tjaW5VGZ5IA9flH+1j+1DpH7SHhXx14R0I6Rc+EbfwxrUOg2Gk6tZarewyR2d1Bc3GpjUbi1a7ivzEtveRW+k7zE0y2nii2JtNVP83\/AMTf+Ctfh341eJJ\/F\/xD8IatqMZmc2WmXdx4JuHlZV8u5i1KYeA5b9oJSzKBfavHZtJH9qiMs0Syj7k+EX\/BUz9jHV\/B8Emv3ejeE\/GFtBbQy2GpTy6LpzWl1e20F4IJ7+e70yC8t7A3N\/FZaSi299dxCIpZtdxz2vt43A47LKSeAwnKlJSlXipTqJRlCShaKuoyceVtXcrPnbfK381h8ZhcfWVTHYh1KktFRXJSpwd0m1LnfPJRd1dRcbWUbKy\/nf8Agv4UvPDf7TcQtre58yy1lZbMxGSyMNg9xHd7NRis7LTp5pntUWB7C1gt4Tew74WlghtVn\/U\/9sj4V3Hjjxrotlq8c2n6Poej6NqtothfPZGW6iWcImstcRutjPa3NrHLJJYXbXEFoJ7ldL1SCBZIv1h+Ef7On7HHxov\/ABD8e\/2fjoXibX9P1WKS8vbS9GoRQveW+m3djcjR5biZ1Y2d9NHBLhUkmhvrd4lbKj4P+LOj6voHxW1zQvF97eancxXOq3mnQ3UdtGZxPp11YI17EHSJ7e2F\/f2sBaSNGu7ryy0iGJKSx9fHYuOPdCVKMMPHDzc+V++pp1NrpWlzK0rPlls2mdSw9ClhamDhW5\/3rqWStJKai4JqSSbaUdlabUUm73j2\/wCyX+ysLr9mTXteXQvM1myHiL4j+F9PgubGW8bSPA3iW90iSW2vIIrm3mufEWnEWrXTSXdjd6ZqNtuLg3y1+d+u\/sza\/q3xG0zwLH9luNFufHnhA3MMqR2dte3vh3TFtb+CK3ijh+0Q2d1dX0PkL5vnTwCHM5bMv9YP7GfwltfDv7P3hHQJBHK0Pw61DTPFaItvD5WtahqiaveaXpy\/IfsiX0TSyxq0cMtnGtnLFGXBi+etc\/ZNg17446dFo1vLY+I0ttNtZr2G3AtNMiiNl4h13xJqTbTbxzTQS6Xezi3aB4dS1K909NrwRgViMxnSy1zguZ1J1vZKF3yyrr3YJpu79pVnJKLc1acG4v4uLCUqdbGTjWclGnyOcm1Hmp0uRNSTTjZwglonBXi7y1R8hftKeH5PhV+yd8FPhb4G0L7K2reJNJ0Kw0DTrjTbC3sLC40nUbYTLJfRStO4uBFe3DXaL5t3eWu1JJYuPvPQvghqtv8ABLwj4fudNvrS8i0+zmudjn7LYFbSBlvSltplzYnZcRxv5r2yWpiZpBGm9Er5C\/bI\/wCCiv7DX7OOqp4NmttS+NPjvwBIILyXw+bPU9P0zWLSRZRBd3Mzw2sMsVx5STGFlnEUEsWVkihjr5S0P\/gsl8Uv2m7i38N\/BL4a2nw8imvtG0DRtNuNTjvtR1e71bVILKyjsA1mLBZ0thNLdWN4jwTQIBDM7E45sLlGYUcPTr4ijKhTp0atSc5K7k6n7ypUqNxkrwpp2fNyqzv0NcXmeGrVVQpVVObqcsYWb5VFqMYR5b\/E5PnTad0lHVM\/aL4e+EJPgxpdmln4ys7vXdVud8WkmPQLeSaTJUlBNDo00sMwdHn8q3llt0EjMk02FH2Tp3jLWYbKCbVLexu7maFCbaazhSO2dFw6W1yxge4YS4AFp+9UHyxuGWP5y\/AbQvib4v1I33xY1G6\/tzQbA6a\/h3VNPMtrYajp8k8Z1N9Ju7bU5IbqGZJy99oV\/cadcWjlJIIsxTW\/1Lq3izXNOiFlqd7YXMiAGGW3sYUsJ7WRIzC72TG5tLlCGR47i0v7qMwuDGigAj9G4By\/2NKvjpvmeIbSvKTUYprmlZt2ftNFyJJa3uuVnw\/FWIeIlHDxaXs735YJNtWVrRVpJppPmbTV37z5res3\/j\/R7mSWGSC+0q7jcI8SztJA7t8uVkulIgJP\/LK4kWPaDi7UhUPA6p402s8dnqME86LzZyuLS\/V+H8sQSsUlbBUqkNxLJJn5VJYE+KavfXeto0VlcNFdAuq6XdzNc6bdlANi6XcXTSTWNw7cLbmQRyEssF0j+Vby+N6vqmoBmtdRt5reGImNHhWU3di6MAypHdO7yxBgQ2n3UqeW4kNtNZO8zN+lKtZXjd2WqabejV3o7tvydmk7OWifxf1Jyaulqk76RX2b6JO1ktW46v3Wo3ufSF18UPIklhneWGaF8PFIXhZGTLDer4IIBUjeqkc7g+VIoj4swjaPtZwu\/GHyeo+YAnCqQQSFBGAN4ABYfKN1reqhIrPV3fUrHYy2d9GS1zbxbsbrO4dRI0cZZRJpd5sWMkIEtZcSDGuU1K3EUiyNPbTsWtL2HzPKmCFBJGMAyR3MRaNZ7aQCSMyK2PJmjln1pYmLbVld6rqpbJ2dtPNaWe2mqyqYFq7S5t0kk7aOLfNbXXRpO+2u59oQfFeNm+W4bAKsQrklRnPXJGCu3HHIByqglT0Vj8V0xzcckKQS2GPGRwu4biO5GRktggqa+FLS4v2bOXYBh13MB1ADEEkk8KV7AADKgGut06W+fbycbScKCeCRz1K5BOSflAbO7bnjZTjKOsUtu\/l0vve77WfXc5vq6jtpZKy06201v122d7rRb\/csXxSMiYE2WG7GXbPTAPJB6kHoAAMgMSGp7\/EdiTmXkttJLNhWPC7sbsnIY4JwQAFD5DH5Ss5boKNxYAg8HPLKcYAJ+UqSScnj5mKkMDWokt1hSC2CV\/vY5LqcKu7dk5ywGBuxgKSKnmitbW0s9WtdH122f\/DFQoXtzPe6V7pdLXeqvtrq7K2miPpJ\/iI4B\/f5GRwZBwmcEbs4yccMQDwCM5BBXzhvumQghsMoC5XJwSAQX5wFJIDc7NoGRzgqHON3zaN9LpdvJ9WafVIv49H0VnZXs2tnZ3evrd67eYL49djzN1LKoDbs7uPnJAIG4YBHHCjjIJ0I\/HJYgtISSclwWU\/OfmAyWbuFbad2Pvcn5PB4UmGOGPzKuCO2AuOxwG4ycqpy28nNbdvHOCODj6k574UDIx2ADAgZAPRa+HlieRXte13a\/RJNray0et793ofoMKSb1a1Wuj93stPn1vtZbs9rj8bqeQxJwDy3B5BZiCxY9cNuGTjaXIHzTjxowBy3I3Y5VcEZwec524IzxzgAqzYPkMNtO3JDk59QHzny8sCvQ4wCpBO0EFiMVfS3mJyA3OegIyWwSNoztAwAQQDnAGAVB5543tpbXV9Elb57rlu72tput44eLS6v0ve9utrrV7ddLKx6f\/wmBP8AFgYAJGR1HI4IccccgE9ARvIKDxc\/zEOduMHGQpVcnC7g5xgAEknGVIAHNeeLbXBwoEgXjoC2TjgAqTgnGHwVPLAbduKebC4zkhsDBUbX5Ayc56HAODw5wGIZVAC80sbJ9FayW77xaS16efU0jhYtfPRb3d1pq766dlpbfU74eMZR92UgAFcbmDDGCM8kk5YggqpyTxnAKjxlckkrO4LAkgAnBx8xIwNnzkcAhVH8RBBrhBplxnaVfHLFhkDBJByQu9eFI5zlgWBGOCa0MEbPISihCx3YB3AKePmUBeo37gu0DAC5Uc0sZK695JX1vv00kubyejs+66K\/qtN6u7aSt527W2T3vvq9dEzzP46fFy60Lw7ezNc5Ihk+UE5ZvmKbo2GMLkFkGeQ2QRur+WD9r34qal4k1++tTe3EqPPPJJ5kmS2XYhjk8kkljtzxjrxj9tf2xfGdxaabeWdilxOywzYC+YUyQyAkAr8oxkbeCSu47gN380fxT1O91DxDfveqyubiXcrBgRgkDduHBGACMj\/gWaSrOq7Xbvaba0inr2ur739bdEctemqb00bSsuutnbd38+nrdt+RR3lylwZI22vk4fjcCf4lJBKsAeHHzKeUIbkSiRnmSLDO0rooHLZZm2jJwzE546dTnvVmGOLaz7OVwcYHI65ODnBHGcfewSR3yo9VSz1RJiilYCXwezghYSQQQT5rKxAzxnvwNFZteq2+T0+85+X3U31enle2v3Lz+Wp2dxJbNdSiOTbFAsVrAChAMVsnlKckZPmFDK5ABLuxPU16D4VupLXR9Wu0uGikuJLawiCF1eWBWW7u8Oo2xqHhsVlctuVJiiK+5gvnhW31G2SWJsMenQMxI7rlRuORx1APIwcj0\/wV4R8SeIlfT9B0u91O302JTf3FtCzWlkZi0ktzqN84Wx0+FnAiS4vZ4ITHFHgsc1UnJ3sm9tLN2V027JX072\/Aumtb9GnqrW1Xa60Wt\/RWSJrTV9b1aZ7UXVzcE\/ukjV5jDApY7YreMuxG52PABdmdnbfKS7eb+ObWz0m6lfUbh5rkuzz29p5cjRknLRPePmNJM5LCOC4VeVkZZA8a\/VfhX4R6jd6jcWNp4h0oz2Vs1zqy+FYdV8bX9jbkNvkmn8LWN9oNuuNwP2nX7ZFByz5Oa8t8e\/DjwHBczA+Kr\/U5FYrKt54h+E\/hRhIHbeDFcfELxLq0YGGGJtHtpVP34UJ2jOVO0k+VLm0b0ezV7xjeV76NNJqzVt7XztUveblaVna7a6vS3prtuedfCrx14T8Naul+9vfpfyyLHbBvsuosjblAy2\/SjH5h4ZkLMsZbb1Cn9F9K+D1p8apNNk0nxhcP4jjjW8e30HStNls7fJ81Y54dYSV2kEYK3E7Wt5bgkJPJyxX4C8I+DvhAmsWSajc3nnmVfKa2+K+i3JaQuQqLb6H8JfELtI44ULcANyVIwFH7Ffs0+CPCuqxJoXhvTdd\/te\/YRLplx46ktR9mdVV7i4Fx8FrS5kTBKbCiMEwqBSDG2rw9KqoqUqbt8Kipc93ba8LXb10Ta6K17TRxEo3UZyV3FJKUratXul1lZLZ9euh69Y\/BTxbZ\/Bu4+HV3LrXiWw8TX9zaTQF0nl1J44JYotRlttNkuLfVhZzSRCCKKw0XRrMB5TPLFvQ\/2af8EtPgfpHwS\/Zn8DXWo6HZ6Trlxoun2BtreyFsLOwsrC1tXQx4eRnvrqG41CUlws80++GG0hZLaH8CfgJ+xh478c\/Eb4SeOLrVLyX4d+BfENpa6z4Zs\/EMOpw6TJp7FpJb+G50bwvfSX12zRWrWv2F0MMpt7q2Nv8Auz\/TD4y8X+G\/AGn2Hg7TdWGi2clrbDTbKJyb9oLiFYYDD5c8crFbmPbsCSHdvQDLKw+MjUhlzr1J1aNV\/Xa1SCipRlTrRcqUU3JJK1HmipRTveSTduWP1dVyzCOFw1GFWnOWGpUpte8qtGKhUl7sFe\/O23Fxuko3s73+4b+9spdOE0JQq8RKZyMHG0jYcZb+E5+Zc8AlTXy143Hhnxbqtt4V1vw83iGy1OOa21F1Ro3gsGZoDG7syOEnuPMjuUSWOcW27b+7Yuvimm\/tL+FdO0u98KHxI9\/qtpbzpLcXnlm4syjxtFFcGOCC3iLwyA2ySWu8sJILsmaHY\/zF8NP23vgpqn7Tdx8JT4o0rUvidLo73zaNBqVsL630eKaWaGe50oXeYo8vK9wY4PNbEYWMr8relh+IqE0pOSUVGfPrzRilFczutVZJuTdlFXT7PkfDuLpe2vRqtwg5QXLOLlF2tOz5fdad925JJ8vK3b9D\/CHw4+GPwE0i38PeDPDuheHLTXtXeXTrJYbS0M1\/qUvnXEdogKNmZszFIYlLyRiV3LkEeW6z4p0P4ieIvFvg3QfER1m98IXVno3iiz0O7mupdI1bVLb7XDbalFpsRWD7Pazxy+W0ryK6vFdvZGGUrU8WfEfXvGL61qtqo8Hw+BtTtC+oeJ9PaPT5dLzFcXOq6fdwzLBGZdNSVLO6lvo4IhcxvOsEiyKlTwpD4M0Ga6v\/AANYf2bofjj7Zr3iPxPa6gsbavq11DD5d+mm3NrNrOpape27D7LctMbZbePfDLdvtLY0szoY1qc5p03O0acpRi\/ZtRVOSUNEuZXbkpaWjZNSMHltWjFylze2UXd6tRneM5Kbk9W6b91RTlKemtlf46+M3wIitZZrJbyx0jw673UmpymGf7dqF9coqCa6m0p4p7y88lUtkaAC0Vilrca3puGhm8N8M\/BTwR8PGZ\/BHw90jQGvXeVteWySwnnuZIjHJd3XiW7It9PeSIyRCBb23lW3mltbqWeJzK\/6CfE7VzPpkc1isv2WGFnsrWZp9H1mdrcO32mfXNa0id7N96oRFbxWnXi6ZmEafGHibWLrVpZLmXTre7a3iZN667c67qksTMp8tJPDl9YXLnAVWQxsz4XCrtw3jY+hQliU6cpuDUWknJqKVrqM2qihBJJRjFRsvi0cUvSwlStTouM7Ri371mouV3GS9ouaLb1Wsr6v3Wndnm2u6Vp1laXtzea34e0vy0lcWEOr6G88jH5UaCO1vrHQJQuCqG41xJBkBRgEH4V8fa9HbPcyW1p4ru5BMwj1G4vtN07QXBLMqGz0ux12O7Z8Bd1l4rgdGwQyl69n+KviTX7SVreXwudN0oEskuq+Do5GeIgIkkd34w07WL0DHUR3UShi+EEmWPyrqvxHu9Ee4k0u7+yZRYLyGGGztoZomYPHb3tnaW8Fvc27SAMElR40lMb\/ALuREYXhsNTqVKdPla5fdk5Ru246y916dFrFJtJ23aNJVpxjOaad0rRUmtLae\/DmkrR5rauy92+l14741\/aVn8C2riS28G2eB5Zld9VubhyygmOWDxLrGsWmeqEeSIyxBxj5a\/MT41fHa48b3Ew0rw5p93JcySLLqGheF\/BXnQ+ZIyM0qxaAVdgTvzLEQ6MEyA2T0P7YvxZ1Ke5ure28TeJ7SK8V7e7hs9TmMmjag\/mPayBGeN1tboKwt5ow0cqK0ZKyq61+efw0+JPjG7bWLBvGWrarcrC5hS5g0rUL+BklALtDrFrdG\/hKMCyxSpLEQZEkIVgPradGGHw94qzjB6pLlVkpNKKte6volre54k606+IhFqPK20k2pNtJO7lKN7X6bb6XV39K\/DfwF8VrfX5JltbdrCc2d+JL74feAxan955v2TVbKfw3FaXkCq2+K7jCTWz\/ALy2ZpCmP2E+CHhzxzrMNhA+hLBBPInmSadpvh3TbKOJWjGTPp9tZoLJmAczNJkNyLeaY7Jfhj9lHx146t7q2tdfjh1+yWPypLXU9Js7O9ljX5Y57eXToIEZPL2ySJef6uQyRurfKW\/oB\/ZP0D\/hPtc06wtPCz6fbWs9vfzXMdvALWJi4UszQmGHO0kAJb3ZLHLbCFLfIZpiKtapGlUu4zv78XJNxT1cldx7vmV733V\/d+sy2lRw2HlXppc0Lc0ajXJGT1tFJqUne0W\/d1s+WVlF\/pt+x74Hl0jRtEF\/Zy6e8S25a4nKy31ygk+Z\/NVCY4sAmFFBZkYecok8yvob9sv4O6H8T\/hxqFv4kjNza6fBdXFjrOmWwk8U+G5pYHT+0NBdVeR5RvHn2CvCLyDzLdFkkaND6B4Q0C10zT7NbOOK3MEEUHyvI5EiFQJN7OzBgAzKB8wAwQ\/OfYvHdlDqfgie0mR79xZTR3CRCMGWNoW3pKfMVRCyEkbhJl\/L3KwXIqFOMsFiaUoqS5YzUndqWiSWlm0r6aLZu6eq8+OLqYfMsHiqU5Up062nJpKD5ottN3Svtq7O9neN0fwvfH34K6LFYXPhDSbxtRsT4j06zvJYku7S833uqa\/u1JYryOC+sUtYdCttQlhuIVW00pJHu94inR\/jrQPhL\/wj7r44t\/H3iPxRofhe5vL660DwnpzXF3ZpuMryz6jLdzaabe3sYzNc30FuLjTkhFxbCVo42X9gP2+vhWPAmq6t4v0jT9cii1pLiw8V6M87SJc68y6yulaiWU24kt721E11PBbW5ZXjiSYTqZpZvmv9jn9nv4pzeGn1zTvCqz+E9X1DUL1tL1q2m0jSdV8P6nBqVvqej6jbzxXU95b6lp17c2SXC2rmWBhIu+6u\/ObxcrwkcVUmnTdR01UaUEm1ZRXK4yvaPMkpPWybV02k\/wChcXm\/LkkMW8TaFbkSdZ04uVRx\/eKVROUfaaPknFLmi4yu47fsD+yL8K\/BugeBW1iHTo7fXNY0vwjql\/c6\/PcamdN1ubQLLVdTskvPtw0R5Z49chjgm0SyMJuRdRo0qw2sMXvyTfEPV9e1Xwj4f1zzPD1ppsUmpubD+zLeETjNuUmulNxdXcix3UxiEUNpb2SIzeZLMrRcr8DPhj4n8MfDafwjqioBo154eXQJbS6uJYlttH0mHS7dYWv4RcrHqSaRHrF6kiySfatTms4Lm4WCK5vfqjw94a8Pi9tJdZsNSEdjZtFI0l0z2t2m8PLNfabEFgubkyQIheTbLFbpFChjheWJt8TTj71CsnDmSak1ttvfdaq7Unort9\/yari3HE1sSqqxM5S00jUUbU6bi4Xad1ZqMIy91pu8nv4b8M7PW9K1y\/s7+1n1S20hHudPlmuJI7dYgvnx3t7PcLBGRa+ejJH87IPNmUnZIR+hPwf+I0ItbG8vNf0eeO5ae0vLfS7u3uLX7bGxzaCNWaSPylCiVpkDsznaE4B830rQdJ1+aa0d7SC1vBJbxanYkB51AkiaGV0ZUWQOq27ROpEcYKMgPFdDo3wdW3a9\/suS0sYb+NYTFYx28UdlHCCEuplUCR7osiuZYsLIiANuA48iFCvhqiqUIqqoy3hKzbbjZtJ31vtqmrva7IxmNweYU5xxUvq8+SCs4ue0XGpq04qUpe9yqPMpQ5W05Qt7D4x8U+H9QhvbQm0Nzb25uJEhQSvFFcl1EMbCPazGQpsiwCwCEkg5r5JvptUv\/HUSaNpxn\/seFoo4gIBcK9xCA0xyS0IZmkBjY7Y4EdnIJ2r2\/iaG88Ix3tmbp76+tzbqurPbolxqDNby3txKscC+UsCyL5ICx5YqQTvILcf4cvrNBcXdr5j3V9cG81KdYhb3Nz9pQx+VO+RIIE2qiGNcp5aLIzsBn5\/Nc0nLExpTvGopp1ORWtBWtGLT1krJtpcum1nY9HK8uhRw0qtK1SEqfJTc7uDc4xvUafI1CSlJRjJ815OLUWmcv8WdLvNN+HZ8O2tzHb6trLR2es6lBi4kt31Cc3l5LcEkJJiRWZI4lVI0CiTYgUptfDnxzo174ftbjw8z\/wBkweXYWyThVeK20aE6SkuNw8o3V9A7xnADImMkj5uT+J1il\/pl3e24ig1KSWaDTCxEsEIjhkV5poDMqzKYmYx7m++AEPmSb65jSrK\/8F\/DHSU022VNRuNd8NwyebGIYoNGM4a6mkVtjgsJLi4KYRTO74UKpNeYsRV+sKcXBU4xipNNykox1S2spSbfP7ur72aXuLC0p4BU5Sbr1MTzQhbki51VH2kpL3m4w5YKnJS9zlnFJp3lxXiXxzqekfFzw1Z6f5kaa7dTm9klc7BcWEshNsVJ2kJlZYkbDyxsNqyFlNfU41S91Tw9b3MVtmAPa3S\/ZwiD7VGN1xsjdvlgMm3YCNpYMMYBA+XdaGm+JPH\/AIaubHyp7y28Qzm5DElopWt\/N8wgAYNuio0TF0MgkXzGCFhX2dpEVraw\/ZZlW1tljjZUIX92hRl+f+8zqTIQPusQPvOALq0HFVKscQlCrPlSV0tfdetrJNqTk7cyd3dmVavBQwsJYe9alRjzc1+aSjUvzdJL3HFQvpbmStpax4ZvNP1XStPt45HilW6uI4mZZFBknkNu6guRu8ogHcGwWKEFkIY39btbe6iubZ2VIg8v2WV+v2hdqgcruCSAOobaQVJBKqCB5dZagmgyeRb3FuIIdSS5tPNYmVbVyz5TeVZpPNUMAFYBWAIBANekT3jarIiLKrOqzh4UBOGQbklbaAV3q5ZhGrSMRktg8qGLiqToNL2kIxpKX88dI2clLZau2smtWcNfDOFWNaLmqc5SqRct4Xand3Sabbs+a6TbV9U2\/wAPa9c2k0ehQgG4gLENOQGKtNFEJN4ZVaK2s\/MuN4Qr5rRklipC9Lb6jZa5qOp2kDusNjcLFJcSts82ZJDIyK0biQxKUEsx24kyquWAfHhPjHUtR8N6gNbt45Zo3gNjco3+tEjMkgkRcxRpHFH80rNwpAZtvl7ad4K1K\/k1eS2ZxBaT3j6rOVCme4mvpWf7NJ5cirsRIhG0jq4ZZTsBKzGuqjj1RjCi3Kf7xJxei9lOLVOPNJ2STadRvfkaSsY1cujXjPExahKUOZNSTftVNSqy5dZLS3LFx+25XaV4+\/3HgSw16Ul03iaaPyYyqtHJIQyrNOp2pPbw4E4hljeF5VhMkMq24V87Rf2ePh94Y1aXV54o9UuvtnmXMLQyMZLrdFIcLJusobeJohcK8zPDZyMzwxJO0Zj6CLxJC2qW8YZ0xDEriFHDfIdzcxCKNUGIhHI4XBGPMJSJRv8AiHVEk0e8kVAZ7S1mngjidY5FnjjLBC1za31nbchBJJ9hkWLmZWRI2eP6rLqmExEpJUqdSpTl7rabfOrOTUbWvtZN2TS0vdny2Mq47D8sfbVKdOtC0oRb1i3ZRc9Hy6W93zbWiSkutf8ABngu2udRj8PaFZuGEn2\/VvLke4YRJarLLqVzFd3byT26xwJaWlrHPvMlsyRgypX5m\/tIf8Fefgr8E7C5sNU8ffD2HxFDDcSw+F9ck+Imi6hEwRPKiurS1+Huu3FjI8hEyvqlvZI8RRTKjEtX4zf8FAP2m\/ifL8RPEHgrxB4f+N1j4KuGsbnTr7RL680G1t403zfbotcu9Mg8J6pDCiLceVpXirwn4glhukigMUkc1tD+Xnjn9l648XWVv4v8UeJvFN3o92I7izshrHiHxHq95FPF9o8q50LW00660FZbULJFBrSi6eEGWFL1dssnvfWalBKLg407t+5B2je1rwjGMdbu7d0m1fexyU8BTxMlOrVdSpeNoSm5Tmlyq0XOUnLl2tGztzLmTifZP7af\/Bdzxz4+8IeINM+FHhm1sdJt5I4brxNofxGvdTu9Klu5IBb3v9mn4Z6XH\/Y926LDDqb6oqxag0FrcWNnftayS\/nr+zJ+138UvjFZ6n4V+I8mreKFGox3ei3FskMMNzbaklx9psdY+z21ggIa2uJxdwwM8N0iDy43uoZYPC\/EXwEuvB9zNrfwxXTNIihW5hnsPFVi2uXF5a3lvJbalA0tzFPYrZ3lu8sN1pv9nGF49sbMwVZD4NZeGNet7u68S+F9c1O4ttO8xfFvw6udSum1fTLCKSNru98MXUzXD3ukW80Iv9KvktZ7\/wAO3MdpHrEF9HbRX+p9FKrhsXT5Y1P3sJJxnKU+ZKNlblTS17qThrzKzbUFUwmJwU1NUXGk024pxkvOV5Sbkop2X\/LxK7t0d\/8Aaq\/ZZ8UeDvFmo+IPBhtLrwr4gVdQez1PWrO0NnPfRx3M0FtNd3HlR3lq8jW1zZsy+Z5cc1sxLPDF+e\/iLwZ4puYF0S0h062UsonjhvZbmV0EgyN1nazIAzFSpL7clW5OBX7JeCvjZr9jZ6b4S17TdI8beC73Txe6ZqOr6W3nXkFtI7Cea8ijF7YS2j+Xp2paffTahNZXatbrLLZSWV1L9FX2hfC7xz4GvG8LfDjwx4U11reP7Xq+nXTXjlTazTW6QC5U28cTtHFJN5sHniO5Y4R8Kvv0+I8Rh6VHD18K6tSKVNYi8LNXioykrybbuveS3u2raniyyLD4mvUqUsSqfNer7Jxsk7OUoxbvHo7Jy0tt1Plr\/gjj8cvid+zN8f8ATvA8uoWreHPiCbS01\/Sne9ufPtNHun1CNrOOJVA1WJIJLeFZIQlw06wnyxL5i\/0Eft4eFvC+t\/HfwfNY6TCkN5b2tzcarasPPu8yW80MSQIkTLY2psyYo499wx8+UpI0ZWv5lfg\/c2nwk+PujeI50ur+TRGmmnvADILfWjc\/6WluY9qRxRW0kyICdoQB5H5Ar+g3VPjDofxWl8L65Gjarq0mmiBYbizkS6CXdnBBLdweS07SXUaqHgijJVj521GDR7fKzJVcPi8VOnRcaGPw9ObtKMlCvGKVSVkko88XBSaS+BXd7nt5ZRpVaWHtJuphZ1aL7zptwlScm0lJJqSTvpzWXMtv34\/Z68X6VqXw00mYafFptrbadZWlnaxMlwJ\/JnuZbOGR1QGa6d4ES9lXzftE15kGN28yvlT9r\/8AaCtP2Y\/gP+2J8Z9Ikmf4gyeF9U+H\/wAL1NtE91H4mvfDt3eafPbWpy8zzeINaW61F3DI40c3Dj7OABS+EHirXfDHgeaCHRL6fTrePSJbRtPtnaGyV1hEy77nbKtzbNBcTtbqsl6IIywRHkYSfFXxq1bwR8a\/jn4D8IeOfEd6\/hjRvE+g+PPFayAfYLjTvE8TaRJp0KAfYp57K90BbmS5aOaWXTLox9JmYfJPMpUZ4JVF7SngajxE1Hl5ZxoRkkrvRJzlRjFWbUpXSVm13Ryq88U1Lkde9OD+1GU5Ql8Ke8YqcpJWTivi95Jfxn+GtU17xat\/Z6zpGs6lr+tyXE2pl7O4nvbnUbu6NxNdPKVdpme4aSSYsSSXYZ+bI\/or\/wCCSX7Kc\/hfxnoPxc+ImlzWGm+G3iuvB+hw2zXV1qfiWYCGykuLZA3mC13nzcjbaQ+ZLJLEZEQe\/wCm\/s3fA3XfifLovwZ8Dal4j8Y3F9BMTJA2neGfsz3EjS3JgjaS7ktSjKSAFXfHjeA7Mf6EP2ev2WdD+FGk6fquoq974uksIopXtYraLT9JV0R5rLSbUTuLWMys3myfZWeVl8yVywVB+m0cbjeLIQwuGw8sNgYKNPF4utyvmpfu28PR5V+9lUjZS95RjCd3Jc0W\/hcVTwuQuUqldV8W1ejSiuVUnrapVT1cou0oxWjkrt2VpZWm+F9btZk1G4MS3d3HMZb27t7mETS3V2924ivID5NvOjuvlpNExIVQ0oYxsqT+H5NbtnsLyzU3Ss8lhLG8LrdzSMZZLZiM+TNeu7OpDBJL\/ZKjQXNxqEmpfV8vhZ1kdUBmtbna7QTRRx7s4LBtgA85SdysiKwJXKjktjzfDhi3nWcbbVIZUMY82FhtYfMAobbkupHzqcKfmxX6Jg6NDCUadGlFwhThTjDdq0YqKU+7sknvdddbr46rVq16kpzacm7t3bvdqTS0d9LtXlZJ6N9PiK58GBGbYkxHP7uZF8xV2lcMU+QkHgnarDBLAnOc3VfBCa1DieENqEMSos+zLXltEhAjnZnCyXNtEgEMx2yTWq+Q+ZI7dH+6rv4dPM7PJahWYCVJEjcoBKhBiYKMEQvIYlLEsiRqpJTCx5P\/AArSVZBIIcFXVkdUBOUKYbJXAwy4BDcgLknkntVRNKUIptRVtVa+jtu04SSXVOy6NK2Dtu2k09NVdbbax5knrrezbXXX84br4bTW3mCKISQSAebbyKZIZCoAX5QVdZI\/mVZ4mEi8\/OEdiaNr4Fa3dojaTSWU5T7RaSOWcMNwE0Mqwp5c8e5zb3CoGTc0Myy20k8U36UXPwn80iRbVQkq+btwSI2JPmINy4EauW8s8kRGPuclkfwdDHd9mUAHGQhBOdp6Lg5JBJCkryRnBAq1OEmpcri3\/ejumtldpNPs9ErNaXM5zaUk5Rd3dJWW6S2TvJO67XSt6fninw0kgMbLGZbWVPMgnEZUSIPkbI+by5YdirLCw+RmODLG8Utx0dj8PJUO4W7E5YlmwSSoXPyhAMklGYkEHGcgkqv6CWfwkWJWiNvugchmXZjaRwsq8ALMORv2lWQeWSwORpw\/CdV3bYAPl5JiAYcjJwCQOgIHIBONz9tlVXVx180m9Fa60tLZO11fZd+JvmdrJJ9Xra9k9Lba7tt9D4St\/AkowDCwXABO0EsAckr0APykkI6nJJBDBWbUTwLJwBExG7rgkldrcg7cbMjrtyoX+HJr7vh+FPUeSQAcAGI9MfxEndkLz1ycgcEbavxfC5Fx+4K9DwgHJ56c7unIDDnJ3FflEuv09xaaNN2W1tHa9076ba9rO4Jab632i9bqN3fq0ut97ardfBkfgGUkH7O33cnKYUMDjnGWKsGJz83RiBnDUV+gUXwviHBtyAeu1ODnIOckNzyCfmKqApXBwCoVaGz5flfuk7673dn6W6FSavd2i+vPzt3bi3qn\/WvTb8PYfBUoYgQvgtkAqOPkwTwCdvGDk4yRn0GvB4OkypFsTuwM7WUgDOBxwQAASd5OATuUnFfZ0fw23ADyMbiRtwBhmwwAUArwv8SsflAChvui\/B8NyrKPJBzs4KFgM8N8x9QOh9Ac9MfCVL30te1mtrt9bqXmnrqrb7o+3p1Ut7p9LNJbryeujt2T77\/Hlt4Odiq+TkBeAVJIG7KjBAAGSex474OTr2\/giV0DCAc5yWHQ4AGFGRuXgYXOeSSQCR9gwfDt8jdEMgjO4glgGxnAwAQO6\/MATxhQK3Lf4e4BDRgctjsQVz8pYAd8depBAJBCtyzhN+fwt3T0vo0rvV69Uulrao2p11HXV3T0dt301SvtortLRO\/T42XwMy\/8s8g7V4UktxkAcgk53bhkckkYbFXo\/Akg+9HkjoWBPTPQ5z1xu4XBzgdK+zk8BhlJ8hhtK4wRgbcdAwyucbhk45JABxi0vgEblBtyerDgHAYkEnjcGGTx1IByDzWPspu6cfX3ld2UWtn56rz0N410rJtLTVNadNGnq2nZaJr4UfFo8CndnygV2scBACAcLwcjBUZK7jknls5DLS1PwgILORmtQ+EJUFWbkKOcbcEHBIyDwCBk8H7lPgEZybbA+Y8jnGARwIzxkIE6kgnjaGK4WtfDqSe1kWKIJhSqjb0YA5JyRwuAOuTjBLYLDGVGoo\/D2VtGt1aLfqldXXRu6WlRrw79Fa6to7btb21Sbv0to9f5m\/24re8tbO8CWi28flz8hCpb5iCTnG4fKSR1LAc46\/zDfFQOdfvmdgzNPKzEA4B3YwPlUZC469+hwcV\/an+3X8F9Pi8M6peahJDE8MEso\/ecsBktHgumN4IKswADHIB6D+O\/4+aLZWXi3UbezdXRZ22hFH3gWBHAwM4weuM8HOQKoQnGVpu\/Wzld2srPy0WitdW1vuc1apGaVklZJqSVr6bPZOVmr621au9UfPxiWOx3FgCyjqPmJ4PI4ye2fYDjoOGuVgeeOOSNnEk8YJVWLMob93GqKCWyzkkDJb5QBwtd9PZXl1BHb20U880zpDFFFG0kk0znbHEkarueRjgIiqWJIULkmsyC2j0a9WyiYXmvuRFPdwESxaW8hCtZ6dIhZZtQXcY7jUIyY4SXgsS+Gu5e6EW3e2nV\/JLbruvkccpK0eltF57J266Kz2e9tNz17w3F4U0G1S81GxHiHX4UItvD0ks0GjWEpjdVk16ezmhvby7gkKtHo1hNaKkgi\/tDUHdLnTK6bSPEs39rRjxrMdWWAlrXwjFI2k+FdDyrANeaTobafBDKoKytpenmzmMxD6xdvKLnTbjAsV03wppIOmGKbXp4\/wB9qWWcaUjL88Okg5QXpO9bjVSXkjLeXpnkFXvrjhZLpApFuGErkjcOQOehblTnOcHvn6Fyd32SW2lm1Z6ed9bu7jfSyVik7WvyaK+99dN7bvytZXbR7T45+KOo6rANNtLySHT48JDp1oI7DRbYYCj7Jo9glvpdoWA3yC1tIzIcPK7MxB8THgnxL4x+1XFhDEmmWbINT17Vbq30rQNLMrBU+3avfyRWsUsmQYrKJ5b65wVtrW4kwtekReFNO0SwtNQ8XM5v5USbT\/CUbPFezI+HW81+dNr6XYv1SzQjVLxeR9hh8q5l4vxAfG\/xB1zTPDug28upSwJMNI0HTY4bXR9FtYx5l1dR2waHTdKsrWIm71PWb+SKKKNZL\/VL5Qss4fLqna8m0uVdHdaOybT01Vm27puOgOV9JdNoxVtbLottOybb3Lel23wm8LAWU2seI\/G90kq\/boPD00ngvwlqEsR+Zr3XriGfxVrmmbsoml22j+GYhGomS\/Nyz3D\/AKBfBXxR8TPE\/hJdF8Aa3ovwe+HWrXE+jnUPDNpc6EuvXogw+gWGoW39oeO\/iPrAidDJpiX2uR6e06XmtTaNpzteJ8M+DfCfhTw\/rOk6Rb6Tb\/HP4jajdwWdh4b05rpPhpo2pzBkFvqN7BLYan4+vLOQ+ZMumz6J4KtJLT7TLq\/jLRJJ46+\/vAHxY8H\/AA3udS8V6nrtj4m8VeFdHtrHxJ8SYdOtJ\/Bfw+shMY7DwF8GPC0VvbaLqeqT3FrNpHh5xaL4emuE1bxHBo0ugeF4taFVFaDu+a65XGLspJWck2mlUjZXknJ00ndzi1yt0Gm9opeauly8revNorX01sryduVH9Nv\/AASZuvCH7OVpafDhvE0n2\/xn4gF\/fX3ibUFvNXv9auNMW\/ewOnWF1NpOmaquixrrGsQWOsavHodle6dLrXivUXv9F09P1U\/bS+C3jr4qXvgL4n\/B\/wCI9v4a8WeCJZba\/wBM1PQrTxT4f8X+FtQKS6holxpr6t4bvrG+DsLi21aw1u1Zd0Szfakit\/J\/kN\/Zc+PGu2+neMf2uPiLYPp9rNYXmgfs8\/DuaSeee5Nve6hEusXU93cT6lqb+JPFE95d+LNbvmW61y307X4JJdRl8VPc6d+oOl\/8FIPiN8M9b8IfAjWrzTfFfilNLsbr4la3qdzcyXT+MNV0v+3vE+mvdTzyJDFoNzqVnolzOySifULbUbeCOK0t4Y7b5DP8rqYml\/s91WUo1km1aNVaUklK1N80Ie\/Hljo1e0pJP6HJsxeDxVKqmrQTpRTi1GdNxSlB2s\/f5tJRakubpJJH0B+0f\/ZXiP4N+M\/h34q8V658Lb7XtEutLh1zRmfw3cW0qmW1uf7O1S3kiiuJSZbqKeD7fIyQtIjKs6vKfz7\/AGCf+Cafwt+DPx00T9rjxD8YdXvLHT9Jv7Xw74f1G5sorvUXvbaTT9R8R674gvbuG\/1WC5kuJbqJImtbQTzq63tzbiGKLoviJ+37qHiK+1ZPEnhjQv7AivdZtLeOW0V2uUs3ZEia2uHFv5FzII7meSaMkRzGNFy1bvwA\/a8+BHxLvX8J61rd\/wCAfFdi6ppkN8IX0K+RisaNo8bW\/lWVjCSwitGZYfs+6O3draKR5Pj50M1pYedBUvq\/tYulVnS5ZKpSacZx5JuolGSk09eZRfK5JN3\/AEWed5Nj6NOFSPs68alOsqsrP2bj70Y0pRjCStUUZSUvaR5oxlGMpJSj+\/tp8cPDEq2qW\/ie28R3OnzwR6To\/huC5SefTdURY5INWe+s5bS8kTf9safzEtnt1eZJgsMki8zJ8QpbCcXV7d29ytneavp0Fwk4sU0ApJtitYPDyzSWkplgLfZnlF0j20bosYcMG+H59X8H6dZ2F\/N8Sba18PSwNcrqVtPY\/wBnXdr5Ye9S8lsYwgV1MnlXCEtuVonEyHy0808WftafA7wj4e17VdC8TWfiqYyWMyQWF018JJJn1G3iDfLIdiOJbeQRGSWJDDJNBCPL38WGji4NRp6qOkeWMnG65Yr3byvpGMFflXKrQ5Xbm8rELBw5pRqKpzpN6JNqW75uWmk\/ec2knZpqbkrI\/QXxz41lWd21CXUksL62h1CDUNK1m408XcD+YyX9pbwSx2c4YmSOe1u5IHt5g8DvFJGzH4\/8d+NbfXLqS0sxDe6eY47d7+BxCIXljDQwXGq6ZaC5tNUmB4XxRpF1ZSASz2L3FuPtr\/Euh\/tM+LPjJJ4l8J6J56X9hYw+Lfh7NcGa2gzPNb2er+G7kGZ7eOXUopbdoUCLANRtIJIhGtxcb+i8HXV1o3ilvFOuahJY3WoAW2oaRIVa3jmIAe2urdmkSaxlAQTwzq6B18xzHNGGH0VHCV5STmmudXd7XjfRptLZe80ntBp9bHz1SrTtJwcVyNJWcmpK6d9viskpNacycdUke\/t4L1WOxN9pGuXiW0peRpLW8ewv4IAyqJ\/N067eG4hUExNeaddyx\/dN5HYyOIn+B\/2otd8X+B4LHWVs4vEdvNcLb3o1LR4L+6lWQspS41qKGDxIIWA3KkOuR7GHmL8wYH7g17xNcQeG9U174fTSWmp6Oj39zoLsLiJliIe4e3gkdzfaXJEzRy28jNPBHIdskseJq+FPGP7UXg7xDZ3+n6zYR2l3FMrXWmTYmSxu8KlxBC8hJuLBblhIkp+dYp7dpGj43\/QYPCxgo2m4SSTSbbhJu1+XbondSUdbpK6uuCrWlLeKcVorR5ZxTSSurq7T96PLq4307\/lX8ZfCEPxB1seJ7zS9S8JSNYmEt5Fx4g8K6jptyjPeQ3ars8TaRa2sipLG0Mfi++juBHNCqNGoHxRffAHxPo93bazoMzX2k32pD+wfF+ivZahptzNAym50q4uoXltbXWLQS232zSrxoL\/7PLBLNYwiUwp+rnxE8fabr1vqWlaZaRQTaXcvd2HlxoGeC4Alkt1GV3JwF24+YMCML81cr8FvBviPVPFUK6WY7ay1nyk1CGOafTZZopmC3FtIWkitpLaQqTJby2txb3A2qynCMvfi8S6FOUm4NaXV0k72jZaWvF6NdrXfbKhhY4irCMXPmu3om5JprmfxpppLnTTb0Vup9Z\/sgfD3V\/8AhENLvLgQSag1tCmoRW9nYyE33lK6zRWkn72CN2Du0VvOsRkDIgVVwv8ARr+xZbaHoOnTWVxZzXOtXEsSNcjT7lbeOEqcAk6kYrZs7mmnSKzaUbYt00duso\/PD4f\/AA3sdPsdJi0q4Oi3KQRLMG0bRnluGCEPCJJE2XLSkKPLkGU8rKIgUkfpN+zboWr6XqaSzTrcN8gklk0K103nci5+02nnKx3L5aAuzyAEsmd0cvxfP7TFzfspJNuF24yhGNoxvF+1undPVU1bbROz+rr6YKEJVIpxUdVGUak3HpO0E5Xvdv2jTT2bbZ+mul20MXl7oA0TqrL5cTRhj\/FyzOBkD5sTOwyzbj\/D1eozyTWMsREa2twrRskkmAgeLy9hKtvKAsS2FdcYO4Ek1zui3ELIpbe7kKWCBCBxjCKIySCyliX3MCSCSowe03LsBWzWeZkZRE0inG5BkysSyBAARJiORSoYbQAVPsTpxjRUYSSXaEHJ8slaz5U29OZuL6JpbXPm\/aSdVSnG7TVnKyTdlrHmaUW9He1k73vc\/J79sL9mbQ\/GXgbxJYvZjWRqmoLq6QXA+0JZGK3nW5uLXaXig+xxtcPp8DQyQgzOHkht2a2fyrSPBuv+FvCHhnw34e0edrXRli0WZLfRpNOtbG0WBXhs7e32wR3H2VbWZDHYJLCkUPyzSBgkf7Fa94RtNetZU1Z7WbPlhLSKAvaQJtPmDKCOKSQ\/vCEdFVgcOkiZU8rf6Jolk32G3tUD+XLcFRAryPcOZQ9xIzgrwsjcRxs79DGi5I8ujCWXSqTpuNOM2mo33VlpK0tm9XBv+W8fdsfWQz2piMFh8JWjLEewqVKi5naKcoU4Nq0He0Y2Ul1bbck2j460u9nsrdFttNEVtZaZa24VjJuBS3SAxzKyidJ4Z9jY8tWiEanATY1adhqYF7c2t5DMiXEK+YZA7TpKYJNscqugj2vtkt2kRzLHvgMivG6lfX9V8DaKj3M8kLIkx2QXAcSuJRKksckkRCECKaKN1QEgBpYsBQmPMvEFvc3V1JYSRCG4uHEUboBIjtEpXzIUcTMySxIsRBLKX2kAjMZ8bHYivOaqVJuT5kope8ne9lrorq6SS5XdtaXt04WNCqnGFJpSXvyk2mrcrWl3zNSum1a1lF21vg+F\/FMJ1fT7O0dIDY3V9bXcRbyJZZ4YWeVWU5jP2mOSO8jBUtKU3xtyCey0r4larBpOla9bC6WC3vpotX092ikuYbRJJYwhmV2UbkRAyrIfKR5drfKorwdba7025a1u4mfULG9tVVRHDFHNHOtxbwTMWjRRMIXJV1kaOJibVtsaxmlvkuZXlS3lmghuNRvrozwyIFWWARKkaJJIVeFisKyQoGlQBGLK+S3mTrzlTsm7p3dm4tO0eW6slZW2a120O\/6nSdR8yi4yUfenHmXLeXMrWvaftOZPSSajJc2qbviJ8bbjxBrdtLp8aGNLm+tpbWzlmbyRAqgXTNIiNIqLtQkgI4bAZIwS9zw54l1uXTBdXoSBru5fabQqkwsZGURAeWpkkHltv+RQqcFiNpA8zu\/D02i+JF1Pzkui1nO94YYlE0bFoJbiWLGVRw0YEsRHmMo2ocbmbodInnDXE6QC6FmyRWciF\/La2SBB5kqjCqbdAImdlLcbFO\/crfKV8JWdadepKcuZRk3pZN3vZJLVarlSSioqytdH1dGWEWGpYehTpqMbRjo7tpxXI3K1kuZScnru2rHpllBZ6iWt9QuonislmuJirtKZAdy2pnmwSdiBokU4R5WdgzKDI3R68s+o6RK11bAQ3NwkriOFDi1slj3SDzDtVmRPLjii2DbHJtIcc8PbAJfarGLuM+XaWmo2wnSIWi24eNfPldAPNJaNyDuk2YyI03MR3Fzepr+i6fp0BkS2+02dybhNokvLaNx9oKBGztd5VEuH2mM5AYuWrnUpUlKLUo2TaabbmrpqMm3de7e1vhu9HfUnDnlSnzKUVKCd7L2acI3lGLUW5KTS1t8K+xG78f0zUF0\/xLqMVpoltbw6hcxFdUWTN3HBI0SMm1stC821o3mbEiJGMYj3bfo9WBYWKXiup06Hf5TrId8cYNywZ8uWMaLErlsY3MCqnI+d\/iBeXOiXd9LYnyIvtsmj2ckawJGkrwxu93IkgHzQiaQ5ydzomOA2dH4e6y1hq8Vpq1xPJdNaSLavPtT\/AES1iI82RZF3C5nmlwqqpJByoCBZGr6x7RulU0V1ecmoqPvptpJrdKTSva1vkquFfso4mnypqneNOLdSdSSpwtKbm9JRVuZddeVX+LtfFcQhXwxqOnRyXF5HJGJPtBcCWG4vljeFmaYKRFExw5UrEVGwI2c9do\/iGGLxTdRyOQr2dtMCspaRZJriaFoRDsBVBboJd7bQytgE5L15j42vpnbSZZjKLZJAreWGWzjgcmZi\/wAwZ3VWVgWjKq2FUqSgrM8L6nJqHiWWSWRI4LGCOMXUaq\/nLLGywozlFUZKqBG0pKB2kOHKA8MqrvKVJe\/eLV42dlyxUmr3Wi3b8nd7bLDRnRUKsr04wqJtXbSnUjNU007Ss18KguW7tdNcv0Dr\/wBi1eFLGVIpPt1xDKQTuKNAh8pZI4xu8oSqGnRjhoxtkLoWrO8KmRbDUr0Qn9zdXVpbvMPKXyFSNZHglMXnSIXL73foTIdzr5OPG7DxXNq\/jaawsb2OZLQagsc6Twv9l81DZSuG2qim3MbmU+adsj+SJd6tn2zTr3dpWn6Q0pmlhtUie4iRLc3HlS7Li4VGRo2MpQBXBKMGRwVVgy1HEucuac3H2cPZQSt70\/d5XdecnK9rN2sluclbCOhBUbc3O4VZpuSdODu5aNR0cacY3um43SukyjpXiF01hIJbiZ7kbJZXiRDZu87BLjyZAuyeEupjDTkJtfahURpAnsPi3w7feJvClxaW+sHRTJZTsmo28bXEkCBFYz\/ZhbySTtFG8rBUmtEIdlVxuQx\/OfihdN8Hw3Hie78nS9I0O2lvNRvJpJUtbTTrJ0nuGuWEHnzszuZhDA8s9xO5traN7uYCT8YP2iP+DgCXwVq+r+DPgd8GJvEOg6bBFBq3xc8e+NdJ8BeF9FmlDIBNaXekeMJ7q9kMTSWGiQG41XVY3hGl6Nfm4huF+u4UwuKnUrXhOcXaTUXa99veqTgrvb3rOSVknNcp8nxNWotUZ0pQgoe7JzUVytuGiUIy0bmnZc0V1eqb84\/bs8M6R4U8QXFtbweOvFc9wt3a2fxK17ToLO7+13gvIbq08G6fqt9bahZC3kkluLrUhpOu65G0bWOl+IdIItnf8jfAXw78c+BvFcusfD7xFFqK305N7pMceuBrwNMJX\/tOO6kv0uLpnVXkvLu9bUElQTC+MscU67PxP\/4KQeLviZqDa1fPH4x1lrtnjur9fFMHgKGO4d5ZV0jwV4h8Ta1LcReayOLjVk0mymkUtL4NtcxqvZ+GPjVqPxAtdPsPFmnt9nuIvMMPg+4g8J2asWYhpdAs7SXQZZDkE7LK2PC\/OhWvt6yagqcouKVlyLmaio2alu3JpvW7bs2vdSSXgUZ2aklJyfK\/aPmhKTurcseRaJtaKEFdtqN22fVEXg3VPHGl\/a\/EHhHT9I1F7fEn9s6vpDWsp2hCbbXYtQbXbSR3yVi8Q6fryDbtl1WL5SPmb4q\/sp3tnbweLvDQs9C1i0uEngnvLnTLZEkEnEumeKNC1G+sJsFnVvtkNoTEz78B5FHe6BaeCmnY2+s+I7BGuWiEdzoNreTIwPzZn03U9zhOgcwxE8EpzmvdbHw9p3hh7bxJZeLfEliZAmPNstb02wvUQqUhnEV5CsiOMxBZS8ZUuCjAlT5j\/dVYyjF6tc138aTSfZpRXw++le11dtv141p1qHs5VFOWqhH2clJOVm2m6ko+87bRlZbNK6Xwdov7LPx7u9P1DXI\/hdJ4o8Naw7T65J8OtS0GaK0ukdGHiPTtIh1G1jtNTRJGXVrCMf2ZrForW5trNksZrKt4V13wNHOvh3WrhdHv72fVNKudRaKCw0C4uryJoNJhtxkLpU105NvLbXOyaK7xBcG2uIJAf1+8N+I7qNdcl8B6lqngbxhq+kPKmowEW3hO+vgyLBd3FpPaz2InkSVPOlDi4kJcSK6hvK8U8cfs82\/xa8beGLZYB4d+I2k6Y+veMbK08P2Nv8PPiE0ryI051D7PFbyX+oaiJJkV3FxHIzySYZo2k655nClCVSrKSUVeE4P4dL++mm25PkjF80o8zcnJXbOOngKtSSVN04tuLcKkW2\/ei7xcZKyjdtyXvJaRUev4ZfHbwLq3ws8YXVjeW9hb6u0lxPFeE3Gprf6XNtuF+yvYmS1uJLlSiLNeT2yM8kSeb5cpSD7U\/wCCeOrj4heNdK0271PUrQRatptraxrcpazynyA1vZtBHHJFEskayKsLTSQyQtHGLx3laIfTn7dvwYufCv7OJ+K3jr4dt4dk0DSPJ1Ow0y8hnkh06S4j02KUERvFcw6bIls5ntnQlVLkXIhLx\/mN+wR8bfA3gbxhH4r0XUbSOMXFvqNlDcuqQXDwXNldW9uz7pWS7V2mhDDFwJoGgkEIRlX2I4x5tk069FS9uk6U27Plq8ijNKSfLa7hKPS1ldKzfJHDSwGPp05TioSvOmnK14OXu3i\/eXvJqTb0tzNK7Uf73fA3w68O6N4ftfDtzaWxspFmtdyWkHlukH2YW73FwuWWaC3VVyyu\/AYEmXePxb\/aj\/Z40vw98WfG2jm6u9P0XSpdB8SaHrELiKeWzvdKkurbTLoH\/R3tGu1jj8iVk2RPAyImQxwfAv8AwVWtdT0rQbvxFpWt6ZZalrkelNFbsL\/ULWznuZxZ6hNaxqk8kLafZvG5jjeaSE2bxuLhysv6ZeLPh1p37Q+k+FfEFjDe3LeK4vCutve3QIgGkWVjZw2Au45I4pEje0afyYnXbHKyySxqyGvicXUqUGqFak6VSScaM01JrlnGNVQs25qUfdtJbcru7Jy9OnCpTnGt7Z1ItOdWNpRimlz023ZWfM7N8ye+ibVuS\/Y\/8A+HfBXh6DVtG0CCC7vow\/8AbrmK5urq3dlaZY7lgXMKSlyI14BOchPmP3BdfEHRNPkWFtRsvtA3AxyNbiXeBkKo3byxGRu2gnrnJ5474p2XgT4IfDHwPottbahows7eW3GqaZYfaoohFCqt9tRNyqsshV0yeQrkErux+RPxv+N3jD+0ZbrwR470DUyrl49Gv7yHSdQlA6Yiu4kgaaQhdqxzkM21QQWyP3ThrFU8LkmXqoo0eTDQbhFRjd6Juyau5P3203eV031f5Pm1GVfMMTOMp1HOtJptpvV3tZqTbSfZ+lrpfvP4P8S2OtFAJrdkYqy43Ejdg4JSPYynJIO\/5jt+XkEe+aXoltdRI6CM8A\/KeBknJAY5wMbRuGMEnOQtfz1\/ssftHfEHXfEVrovibTb\/AEy5WaGOVZrJUhYBzh4biGMQXEMmCyTRO8UgG9XZSCP6GvhnK2oaXZyudxliikyD3YAsT8gyeDjK8HhgCDn36eKhiYqdGSlG9p6NNPdppap+tvndHjVIexm4TTUle17eTutu3T\/DfTTY\/wCEXiYAvGMgkBvUE7gG46ks5Y5JGD1O2o\/+ERjOSsStjklFO7OMEEdQMHjJJxndn5a9fisI9gGM46dQeOBwc8EY4G4kcnqKkOnR7Txn057D39ecdAMnGBjJr2ii+t9Pwta3l6NbXWyvjJJqzStZJWvor6LRrWy6pv06eNL4Vhx5ZiUc5GEPfBKgZ6EEAZ44A2lTipk8Kw4\/1IHBLAJn5RzznBK\/LyTxkHrnj1\/+zkBz1JJGCQD7DpgleOcg8H1yHjT4xxsGMHjkYGQAPTHGMAcjGcnIFLEW6PX9Ld79vz7kOCetldaX27LpvZdPv2TXlC+F4htBjAwAfu54GCAwGQCRjggnquAu3M6+G4uB5Y4GOQTnnkAdSW2nABz0xkZr1NbGMAZAI4GAevXjHpgjj8xjOQ2ScYB4zjrkgkA8kHkbhgDbnB5PIqvrPrps\/S3bq9d1bXYn2UbrRLVbJrW\/rp5\/Nt6nmI8Owf8APMZ9MNnkDHUgZwOw3A4GQRy9PD0QGAgAJ9COQM4\/iPXuQfu\/wng+lmyQZ9fm7secbuhOWx9cEdAQeEFkuB04K5wQSTyQRkZBJ5I\/AnIGV9Y0Vk1tu27bfdby\/Kw1BLt03V9redunqr6M88Xw\/F2iGc45Xk7mI4xnJAx9eRyV4K9DNqo9D6kk5GSc46DnpzkZOcADkqfrEls\/k0+8e1\/O\/wAx2S7fOKb3Xf7tuutz4JTwPH8oMK5yQeAC2AMZAGBk4OcLkZzg5K3IfA8KMCYR0DH5cZIGCGzkHPynacA8jB2ivc10+E4ARDknjAAHTk54Gdy4APJPAxgVYXT0zjYg6H25HOAA2OAF6YyBjIHHjuz2Vr7677X1XotP0tb6BO2ja89fJena54rH4KjwCIR0GCEHTsQVyTk4GDnIYjBB4vR+Dow23yxjJzhcnByowSehOB1IwDk4ya9jSwTjIUcZwAc4HA+9ggnvkfKQOu4ip0sUyDwRk5G08YAxnGT1HXPIA7DFZOLtbfVPe2unmt9dtfPUOePddtr\/AKaf1qeRJ4PjQYEZCn0QZBG7qTzjjjb8q5\/iPAnHhKNcDysYG04VT3yAACPTjGOWJAyBn1wWUYPK5GVHIKr0xweM9OME5xxjBwoslI4HGPRvXHrjBPB7cjHvnKErtvl9LyatZaba2t67PZFc+2r6abtdVfy181eyPJP+ETjA3eT0B6qD0zwDkDgHocDAwSTktxnizRGtNPnaOJSwjyQFzyRkdNpzkgjldw\/T6OayjxwoHU87j2AwO+O\/1zzwa4PxbZQyWUyuo5UgsykcHKnGCSV3ckcg4BwDmlyz01W\/fTppbbTe2lm+hXO9k9Vvb5b9+93u7voz+cL9t\/wX4s8dx6npdq03lMJQF5C7QzMNzFuWIJByG6lvvBgP5Vf2kfgBdeGtavHmj3X3mv5pxnJBIAHGSMcbQCT2OTX96\/xq8E6fLp+pzi3jebyZcNt3FWIGec5BXdnud6qTkkFv5X\/2z\/A7x+M9Rnu7cxWqO7qW37ZSN2FUDLhcAA7sgnJB2HFdH1anCHPy3nJuSaTtHWN7rW2rtdWWuivqZe1baT1vZRu07JNeevXdevZfz86xok3hfT5ULiLWdRhcBxlZNN0596FYSR8l1foTvkTY0VidiOVvJPL8Y0429hqXmS7s7ivmDBwGyGIcAuuVYgle2QMZOPo\/48WVxDqs\/wBlidEkB3SkOqMOQArMMkKF2jaCoAVV24GPk+61I6XmSVVnfkYYgAnnGclSACOCBnkcjnGEXaXRLorapJ36PezV3q3rbRK+k7Lo9Or+V+ne7TvZPrY9F1p3mhjNrLGsKjgASK20gZBIHB9CxBGQScHNepeEbfRvDGlafqt75E3i3UVSbQtNnj8xNGs5ATDr19E\/D39wf3ui27qwihCam6M0lk0Xznp\/iae5t5by6t449PtGCqgyftl1jMNoMkKY1BEt0dp2w7VyrTqa9G+GEsniTxdbf2nexCa7le81DUb93Wz03TrONrq\/1C8ZFLra2FpDNOyRK0snlR29sklxLDG2qjFuPL1f2ummrXbVtJu9t9HyyJjNXu9HJrR2UVqrvW9l0TTfW9rH0Xovwb1bxgb3V7i\/MNhbQm\/1zxBqLSzW1ikrM7yXG0PcXt\/clXSx062Et7fXAeNEjhiuZrf5\/wDH+s3GkfbPCvhKxv8ARPC0kiJqksxA1nxdNbSJJHeeI7iHaTZpOizab4ct2fSdJIWUC+1U3Wr3f6IeEfiL4b8V2Ft4c8NWhtfC2jMws4Z9hudUuWCRXGuaqkJAl1C+AQqCTFY24jsrUiCANJ458Q9K0C28SNr02lmSHw7Z3utyROhaGW8tFVdP3KrgEQ3ckd4kcm5JXt0hkEkbsjOcYx5eR2i9NNW9tdfeUUnotG95rZRpxT+Gyi3f1WmrfS99bNrXXVaeRfD3w1c+H7WXwTpF0tn8SvHekPL4m1qQyLZfDr4fz25vNTsZ7mFZZLO8v9MX7f4wuo4jdWelCDwxZrJd3usWl16N8NvDHhn4reL9G+Gumzahpfwq8Fy\/2he6jPAi3+rhrizsdY8Y6tCflbX\/ABFK1jovh+2kM0WiWEulaarGxsbu6k+YZPiffeENI1GGG387xb8UJl1LW764ULcaf4SW5Mmk6TDJIGkSLV54\/wC3LyNT5d1ZroJO0wE19DeB\/FGmeBfhro8rarZjxX8TPEUCQvAFE2maFp902l3F1k\/ce1t5tYjhMh8uWDX3nCvNZQvGnBT3WkUnbVJ+9Fwg7vVczTnt7172cIscZWdlG9k73TatvFb\/ABXak07Xk1drlPtCXxq+v\/tD+CIpbJdO+Dnwh8PXHxTv9AW1eDTF8H\/DXTReeA\/Cl3Crk2ukarfW\/hnSL2OSXcmpeLdYdmkmuCJPjfW\/2hNX1v4rQ+OZr+8ur3UfEet61q2ozEq+p6hrl9falciONgFitbaa8dU9I0CFGKkD0fRPiTcT\/Av45eP9XuRFffF\/xboPwv0eEbS0Xg3w0yeNvFSKNwZbZ7tvBMABKq3lKQhKDb8A3iya7rMKaJK32eyuFfKMFaRstuwBg4YF1J4LBicblrzqqkqi57ylZylK0bOVZp2vbReyjSkuiTlbqjqUrrmi17zSSs+eSj7Ob92ySjJ+9otb\/wAuh+n+jfGe0+Ilv4k0zzW+23t20FnOxCBJNUihe4ZSGIJiEkwJVcBooip+ckd94a8N2k3ifQNZ07UIxNpOrrFiIhZLhLe1uYbOJdpBVTPcK7KCQXiQjJr8\/fhvp2qaRp9hfiO4jcavLFcOdwEUenvBPPKx64dJoFydoL\/Lvwcj6f8ABviW5XxB4XGnySLZ3GqTSuyKWe5MDvC8qn+FHnWR0HWPyi7Mu4ivHxGHU6v7qUYyhytNWs3pZNaWUZPlb\/l3u739OjWcacZTje6V1d942V9m7NK7vpa3VH294p0b4jaJ4faw0TUdRurTXorq2uLN7y6a2sohd3F2lrZQo+FQ3c1s1xsT92bSOKNsqxOT4b0\/+yNOs9P1e1RlutQS5vb4Dzbd7m2hFvHbgqBG67Gu2nfGJp2YxMY4A7+e6h8YvFr6ZrmmvBcDV1ee006zj3FoIri2kklkAGCkjFMiJcyJbku5HmpVbwB4s8W6z4I1DRdWsJ4NRtYofJLoweOeS4cGYkjJ2SzLuODhJTuPykVyYbANOSq1I3m04uFkmo2laSVtbPb0d+j6auLp35qNKcVFK6k72tyqyTSs5OLbtra1o9\/tiy+IVp4as9MXwk6x6xqmhHSGuURI0gu3v4UsJ5HDAtELkJ5y4WRXImVg0WK9K8DWHxe8ceLrW48Wafd6fb31pa3t9IBILa21Rw9pctbyquxorye2e4UMFUPcBg+GDHhv2Xfgdr3ignU9bt0nsWNrJDDMpJ2pIJzGQekiSqVXqCGDE7G2n9gNC03RNMsbaxZYrWeKFYAsyAEdf3an5jkufl24wp4OSN3p0cPJydOCi4pxtJp2mko8yUrW5lKzTTbV5LXRHFWxCSjOTlz2l7qtZJrRtJ3d9bapK95LVM\/P34yJ8RvA9np994YnYz6dKWmYIN01uSihgQVWfO7ZLCQQ8cmGUKzKv5GftAeKtHtdQuPFcenrEupSNa+I9Dhnmtjp+obXRzY3MeZbGOcsW024QSraPKLaWOa0mbT2\/ZP9trxonhP4ZeIrqJoba5sMNbSMFI8oiRpSOQGUsquCWJBDEFfuj+Wfx58btT8aX94xijnWe4mt7yNct9ptiwCNINysJkG4o6tuLEqzhW3V0V8K4Q5Nb2Uoq+msmpNO103ZrZX3tszCliL3btZ63srrRWi0td9WrWbfR2S+mbGw8UePdT8PzaDdz3ek3flwnVIbqK2vUWFghtNQtTIJYdWt0EazwxSFJsi4s5bq0ntbiX9rv2dPhWfC+h6PqZS1u7sCFZLy4EslwUJG5WOxJWI2ZU+YRx8gBOW\/J\/8AY48MSSX2k3tvJ9shvrmANG8iAKqvGxhv7OZomSWCTeIbyIyOPMkMbIs5R\/6TPAGiQrotnb\/YVglgtIlEyRRu0hULmSYGMJI3JAOxQzAOyZYKvzebupCKpqfK3G\/vNSvL3VyppaaKTbe7W6d2fS5T7OK9rKDlNtRvFWUVFK7bT6u1303sr2Xrvge8tba80zMc07s8JENvZalfRJ94M7xrazeSyMgVZriRIiEZH2oMD9PPhZK8otX+2MUaKPyoJILS3uCpOAJDBHDgbImKpA4iRlZXiOBn8+PCJ0y2EMAdZbzchgspYbYNLKmxtu\/y7iNQGCcLDOoX7sCyDj7s+F+qXU1tbpqMH2RlZDDa28k6JHvSBhCZWg0+N5xtwyx6UX8shSJ7YrdS8GBjKU2lUUm+WaUXVUdFFWlJNw5rvRSTfeKs2dGYSSinyWSTi3JRcrOzsotc1ujcZNO2rvv9gabfLEPKQINqgvGqgSKMkA5TzgQz7SokMbN8zKrArXSf2rLGpWdZoRsJCQkMxPOMxgsxyByCoBXgo27nzOwmVIY5HlWJcsiBriA3BcKXRVZniYsAr5QSq+1NwUKryVDrOuR28EriZxgru8ySZ3J3DywkcPLZLFHBMagAlzGQS2uIrTpQkpyceW8rN8qSXV7efZ23s9Dgo0I1ZR5IqTlZLdveNra+nRu63TbZ6Rda9EymNGdSApCyySrI2Bt2pEAGJwQyPhTyChQdeUnvYYCZWj8wuu3IMrOFDqGEbBtrEBgSk2wDeAXYncPNP+EosY4f+JpExkkYSvNGrlokbhZgCsjo+Cn+rbIztLqzbVzrrVWaCRrGzEyOzrHdeW6PEkoyM+YsoEh2lJBMYHXaSjwt5gT57E42Um3zxdo80YxjLmSbVk4tWT16u19ex7eGwC2lGcU5K\/NZJ7fDNS2vra1+V6Lon+IdfjbUHUX6pbDdGhKkxSsZFjZVuN80ReIyMghMbSKRnfGWBrmfttmtvK5t995HHGVZbtGWeKNnJuNhDSoVzIkgQGPahZgVZscHrsl5CbeOfULdDNcBN5LIFhOVYhY3KSNHC0gkQvDIkcgYs21ca1hf2lqtvZXt15U2\/wCd7Nbq6juIHPlqXKtL5bMHDsroYmVlSSRJAJD4vtZznN7LV3k77q+vM9LN7rl7dbH0So06dKkl7z2aipJNRaSk3Hlck2ndNPe+iSNN\/Dul639kvrWBpY9StRYyzbjLH5iTo8DNJDMqCSLyZowyAbVI+YB9ow7zw9cWd3cWMtqtzHZ3s2o6YfKyssVwp8yEFk2hkn3MZBA2VCtkuGaPU0bxNpNjd3VvDdyQrEyyASoZUhmLsSqLEFl6LiRjFuRD5zNJt31q+JfE9qJrO5V1hdoJy8qsrRTMNu9xtc7MONwVwArFg20M1ZutThBSbXMpcskmrdItX21aur2fRavWlSryq+yUZOLi3Dmu2k7TTSt\/Lo+TRJ30TTPJpPBBa\/1XVL1r2e7ZEsI1murnyVhcSSMY7d5ltGlka5CmbyFuZI4\/JZnEMai7Y2VrYWc8GnQIbhIZRc2YUjzJypWWZVAAaQpG0iKxYsC0gG44O+3iW28+S3VUuf7Tu7e5ivI8otvMFAQ3YxG6RoQ6uQse0MCQxyTPrVg9jHPPp0cs+oXTiLy2ZFBdmc+ZaTh5EaPhk+aF1+VhIFDkLtbD1KbtOypxs4b8zTbttrdNWspXT8rq08TCcYyTvOS5XfljypRWqekVdNPSOq5na6T8+vdBs7q9nS3kW5lvtJNqsDXQRJoIcXIt4VxIIXMjtC6MHJkVGVlz83SRWt9ZaZo0lnaiCKz0a9gZmVmnSeMrOCoI2sVeEICSpYjAwxOzjtalkskW\/wBQs7ywH2mC0mjjjC3UT+YoF7DNETvdN5E8YZDtUTLiMmUfR1p4bj1\/4eWd\/a3pnurLdJ9r2Hz0uIWN1ax3cUirII7+BjA+FXzeGZQNqjzqeApY320aCk6tKKlyXV3Bcqdr3320Tvd6JNHfXxtTBRw0q9pUa81Sc2m4xqODi3zRfLouVK6fS3Nuvlzwjq1l41k1u91a3S6SP7JrFjb3ZTMU88TWkTfKP3Rknt5JGlbc0bb9hOMV55dp4gfxkmvXrMosI713hRf9HvLy8vY\/sEFuAYJHt7LT7eMAqGXzHbcruqldT4bW9xpvxH1TR7u9SDS7sW0FjHNCkcu621e6kjSCEggRTm\/jhO142IV37gV7X8XvC95ov9mx2hhXTo2ae81CWdLN5NUSQvDa2+4sVeSXyLeJtshWNcZBKgePPL6saVWVSEuWjK7S1cpXspWaStFrdtrR9dvXrYyFDGU6FNwj9YpR9jzuXLTpOlFShFtK8pu6lFcrlLlktVdeU+NG1yXT9HfV4Lh5jqMl1tgJjt7eKztZiXulKszxySNEBAu9nlXayrjhnhmaWbUba0tVk1S6kihQTJE\/mxyTsjSvcbGEMaxwQlVt5HJcrhVEQG7P+Kni6fw3AuizXTJqGn6ANTvI2\/fTW51ZQsFpbKgBmurmJ0lAm\/dqhZgyqqkZXwf8Uu+gSavFdvPPcWGoC0e\/jjhjtZoE+0TaheJCkU3+kJHbW9jD5e54pAVVhMWPk1HTi5Q5ppzlZ3SbTlytp9rcy5VK7u+qVzsp+0lh41Y06ajGL5HGUlB811Br3W0nGN3aSTivictX6xaeGZdM1y+0\/S7Oe3Wx05DPKHYxTaprE4tnLGKQBmtYvMBhX92m6VgECcfQ3grRhd\/adSuSILbTIYrJrydIwWWBkAh00B2EQYxQyN8x8gRlpdmFrK+GPhy5i8HTatr813cX2p7p0YJ5d1eNMr7IoY5MvZx48xNsmJIVMjuVIIPtOg+HU0uxXMbXl15EaW9nYLizsYZDKUiNw7lFkLKC92++eVw05aICS7k9fA5XKrOlXlTfI4uryOVmor+GpKCu07cyUfemklHlUnI+azPNlGNagpp1IzjQ9rBP33eDrOLnfl95yTlUbjBSbknJKD8B\/aP0PQvEXwh8aWmsafbalYyaJciPw5dvKlrfPBC0tu+r3KRSXCTNLDA8QQLfxsYVtnsLiRLl\/wDOK\/bE0HxvffGC7\/4SG8h+xafcyS6F4W0zTdS8OeG\/DsBRIJ30jw7eabpzRLexRQCPUdSjHiPULAWdxri\/vIZW\/wBNbxZ4am1XwZ4otFuZbLU7rTbuOFNIit5pdOklhPkzm8uibea4t5FMi3B+1w7lYSwMiNAP4e\/2kdGt\/AfxM8VeHLrwjpni4WWp3V1qV7498ReMvGWoas7zzeVf3kGmweCEsbKZWWTT01CC6FyZPt1xe39xdOtr+i8P1Xh\/aO6i50kuTlgpNJtNv7ULu3NTSgknFSinHX4fMYQrwSjFzVGqpJ87sueMbct3aV0n+8fM5q7U2nFn5U+DdHvTY2zSWbOI0XLGPaqhfvHc6jHC5JG4kk8c4r6j8A+J9M8O6np93eavkReWkum2Q825IBDFchgIcrn5sEH2HB3td8bXl5ok9p4V8N+AfDV0I2RLKPwD4WvbKVTllS2u9Y0zUtShdUIUGa6kYqx+eXlk88+Benalq\/jGL\/hN\/B3hW8gur5oLGxtfDyaPq+v3CyhZYtPk8O3OkJHBCzp9s1OSJ7e2WQKEuLl4bWX1q1OElOpKcW9+Rc6s21tZK9tm3o27a397ljUk5xioW5WktVzO1rPWMY7622V\/Jn6bfBXxfeeI\/En2Pw14YsrKwvER59e1NY7kWjvhBLcX19jT7IvuBXZFvdypjDtsSv0h1Twb4P0bRoJdWkh8YeLDFA8drfSNc2NvcSriJjbqyyNFGWDxqTFlQvkwyRt5y\/n5dWVnptnYWnhazm8Oa3YcWq6a\/wDbPhfwy2AJf7OtLryr251dlG251W5udVmhO1FaWWNI7P6W+DmieJrKOLxfrd22uSSLKulrDNNdky2yO99rF5FcATh4CEgthdRotzfyxoxkVJBXk1OSUrrllNJfEm400rc0+T4ZSWlk766L3nY1rKpC1TWF72umpSba5YqcJOOzu+V2alzXstPVLvwxqi6JqC+MLu31C5vrNbiHRLeKK2t9Nsnl8mJFhtVhFnH5kqqqx+U8kzwhWOLg28ngyeXQdP1GDXrsXll4g1SAjSr3UpRHpmhaXYSmMWFyqfa4Z5ZGubmR4iC00EZhLO\/m10vizTb1tDmvriQR6izC61S4kb\/XXoBP2RWG\/fb6dC\/2ZY8hmna7kl8yRUceXeL\/AIheE\/D91Hban9ju10q0tYtYTCpKqXumWVqJ0AZVWOKeC3BYkZkmRWYqZUHnYjByxMkqXPOKXMk2+ZtuzbbTtJa80Vonbl5krvswuaKlFRq3jeSbaSskmtPds3ZJarXRO+rttfG2+8L\/ABj+G3if4deI7vVtQsPE1pqdl5F5G1zb6bo86fYo7dIoXhFtDLGAtuJpgzCTzmVmiZW\/l48a\/wDBN741+GPif\/winwQibxroLwpqTatpV+sb6M080nl2uuiJlS0vUiYMmA25lYqVIbP7kfEL9rD9mz4eXOmjxVoWo39tfbbiJ7XUmhtpMSGNIyFuMIzqZVaP\/llMvluY2Tj50+Lf\/BUHwd4R06JPgr4Y0bwfp2o3Wn3JNtFBPdXoSxhtdR0\/UrkqzedI0ayw3PmMSD1HmBB6eRYLOMvdanhqfLTxL5p06+tKM0klVpx0vO11aLSabbUrXMs0zLKsRClz8050XdSppQnFSlGUoueqUZOKd3Gdmklyt6+yfsT\/APBMb9ovxfP4auPjJ8TtK8M+BtNmtpNR0rRQ2reNNctIREfsTahKRbaTG9us9o037y4jjdi0b+XFt\/rg8B2\/gnwH4d0y1S6+yWOjaVp8enaOkiM0VnYQRWlvDZCM75YVA8kofMHmS4wN+0\/xsfs9f8FLfGM3g7x0zeI51u9K8EeKNeEzSIJ7W4kCWmlTIxTB26rdIsCNtyqBcgOQ3358J\/2zvEXxP8NeDhqmtTW\/iK+g8KWthqks2Il1HxFoGusMRByktvc654RhnjUoN+oKLc4E+01DI6lTG08XmNSFepTdWMIU4xpUqKj7Cc0ly+4pRqRbbvKVrSaik152LzqpVoOhhYyp05KDvKpOpOV1Zcz5pRcYyjdqEYK6Ukrys\/2a+JHjbxZ4o8S3lzBFFqWgWTmyvPDrRRXDrol3K0un67YJITDq+lXtrJGkp2RvZzxyxO6SQyCvnf4xf8E\/\/CPxf0lNY0C0TR765DzRqiyppcruN7RjajTaVN83CMXiXCr8qgvXvH7Mwl+LWnaB4lS1Fo97ZnVtCjY+ZLpeoxXAtfGngu+c4Lw2mqQXV\/YK7nZZ3Vmq7Au0frv4N+HNvBZQbLVIY5UG6HblN2Bldm0rlSTsII+XG0Kfufr2V0KFTC0pSS9lOnHlh9i3LFR92y5U4pJq976TUJKUY\/nuNxFWNSSpylzXak\/ilro7ed5JuLaunFrRqK\/FL9lT9inxT8J7+CC7u9Rlht5YiLPUZGv4FU45tjciZVjbaAklsQhCZTKqu79yPAPho6fY28TQeW0UKjCLhAePujJ25B3cHg8nIG0drZ+DbGzK4hjCcbVKf6s9CYzj5QTyVB2lssRuII7C209IQqqqgAZUheOpODjAyOTkDaeMNhq9SFLDUIezw9KNKN7tRbSbdk3bu9vwPM5ak5c9Wbn2c7bK1+VKOl3q1ZX1TsU0gwAOOQwI\/DPqvXIyMd+eTSeT6DDE4xkY45JIHBJ9cAjqckkHY+z8EkqBzztI+XAweSM\/KcnnA7HPSJotn3gD1BwD0PQ9O+CAM54PUBSWbKFOT0\/BtX0S12S6qy7mZ5Z4IBHA7Enk49sY69jySBjoGPGOCMg4HHqeQR1IyMjOeh5BBa6QB3zx2HXk\/wBOnUnjHFREjJAxk59x1xyBjGTke+0+nAJ01r9+qWtkrWfRJ\/L+buVzFkHHHQHOAe+R1yMZJyOWIwMdKQxkDpg4649T1B54z3xjBzycg2MHJBGec9Ohxnk46g5IxkkknvijByOOTjJK9fyLdAD1xgkYPUMEOmmrLfVbNbba2t6t67Le16\/lnHUnrngLnnBHTjB47YyOuMFvl5GCD1BAzx7EAjjkcgDpxz1qzsJ\/ugjPIBGfTIOQTn6njJJBxShPpzjp2I5JOSOTjHfnGVxkEIdN300v3fpr1307WclfqUzH24GMA5A+6GyRgAdMkdAM5JJB4KtFenHPAIxnbxkbe3BJA5zkYwQ3BQCp7ayXT3ovXZbr11W61ueCbQep4JPGeASfmzjseNwPBIBIJzmQDGCME8cZHQjnjBzyenHGTn1ULnBI5J6AYHTsP05PB4OeafhsYG76gdjyMADGBgAZyOOrHIrzz1BATz2wOxxgAg8AHOcfXtjk1KpODznryPlxnk\/nwM9CB6DJbtOAMcYAHoQeCRnJP3ckHAIOMggGpAnsecjOPRsYySc49wSDkZyvEuVrW3bt+T2327d\/RB\/X9f10HA8rwe3fBHc57g4x1746EUucZyOcAZznBzwRjB44A6DHrTthO3hucAYGPQcgnHAIIXIx6\/KSQoTuGDk88kc5IGMgZxgjPHyqOMkgVm7\/ADvbW+l2u2j1smn2irLpSffXprbuu+9tNL6eW6idvlwPXOCSc4445J5UADJx0PHAHmHjbUo7S0k3tjjOQ3OBuACgc54XOMnaMjkgD024RihABBO7qfmGQRuJxkncSTgkgHIIPDfK3x6v5dK0O6ujK0YRHYkNtONvHUEDDqARyCcHGQTUKznG7td76b6LW7s2ttdNfIq7UW0tlbqny6PtJ939z10t4r4s1Owvre8SZ0K7JCQ7AFs7i28swIUkEEjsCByDj+eD9v7wa2oXkt1pVrLJP50kI+zx5WMNuLH7pJG4cE5XA4GBuP6faZ8SpNc1+807z5Z8TOp3udpwwBGcjoQVAJ4OBsIwBxfxd+Gtl4gsJbx7SCVyjsznExG1UIKhg3zZwF+b5cljliSPXUFUprXRpWa17a66ba91rtuYNpNSlon7rvrbWN3FJt36O3nv1\/jG\/aG8D3dhBPcXscqyJgO7g\/NySACAoUYwQvQdT3YfnDrNrDPex2Mabpp5\/KUMMYycu8jEHakaq0kjHhUUscLmv6Ef24vhpcW95qcFhZu64fazoSo4J+QKFViW4HXBPzBRX4t3\/wAOLzTItc1a8tf3m1NPtWfH7qa7ZnuJkxklo7SFoGz8wF2DwQM+fOi4S01Ss9b9VF9dk9tV89zpcudK2q5dersntv1enZXttqeCz7LyWOws0C2VkpgtFUYMknWW5lC9Zp5SXc\/MV3KoYIq476x0a+0DQyHikjuPEwhe5Zg8cq6Da3IeC2648rUtQhS7lDKpdLCwkUlHYH0D4cfDabWdbtIHglSwQtdalcCMn7PpttH9ovJEcgxieSFfKtUIBmuZoIgdzivoq4+HzeKrma8eyayQ7I7W32ZitbOCIQWVnGQpBjt7eOKFcgEhNzbjkCnB21aTtZW2SejS166q\/VJ9Fqow5rt6vS26XTd2+Vl0vbY5X4PazHpkQgtgkErKPnCvvYr\/AAkNwchycZyTzgYyfZPFHg3xBr\/he9uGUvbeIr6OHU7pI183TvCuiwy6nrl8jNhfNWCGZoUI3PJbrCpBY5yvDHwwn0fUIp2tmnX5SRgxr8rKuQQMdQ3AAIUEngFq\/R2NPDknwO8Z6VdWNtZ36+HtM0SB1RRI8moxy6jqZDgIYygtFikZW8wpebGLBth53Ug7q92k9Ojsr21ulzJWW2+90r9cIO1nZK3Kul17qstm79X87Pp\/MJ8UNevtc8Y6vqkMDWQu7z7PptlFu2WVhBi303TrcH7sFnaxwWsCYAWKNUXAxXo2oa1aj4meCNDkmZ9L8F+Hb7So4lYsl\/daRFrO+4cglZDcyWqO7KMttQBX+bdyPiqOyT4oWVnKwNlD4o0+KZ4sYNsNUhWX+EA\/uc4LZxjk44osL20j+IWjxw2f2medZLZ55NxVG1eO+AY4Uj\/Wagqkls5J67QCoyfLTlpaVROV1u1bVrs+Zvfdb6a8yTU5dW5xd7dpKT6db9Gr22fT6V8cT6s\/wn+EujaTMtrpOuzeN\/EF4WZvNN1NraaWyRrn5A2n6Lp4RhgbXVeSmTxHw9+HPi++vrvVNIguPs1iqSs5XCttcGXlsBnIwMYyQSxxwT2UUlja+CPh\/qGp3LXd1ayeJtOksyXNvZta6qksNuq8iMSx3CTllbJDdFwCfbfAvxc0LQL3TLDUrA2ulTSCSc26fu3ZzxJKXBPleVuVxxhVzyN2OOtKWrik7xja7ttCCtZWurbK22h1UqcFaUptNctknqrKL1dvdt5dd3du6+IvFV34S0X7DfWSRxPeQXUswVsut4sQuVBxn5pFiV+D86NyM19VfAGDwlING1i7aP7HZQBoSzZCSXU4ZsZB+cZZSxGDh+hB3edeNIPAviuwFzcta\/2XLa+fYXMj7bedZSrCIyjKlkO3cT9yQD5dxAE\/gXQLCO0RNH1DOmWVxIRBGwBETyeau\/aQCYWbJ4II2kBslq86jSjUVpQcJxbi5JtNxT312s7fcnrZHpOrUg3JSjKmlGSTe0rqzut49vKzaV7n6QaH4S8DXPiHTdV+zxXcl5qazvKoQhzKfLd3KjJ5bc\/OAON3OT9c+HPgBoN4L3Voba3itlkeGUQquJFYpNCzMCeMpuG9eM7Tktmvir4d3CadaacPMWSNTHPGzYzsZjLsDZyxDFQGXCjGQoACj75+FnjWWNbzSZZGbT76NHicj5ozI2CikMSNrtvCjhepJwzN6eEy6g0otucVLRyeztBRej1TaWz0tomclfGVt1y0\/KKdrbN7y3bWqV9\/M9o8G3Vr4Fn0ixtLRI4Jp2jARVCkgY2MdqfMGJKn5uGAwxzXXfFjXYtG0abxKLsRGD5pAHIMShDIrsBgbQQuDtU5K4IZSK4PUriz0q0a6vZ1WO3kguUaVwGHzLuZeBsB3K4OEjwGBKkZX4D+P37SJvNP13wZZXAd7kizieN8uRlhwFIIIfcdynDxsoO0gFvU9jSwtOV0lZXhHzsmlFW1u9r6PZLqcKc6srSvKUrXb0ei0vvvs7X\/AL258o\/t0\/tOW3jH4ba5oqX6R3EkUkcO18ySNBiIxOCdx2RNMY2+YZdxv5Jb+e3wz4intrq9uPtDRusxZieUPLFiRg5yVC8hsqCeMHP6pfFT9m34hfEWOGbRbe5ukcPNKoErAs5DHGxWI3A9wflYYbJ5+UJ\/2Hvixps12W0C9fe4BXy2KDy3Z342g\/KRjnJJII7VzunWrqE503dxd3ZvTeN20uvq3bduwpz9nNKMtIuyaaV37rd37vy3fS+h9jfsW\/tCWHh\/W9LTUoPDrTxTwfZZXSC3u5ZC+Cu59md24AFWTALHqc1\/Vd8H\/Fum+L\/Dem6nFd2sDXcELPb20kMxXKbthZWdSVY4beG+YlcBcEfxQ+Ef2Rvi2\/iBZP7Dv44bSVTIzGaJVAwzZMDb\/lHcjCkkkDof6XP+CfnhHX\/B+hxQ6rbJbp5cKSSXd3czuzBSG2LdTvIx3RncwUcg\/L8zZ+cz7LebDutGMr09LcsnGzcVdpWur+aW2\/T6HJMxkp+ym0k7tNz5XJ2tbWNnfp5J+d\/248NeHdKvo43kvLApktsk+zl7jKh2DoxjLhQpRhtY55K7Mqfqj4bf2b5qwLYvciHygNSudUjgs0G6RXjgitbm9luPO+VFtYoLEEBXuPs+Sp+RvDtpcSRLqi3C22m2kJM8qoGlY45it4wGDSSE4BC7VVt7sAxx6V4f8beI7W+gfT7aOxsxgW7yQpqN6x3cP5V1IlrYzuAyrOjTzQZXFiYuny+Erxw1SDnScbNaxjzucdLSjztqMVd3ekmr2a1PoMVTeJUlCondRdnJwUbcr15WpSk+W2j83Fqx+hQht30wbcRqQEDlovmYHoFEpZkCsysucLt29SZK8\/1yaGA7S07RKZm+z2vkCRJdu155JpkLsIhtVVRExIjQbmRGVMbwz40N7DFa6jFfy386Mu5bqSU5cv5Ub3BjttruxLPHa2skW4ARTH5RXTeINJuriwk+QJHIG\/0berkLI0fk+cANyMyqv7uSOTD5QPna9b5hD61F16UfdUVdpyeqS0nFKMVdO1m2lq3ezZx4KX1ecadRtXd0m1d3S1g3fyd7R9Ve586a14\/8MWEjW4F8l9JJJ5lxLdSNFaSq5UefJi3ghmJl2rHGtyJHSRYribynmOTa\/ER9Tt7yzsGudQW2CG7ivJ2hgD+UFiWV7W5t3tn+dFD7NmELhnlLbX+IfhhoV7H5i20t9MHVJLXT7WV3lC7RNCbwxPvDIDM22AooWGItcxqJE5q18LWNlEVitjodna3QgezWS80+1WQNC0SbgHS6l3syvFPDHb7kZIkZXYH4+VGvzyVWmo2Ta5OW3KrXbs+W+9+bVdnufYUquDdOLhObk5RTVVt2knHbqk1ty6XV+a6KV949ms547awmtpNSPmvJp41K4S4t49vlNJjzL+WVSdisZraFfOcJKN0qs\/ld74+uY7xXN1qFrJvaR1ujPBA01uN8lu813KJ4rUx72kjmt1MSN5byxtAqv75N4TurpJr7RodKDTx7buQ2dvcm9RC6gC6QK75BlAjEsfkSsHWFFMgbkk8Cx6xfQSTwTw3+nxzRpNcNcx29v8rxIIbZVBjZx5anyXkRuZJbe7HzpjPD1PdjaalJrk9xpNJx2V735dtFquiR3UMZh05TtGSUWpXqJz5ktFKPK42v7qactG2pSloeWL8WrnT9XMlgty63ske6w3LHazlYxv8AI1NwYbu4RWEtskcciywEkgvsKx+IviLfWCQardSXOh2kDTm5uNSEIt7Z4d26OeBSrDz+gkJZgWK7FYiNPWrz4ZalZWqG80oatHb20kTEx6ZBdxQEoqXSXyFkma1UBUjmEkk2xBvO6Ra9X8MfCrwH8TfDVpZ6zbRaypso7e5t2tkhWWVIwxuFikZdk+0o3ljBkKoI8gRg+VXwFWq3S53GblzQjK8FrJOXfaVlZKyT0tdnr0s1wVGMK8qKlSXLSrTouNSSVmoPXlV+RPWpa+ms4p8ub8B1s\/iFpJ1Kye41Jb5rZ7l49RtzA8ecyo8UxEkIEgLnzIdythYnUFa+wZfDtmNJXT7zQJbiyhjIF3dQW6ZcqzhYZow7gxnlpyqAsSC+VOfnbS\/2Vrvw9Hcax8LvE+o+HJ2hVYlt9Pti7rBHGPLuXuDcl2jjVTCqpbyQFPs7+Z8rj8xov+Cmj+CPH\/xf+FHi6TWbTxf8NfHGqeGY9Y8QX41FJIbSKM291aaa0KyyzTwzxzSI9rBaQwPFNFe3IbyZP0ThLg3H51TWGweElisdySajF02vZQfvVb30je1lHmlzOKSu9fzzijiPCYevLErG+ywUZwspQqxqUqkrRjTnrbnXK43ilFJOT2R+y6eGtBv7IWV61pb2wmZBHJdQ3Qkg2sxidlmfyXiz8quI2VjhGjZmx6X4U0mzsfDt5pcVk6GJFtlnjG1LyAhzAxgdVW4ngUgnDsSCjRyMzbV\/k7+Pn\/BbmD4DX9lcXMniHxffanqCme5ub1dNilgiIf7Db6dZaZEJ0LcMFWyjlKhS+nowceifDb\/g4t0TTPGngrw347+F2oD4Z+L5tO08+M\/Dt+bvUNE1fU4YfLgvNC1GGGOa1FxKEZ7e4a4WL\/SEed8RnapwjneUYzESq5RjKLw1Kcq1vYVoqCVryiqvtkuso+zc1q3G1m+NZ5gs0w1GlQzLC13XqRlRhKdWlJ1Fa9nOCpy5to81Re0dnHVJL9VNX14+EfjZFPc2TO1peyxPpVvpsX2i8lvtTtV066vIpCqW1oYvNmglhRo5ZYTGzuYwtfT3x40fTPEnhUTXMQgjLre3Es7StDChgBEJh3KIrkuVjgLKx+0sZDwgYZfhnw34L+Lmr+FvjX4Mni1rSNXg\/t1Ly0nheG8iksmfSJGkeMXX7u4mG20BDRl5XXy02ln\/ABD8RapqOpppNxEUuY03xafMXSzVhE0MReeRVhufJuHBCMQsBZWaJiquPjcwozp4OrOpR5YYptUmkpRd5ScbSio2blJpaXWy2aPsaeMhi8flzoSlCtgaMfrTk3TnGUeRSpunLmTcXFtJtxUZR507JHydqvgm58VatH4p1KBjf6Zpd9YT2tuYpo2vb2xVtHiuIXRZ5HtLR\/NigiuIw3ymTIZAeX8H+Dta0aOPSM3UU95qGnRXtw9p9olsI5zJeLBG3mPbrM6xRpPKGVbX907O5jCH65svA0+m6E4jt7kzNHPc3uC1tPfa3ewskLJIVM7vIQyxLAqJAroI1jSJd\/U2Ph3UNOgs4IrBxqktwJbq2ht1xdXEy26OWmKjalvCGknZt+GQFwTGcfBSwVV8rlTlZ1Fb3XJt3ioxT93mulpG7k1dRvsfVvNIQ5owqU2uVQim4xVOMG5tyT50opyduayV4KcuWMr+ianavpumeAvDsX2gy3d3FPIlvMu66t7aFPtHngEzJp4EnO6KWORihmZGeJW+k7TQ4ZLCCJkSFJIw84sxchndQu4TSICjmTnAkYF1GAoUNX87\/wC2z\/wWr+BP7Pdxrx+HXhjUfjb4p+GKS6Jq3iDS7yHTvhzper3NysV9YLrsUd3qPiW60+4ieO+fQ7EabC6COLWJ5EuYrbwD\/gn3\/wAFe\/2ov2u\/iI1t4q0yw0nSPEmrInhTwzodrBGNNsP7U0+KNFvjayJfxT6c1wls81r9qNxPCwvZXb7QP2XB8I5zg8BXzHFYF0MNLCQq0aNepTo4l4WjTjKdX2MmqkVL3rKcYyndJX5rH5DjM9wWJxGFwFHEqWIjXnCtUhCc6axNeteMXON0+SLhd\/YtK9kkl\/TL8WdQ0\/wp8PvFOqvq1j4fFpoF5K+o6nshS3\/0ZjF+9FzbRRys6qtrHLMm+cwhZShZW\/z\/AL4y\/FHw14q8e+IbeXxl4aac65rN7d3N\/oGtiXU7++1G4ubrU21fRvFPxXT7ddsywXV1p91otrOYopdQ0C1vEnkb+tL\/AIK1fErWfBP7OWv6BYzadb6j4kjl0rWNV1S+1GO5sNBayuRc\/wBl29is1\/rOtTt5TaTocd\/on9oyrcKLq4ns7q3uf4bofGTanfzW1\/bnxTYRyPCt14gW2GrspODcWlzpZ\/4lbMqJ5dtBd39jAgEcYngVEDy2FOpGtONNQipKmkrtqytaV\/hkm2klFpW5pJJpPKtKpClFczk52nL3YqSSslyy968Wk21Ll8tnb1dbCaFHvba1tNa0ghmnfw7PY6qY4RgFryO3uJtT0+Jh1lv9IspFHRQxwvovhLWdF0DU4L3z4j4m1GCGKXaRGfDmidYNJ05SN1tcTROJJmRjJFC7l3a6up3HjGl6HGkieI9GuLpItPYSxxPIY9RtLoKNkSS25jae3DnL3cDKywjEsaN8w0NM0fUPEWupd6vNIdSnmVzr8MRWe4kkfe\/9sQQ7Y75XkJBv0Rb5CAkpu1BUenLCRdOdk07K0bpx2un1ae3Le6Tvazsc0cVKLjK8ZOLW0XFrRX2vbe0mmm29IrRn6x\/Cv+z\/ABCdOtY3XyJYzLdzBTKYbO3gaW5nZRt4igTcBjPAAVSwz9RfD2yu08Va14gLtbafo0Gh2Gj2cZ2xW63T3t3DbfL8r7Lm2tZ70scXE0MzOoeVkPyF8C\/DWt+FLYLqwxJqdpBFBscurWEk0M8lxG6q6NBdRQ+TGTtEkcki8EMK+39Kn+x2GqBAU+0a3Zx5zwz21rftjJx9xboFSAMZHAZufn5YOSqNfzS+K99Ixbi07LRyV9LppLTSy6q+Muvf0XKrLTq4tuN7NOSXd8t5LTUp\/tFfESPQfhvqv+ivJef2ZcObqwZLe6adhl3dTEbeWXGHcfuC6K5MgJDL\/PD+0V+0pdaP4pu75dX+0ReKbK2N3Zyh7O5ht3tLf7UI0ndrZpolaGWHybqQLdRxk42nH75fFzRF8QeCtVhmw7NZTYBAJbABzwdxOUQDPAAPA2kn+Sr9tzTLuLx2lnaLKsmkwTQqgBAntWnkl81BhSZIHYpKMAtEYBgCElfoMmw1KVWUZpc1OOkru7TUWlr6N6W2VldWPIxdaTpqcFbVJ3tpdK+lrbNaX6NNas8J+Mvxe8Q+L7k6Vf3UhNpNMtjIWcQQXTPGBcxNIwD6bqYRDJJjZaztFckxxeYs1b4b+DvGvxJg0\/S4oLloYZd08pVyUXeu5WLZIICkHB3EvjODk+M+H\/Ceq+INZ09ZIphMs\/kSHDFZ4S5MDqSMAojG2dCcGKO32g4kx\/Rj+xJ8C9Hg0bRoLixheeURPcO6jc77kYs3GCAp2kEnJx0ZVz6ea4+GApRVNLmUbdLRjs5JNvXaybs1e7ezzy3Bzx1ScqjahFO7tvblbja19EktLa2Sto1zf7Nn7BHjG++GvjLV5mmhl8WyeHvDiI+9PL023v49fuQjAjKK+jWlpNkKp+0MCcMa\/Tbwv+x74m8K+CdETSpWivtB8IeHLi1mg3GSHVdE8dalqlrKMKW3JY6zcxxuoJXcABtbD\/ffgGfwh4X8J23hm4e1tBbOUhBMcXmXUkTeeyg5dt4CR53YO0kYVyK2dP8AiHDZ+LtU0HYkumrpMCQSBQFUQHTBKrMDgqZHkOArKig7sgZb5KGNxFeTqynaMl7KpGyvetNe7JJaXjCNJ2dmopL3dvWrUKFKMlGGkW7P3ua0bbrWMU230est3u\/0a\/YU8HeINCsGubyyMeneIXtPFVvGEZVsNbu4I01cQEAqsV3crdh0ATIa2IT5QK\/arQWieziOwKwClRyNuFLE88ADgY4znAGM18Q\/sx6lozeDNC22yYFuojwucBtkishHXJLbt7E8HjOBX3NYeSqRtCMcD0J2kZIAPUY4yD1ODksBX7BlySwGFsnf2NNyb353FObd7WcpNzeiu72R+fYhP6zVSa3ervdrRq1kvute1k9jc2qeDzng9MdCvGRjBxzxn1Ixw3cBleMgMMgg4G4\/Ke+Ccgf3ec4bIMe45VwD0UEABjgDAbgEnBwRgj+9z0JuGev3uc\/KAM8D0J3YOMA\/liutK34+V\/P189\/Q5\/6Xrp+n6D+QxAPAPA7dsYJ5GOh6ZxnAxk1pmGBg4APUbgckDIyBhSB13fMDngA5L2cZbOcgN90ZyODnjB4IIOMYJIz8pYQO25uSRzj5RkHjHAJ54JxgAE5K9dzMcd\/Reltuq9Vfsnd2umVmGDgdOwzxnpg5P05xgD8AWbeRnjJAByTz2K569TzjJ4ByCKnwCD7dcAepOM5Geo\/hzkn5hjJQoDyecA8nB6k4yOu0Z+6BgnBwecBpzPSy6pW289NNdNLaetmmR7ckHOQcZ+Y45J4yc8g9e+eBmneXwMkc4yM8cnv16j1AODxwcmyiMTyCDkAluBnjPyqBncM4G7A5ySCuRtuGPfIz3IAIO4jGcjPzYGQQMt8xZghySVrdFot3KVklpr17rTR6EGwc9DwR1Gc8c98Z5AJ45PdQQioMr02567jnOQAe4A755Iyyj2lZh+PPXCkkcHOG4BXBYEn5iWX5ckgPzYIB28E\/eIBBOAWBAJwewI6jao20Dclr+jjsktravdWum73sloQFTwMDAA7jGe4HcZUdh1xngcFTEHk7scEE9D3yFxgjJ424xggDnIopptf8O\/0aBavqnptbvFfy7q1notFbzPAAMkd+p6dOPx75A69Oh6VKFI9OoBPGP4epxk46ZAA7DA20iYwfn7HuOMA4PQ5wc4ORwRjb94SqATnaedp4OenTtkD5gc5w3cY2g+cdn9b+jvrpbdd1bQAvU4AyB1BPRjjOQR6HP47eAamVO55656jBxjoDz24yDzweopyjkHHXqM5PU\/MQegIIHBJOQT2FToo4PHU85AHy8ZIAGemOehwMqBUyW1r6NfLpfztvq+99NC4ra\/k1dO32f80trefaIKOercAZORxjGAc4x19uRgjklCmQVIGBgDABHJ54Ax0yOOg284HNzaMcDHPHPOM5wOpG7GRnqMDg9Wso5\/Q5Iwcnnk8YJyPQ+vSp5bu9uiW1mrOL67W12221skrtpqtFfa6vZLWz+fn5tXvmTqQjMeMA8N64wR14P3vu+wbB4r4m\/agivbvwxqEVudgNtJs4YAHYcgEjnI3\/AMJZQCTgYr7jlj3q3ToeA2cfJkjOOhHHOcEjIIzXz58X9Cg1DS545E34RiVBBOApGQOOSeGB3A5\/2gDmou8buytvtZ+7okrPTo+q12Jk1a17p2u\/Rq97pq297Ju+jP5w9JtPEml+NJxHLLGr3bluH+YiTlcn5SHC9SyhDtGNxyPtEX8I8OAXbhmMGGZgTlgobDFiCOhILLzySprL+InhCLQNYvNReOOJEd35+VSA4b5iwVeduWBU\/dwNu5QPhj4z\/tOab4PhmsvtebhFdVijfb0GV3AAbTkfXa4OCGyPWo1IKnGPMnZJNaX0STWt7J7ppaLbcy9k3d2Ud0k20lt7zXurmd1pddt9\/Ef2wtF8O3NldTzJbm7ZmWP5lICnd8vPzEgDfnPA2hmZipb8RfFPgW21WWS3eFDA13LMFWMcZCRhQMZKgRgNkYzgdSWr6p+L37QFz451RoLm6zEkjFQDlEDD5QPmJYuuMscE4z8pbavn3hiPT9e1W3eSVPsVrIkkuWXY+0qzglhkruxlsfwg\/wC1VycKrSikmlZXb1e7310u7t300T0SWlOM4L3m5bavz6JWVrN6a23bu0Yuj\/DjR\/CPhYyyWsSy6jEskreTyLSBw0Y5AYCedC5GVUrDEQTkZ4OPXtOF0bSygj3cALHhtxJAA+Vdo5zlSwwTgL6e9\/FzxXow00aZaXEbSzpFCEVgAkMYRVQjjEXCgIQgARVONpz4d4D0bSI7tbu7aMl7gENww4cK33hkYIIHPBDY6ha5qtJtuCa0tqr6\/D6arR26vdbG0ZJO62ur2S1V0tF8vLRadD2Xwp4RutdtknW3WNGwGbZyFzjClhgMDyOMKFBOABXuviT4d6pJ4PfSbS0UDWJdQmeQx\/vSxt4bIEMypgI1udqqSgLHGC21fR\/h02hRWUYjVQIkDStgbGIdWXaQAFztOQAzfKxG1gpP1V4e07R9TvNIhuEiKWthBLKh+d0a8Rr0nDNtz++JDZO3ClxgHPBPCuMr6NS3eyto3aV7WtF3VraK97pvo9vy2d9rLezvZN3a8r9U020u5\/HF8ffgT4q8C\/EG8hntJsSal5kMohJ3bphIgRgFAZQRkjByQcDtyvi74M\/EHTmstX0\/Q7yzh0m4eGW4WByZDZ3f2izcvtIC+XMkSOchvszEE4IH9wtn\/wAE0vCP7Tviax8TXli9npNtLEzMlsAJmjYtIy5i2l5CAC2\/JUuCRuFfaL\/8EW\/hD4lsltb1LmKCRY1mRcAT7Afm7KrHcQAijKgqcZIZzw01GKUlZP3W30VtVdelt9LN2aSWKcOaUkpJt2STT5bb3k7+XZtJp2uf58fhXwd408T6XdaNDpt0+maN4igvFuJopM41dLK3uRbnZtcyeTDJIoz8gMm5UQsfozUPgPreoWt3p2gaVqGv6vZafZW8n2GylaHT\/MLiRppViO+Q5ePaOSRgn5QB\/fbon\/BHL9nzw9pVhpWn+GbaOKGe2lu5igkkvGtoWt1LyOAxBjlbcxCZAbCrzn6m+H\/\/AATs+AHgGBodD8B6JayXXktfTCwgea+ePJV7l2Tc5j3MUBGEyQBk5aXhIStzVX7vKm0nd2itEnay6XknZbK1hqvJKUVBe8rNyafe1r6\/ai3ezTV1q9P83W7\/AGYf2orjwx4e8K6X8OfEN1p8OLmad7SQBlvOVjJKgArF5fllWYAqxBIwF7TQ\/hn8Yfgd410vS\/Gmgakula3pcdtfK9vceTbXf3Ukk8xAUkKgeY5Uqys2Tw6n\/St1f9mfwBHatDF4c0uNYIgsSRWVumcKyjb8vQAjaCAF4JDE5r8vf2rP2UvB9\/az3moeHbO+MAeRAlmjSxiLc2InCrIrLkYXO1lO0nLMa0eHw6b5ZyUm4tXtay0aUbJu\/V9btp73UalRtNtvRJdlFWt1ej0ST1tbS+38zHheA2ekWjbSETY6KxOApIJXfxgqAR34JUEHBH1d4H8Q2dqLfzJF2xGKbzGwMDjcjAZCncvJ4K4LKcbgPJviroNt4S8QajpVhG0dnHO\/kxFSpREGFXK\/cZM\/MM9Mn5ureKp4vv7eG6tbfzS7RGOM5ALF2OCM5PXGTuLfexweM6E1Rqtt3hJb76q1raX066+VkdMlGUUnvHy1W26vpdWT1631aSPpH44\/tBW0Nre2NndpiCBlcxtxvEe7AJPCghcA4xtOANuR+aHw\/v8AUviT8RzeX5d7JL1mHDfON+NxyQpHykDPAOMlVJJveJfD3jLxDqjxyR3Ui3swQlg2NpcqCePmJUnkDr2wDj73\/Z6\/ZP1TSF0nU7yykihnMdzLKYnIVT84DAnJByoAIzjnHzbjEqssXXp3XLGMk7O9r80bN+T1u+t72aSFFxoxaTTbv0stUmknrvqlu2rJ2td\/pn+yj8FNP1nRrW4u9Mh8sxrjzYwxGRgYBToQwJVsYPLA521+gb\/sv+CLqzPnaHYNIY3GTaxg\/P8AMSBt5BAXADcgnLMcVzn7NuiQ6dplpZQW4jWBFjJyo5wo684+4ucEZIw20ba+9IbLZbYKL9w5CkONzKxOVOcEn7u3ByXyFDAH6Om1GCikrcqW2vS6v\/KmrbapbK7PCrXlVlJN2Wqd9G3Z9U7XvdvXyslY\/Ni9\/Za8JWP2822kWcXmjc5S3hjLhvv7jHGN5LY6thuWYkE1wHh74a6f4Z8QW2n29hFtjdlWKNFiUAMOd6KAEKjG4DKjcwxu4\/SrxLbLDbSsqYYc7xyuACADwQAQdoI4ZjnkEivlLXYbaLWEuQwEpIVyzYGDJtYDpkk42nHUE4DPXDmFNTwtWFk26ckr3s9tNbqz26\/mdWBnKFeD5mlGcZbxvpJa66t22aaXXRb93ZabHawQBCrJt8oQQgqkMXWVwoA3clg0mTxwCQRXX+D9J00TtMq+e0jtICzOqRAKfMbD4UK\/BL7hkEkqABWDpgZogWKxpJCWRiAAsW3Ls4JzllIycOxOEBbGKw9c8TanY3FtZWkyW2nReWZ1VSby9eRyIIX4KgCUcRop3E9mNflWMpU6NSM2nJQd2tG1J8t4xe1na8pSV43VlJqx+jYWc60HTT5efq9E3eLUn6XdorVyejS1fWeML3xPpl3PPpd3qaIzxiOLTbhbJGUFdttDMAZJQoAyAxQgqWjkA2r7T8GfEesa3Zm01BdWWaIu8oknje2aEkqz3N5timwBtIMFjGsryBI8XDFK8h0+9\/4SGGCKF1vbiOQGVNyiFXYkyRs43CSNQG86VV2yhSYf9GBlufdPBWn3egyx24hhjtXAMsUcrQG6uGYyGWZIGJmLFn2JPJMscW4KXmd5peHBN\/WpVFWrSo1VZwndwV27JNaRtJNNLmstOXVHTi+X6tCk6VONWG00kpNWive2u3subVSXuvR37LxXC+m2VzDpdqstxMBLHsWWJZpmKMv2gSjy7iGJ8lRfXMtuRGHEdpMRHD4FpXhPSLK9ub3xJb2urancSxyLG1lPcLbNmRYla7vNQjjcxlzJIIZzckbjErRQrCPrS9aKaykREVJPL5LeTujLBiRFvdESUCTYsnJjO4hRkg+QavYx2UEyPJd6fGHaVjHcbneV3MfmszGONZXaSNlXmeZWUFVV2Na43DSjUjJpShCN0ndU+3u7JvXeWitp8TaywOKbhKmm1Kc0pSVnVbSVk3dtRfaF7uTTas1LQJji05\/siWSwYkRrO0tBbpHOscZZ541leYFmYTBbmWR2i+eTzC4K4Hh\/V20TVZUmgt49MuBm4Usl1DKQQEPlacHu4juJjjZIJ4lYMpbcHeuB1m1uJ7JrfRL6a1jaZXu7\/WFn8gWUBV5LeyWRtLtvMuEZbeCV3lVcrd3MepTeYlYkEF\/ZXYS3vUMLwyo62NtPLC9xCg2JBI0VrBnYzbJoYI\/Pfy\/35YiIePXxDjUg1S5FCUUuWScW9Fy2tdxS3jdJJtq9rr1qOHhOlUTqRbkruMoy5ko2d7q6UlZuLalK0U3HWx9AeLIrXWrCS4065tSXhkiuLYzSWV1A0qApFGty2wFgxVoyizkDc6s3yDx\/S9QtLFEv7B5tF1bR0+x3EEV0lkL6GIESLJFc\/wCjGfLsWzL9o2qGBjVARkW1\/PZXt1HqF1qcmmzSsRaTQwXLXMeMgM15JewxwGXJLSvZFEiEe4MF22NX1LRU05jFod7qTyXBlaOG0On2aTNtzO7S3DBVjdSJFtLiSNdzSrbSKJJm8XMarqt1oqNN2ftIqV5ScWnzU7aqV9W72bsrO6PXy2l7FRw0nKrBzg4TjFKCjLlTjUc3GMo2bjq4+WqaPrD4SfGfRl1J9D168jWSRood1zPbjNxOcIrOAsZa43RCIkecW\/dlZoSskf8AKv8A8Fx\/2avFPwJ\/asn\/AGqPB2kXj\/DL4saXZW3xHudNt57qy0HxJpaRWeleI9Q2ApaWGo2yx6Zf3TFoLa6tbNp3j+1QtX7N3urrdzFpLC7sfsph+z30Fzb+baMu1pYYL6ErFHalZHV7G5njVSoRAxfaPpfT\/FHgT4w+B08FfF3SDe2jQz6ZpusT2EwF5C0MltPeKl1bmNLWSCQ293C8OpWl7E80dxHLEXRvqeAePsVkONoVFPkr4aXLCXNKkq+HmlGrQlU1VOekZwnJqDqRW92n4\/FnBtHF06s6dKdXD4mPJiaNPlqyoVVyTp16ME71EpJqcI3lFczUWrs\/gd+KfgT4a\/HObwb4g1bWo7C18NCS71IRvGI7tIQDHGDAZYVWeVTMreYHcCMO4a4AXxzUoNN8YfEXwZpHhGzSHwx4L1vw9PfzSmJkv7mG\/gktNHsNhRru\/u0t44jDE8wtbaKeeeRFUqP7Vdf\/AOCNX7JXinU7nUPCq\/DC2try6klls9P0WwTzrmSSO5Cvp2n6lb6O8yMC8gOkW1uAAHhjAAq542\/YB+DHwK8PRjT9G0LxZqostqedptpNbxzGJPJtbWKwRYLeSfBeOO3EcgUqsXmNtjb9izPxEyvG0sbi6eCr+2xlL2VepyxcKT5YwcpVIzfuuT55cjfNor21j8Jk\/BkcPjsFSnjlUhRrKdLDqFWnUkubmcf3tOEYySbinUfue61K6aPsL\/gldpdvpP7O2k6CZWdI43vrSK6AjuLWykVjBDNv5LR\/PFEVBQCNTGDs8w+s\/ETQpLrx9G6W87fYbiC5iWNg9rIrxTRx+YNySTrFMyShXkYzuCiARozReUfsE+JLPTtJ8VXd2LXRdL06w0yx0vQgzCSyNtHO1zDJbpJJNG4llEbgqWmY7lkKgivc5J213Vr3Xr6N2j+0yfY48X3mxshwgjjbEcarGpSIrkhmEpdZWaRfyrHToY3KoYelBLmxFacVDl0pRq86k\/i5VJSTSfLo2rJWR9s6VbBZ9j8TUb0hSUnJ3XtK9KL9mmkoylCN4zalJKUW1L7RtWpYw2slzJE5jv8A+z7RVQALLHEEke1iVpJFQYmhFw6Ft6yM7ZWLd8cf8FTPjfd\/s0\/8E+v2pfib4blvoPGs\/wAOb3wP4Qn0i4kj1nTdY8e3+neDbjxJZG3Zr62m8O2PiK51s3dsqzWI05JzJbBRcx\/Zkc1jf6pHO8wW30uG22xPsSNZpcRW5gjOJFUMjhhIB58jO7edsQr8YftYnTNZtdO0fx54etNQ8Kand6pYa5DrNxaXMcAu4tNudOe00h5ku5DcalpcNvBeWUMs1hML69mihtpBeQ\/HLF0smxVHG1qSxFPBVKVX2Um2peznGUnKUotRVnZc0VFON20lJv1KGAlm8vqkarw8q8JOVoxlK3LKpCEIOVNzm3HmcIvmlz8iipSSX8IvwN17RPHvgi58DnTB4tufF0CaP\/Y9q81xqkmpOix272ekxB7m7lkCxQt9kjuJ2REjjUrEfL\/rH\/4JCfsc2fwK0yT45\/E2wh0DT\/C9lEdO0mR4nNldaZaefpWjxxR3DiW\/s2A1fUZLRWjspIrSK8ntmlvrK190+AXwV\/ZCsPEt\/qXhLwV43mjsxEt7bf2XrOlaWurrbLcpBrWqT6fZ201iLovZLfC+1C3a8jcyRWSfNPs\/HP8AaJspdQj+H9iLGyt9It7bTtI0Dw1Ld6Ro2i2cocSw28R3pe4iEC3dzJLp8nmeZZeZMIpYYPtM\/wDFarnWBo4HCUI8ypqlO0qdWbpwcatq1Sk9KPOlKUU3Kq4uHLy2nT8HB8AU8pxtepiJ1ovSo51qcsPb2seS1DD1XKXt5U9OfSFJPni5SVn+cX\/BW39onUPiXfyKI5bTTI4Z7bTi01xG8VrcSy3UAmlMtmLNsqlwbfS1hn1iKfNzc3whjaT+XSw8QXieKJtK1EQu091IqXsUaWxQFyXkm2LGjqqguzzqZdvLOAAK\/oL\/AOChXhhvEnhqzvbKNzIls+xYgyxwB4lfEcceAiMwB2oqgkAP8xWv5zpfDOv2Wq3TXcM4meeS28zDblgRh5sgIwQJcxxZIAMYmT5iOJ4daq4B1aklKpUlOpUk3dyqS5bu6SsuVRVnayVle1zzs6ahjI0qUVCnSpwhCMXtT1Vndyb0e93a+6SsfUWj61NcalbJp7SJZ2rJDaYyolQsC1w46CS5O6R0b+ArEA6jn7T+G2g6c89lfX9mizzlPKKqPKEhI\/0maF12FgTlEDKJHBLKUJB+Lfhhpc81zYJNGXYPEgDA8ADpk5zgZyO5w3TFfpHa+Gruw8PWN7FDudlRw3IwRtJ+ZnwTtJ24A2nqCQDXqVqkYqzfLzbb6Xaslfpa3rbqrHlx67aK+vS7ST1d29Ol3p6J\/YPhz7NY6RZwyTLeW+fNRXys0byFS8lvKciIkbty8wueCgOSPX7K8t9T06wNg3nA6veTSll8qdFFlpsSpJECytsO8LKGKncORk182eF5rifR7eOXKyKIwPmIYu6gHcd6gKpkBBLAD72SSDX1t8O\/C4g0u0uJjiT7ZcS5ZuB50duo7BeTHg57AKSd4NeNPExjLkaV3FrXlSSs0m+qbu7XTts7paZyhKV5tq7km7a6aJWWiS3V42uo97NVr\/wpe6rpV1GIy6yQNHjaxUZ3RrgcBeNhUAkqQGJLZYfh9+13+yNLeanL4ont2i8t5ZUmCjIjbllJAK\/dGGXPAx03Mtf06aPp+mNprKFUNjfKoACsQqkEbSNuSOFK5GBwDkD4h\/ay8MWV\/wCDdVaGNMQo7swRQwVcuWA2lSGPzHBywG0oCanL8RVhiVPm0lJKWrScbxs09OWyvpezu72Tu+tU4uHJKN0rtRlZJu0WnpdNPRJ\/8Ov5k9A+DuiabqlqYrOISiSL\/liMFsgFwP4CWBB527gcDaBj9h\/2btCuNG0yC5EXlxwwJiUgjaq4wVwAQdmArjODvAOQoHxd4X0BdW8VJAEJjivPLbIAGFfsS2OmSTnlcDgAg\/rJ8PvDUVr4etrWBUUPbr5h3YUgjadxyBt6IBzhhu2qMAzndfmmoNuUpWTu7tapqyT3s+nXqtz1ssg4UpzSSTahHlSSkpKLk21u7Nt3v7z0dtHR8RavZ+Lb6w0yw1YW1xp92894ElKMI4QhY4DkMpQOx3Dcm0vx90avw3+IcF1q2s6fqt0hvk8mGKdxhs3mpwuocnc52phOrEHDclsH5d+KOg+Ifh3q+o+INKkuLhpBM8saF28i3dSrKQBgPNGQhwF2A+Z8pGaf8Cp4\/H+rWcrPLaapc6tbSEMpBlhs2ZpFbBDjM0kbI4PVQMkDBihhIqkqvPLl5oqLd7uSadpSVnu7rtpezV3y4qok5UrWkoOSvrdJPWD7yaSs7pNO+x\/Wn+x3rMt14W0iCaeRynkhMNuUfK\/8Q2gqdqkHrgjsAK\/VnRsm0jO5nG1SCRkEAKc9CvUfMAcYyTkE4\/MX9jLw7HD4S0dJWTfFBbhJVK4ZljKMH28K67sHPB2sOTkr+pWmwRwW4XAO1RjaewHIHIyNpHXggEDJDAfsmFi4YXDx5oytRp+9Hr7kbW8rPT57n5tUfNiJyjeycvda95Xdmt3u9bK1ra72NQFRhcEbgAFK4zgc8YwcLgNyQOAcZ5a5IBVeAin1zjDBecHAzg57\/NhvkbIGVFX5gMBc5JPGMkjBbHXOenQcDaaPNTdjocA8MGB56dcDPQk4x\/e4VjuTbV2Tf662bWn+dr36FcnPJXLYLEheoByCQMdGBBPQgkEN0MRDAg7c9AwI6EkDng4C8553Y3EH+GpzPkbeBwwPzDJAPQFu5XuQSSegOKpNIORkfgT6459OTkDB7Dk8UFu1nfTZ730jZ37LbeytoWEjLEr0HUE9sHgHkZyTyRzzjA4q6iIFwcYAGcg4POTnPvuY4PynrgnnNjkAGevBwRg5znOc7geenpkjJJyuhvz\/AAn7zKQGxk4UEHHqCCpHzFV+UNuC0GctWtb7WXVNW1Vm99PX81bAPA5LA9O\/ON2Ogzjbljyc9FqsTyQcDAI6H1CnGDtIycsOhJbBz1fJIOmc8jB3Haccg\/L8u7JB7fd4wThahcYx34IIIAXJB4PBOe3AHG4As3ANX1av0e121por6q9lpaz7Nqw8soPPGSM8HoVBBwB34GACc\/wnOQoOeCGO4jJxk8ZI4AbaMhgSGPQfeyDVc8nsAc8g9DxyOvGAeg5wCcHIpC5XIHTAHUgE5zkgDnaBngY5AHXICHJLye6veyWmi9N0tWvh0+xYL+\/QMCcZ5VjyeSBkLu\/2frxRVYvwRk4xx269ABnAwMc7TyFHA5oo9fwfp5ev+WhPtLbWVkt93tK+ifXRLpZW038SVTzx0BxwB69c9Bzu55445BzKoKk8AcjGOMkn0GcZJPqTnOc9JVVR25xx8rYPy46k9xyOSfTqcSBFHQAEf7PQ8Hrjr2I9AvOcVxuD6a9+ltu72v8APXqdik157adFbt\/WvlukBORnsOOFyBkZyBnpjGME9e5OZ1Y9OTyegGNwXAOenQDjjI5yCTmMKOSeyg\/dbGQSMHGMkDJIx0OCOpWVWGSMDOOTjB56cDqMZIPKrkgYIzWbTT7aJ+b8ra2XzT+ZrGpbTe\/S9tbrfe2m\/Rrz0U4GPw5yRycg8c9SNvzdx03c4DWwM8jJyAODjk4PXtjpx6AjHD+uMYJCg8j+8M4\/3RyDxxghc01j0PPHTaCcYY\/QZI+bjPGMHA4Lf5\/1\/wAD1NLrflsr21vq2km5O2j2Sv2fWyIHPBx7jOM84IPAPI6d+eQQMYPA+KdNS7tpgYxLkfKhUHO5TlRnqSQWAAXOc4B4PeNj5sg4yeTu4\/gOemACe38IOTk4rNu4UnRgcZIwSc7eFzzjqQADg8DOMnkUkrW9b2dnbbT03WltGwb0S0TWjWrun1e9np1u277M\/H79qLw9PDp94YY2RysuAsarzzgBQhK5BwQDgdQd2M\/zDftY6NfWmp37tLJvYsdqlycAkBWHyheSdvOD8pbHDP8A2tfF74W2viHT7xxEGmeNsZXcQSCABkEYJwcgDHHIPX+d39sP9mK+ubm9eGxKpG053BCQQdzYfphT97AAOQNw3jImTcYyau762+7Sz\/y+V96hJp8sr2lZJ9EnZ282rJ6tKzeyR\/Lt4mmvLAzyBpgzMSzZIO3ng4PO5sFhu3HOd27KnnNG+KeoaPDc7ZZI9hKDDNk427Mkd2YEEjkDAxgcfoN4q\/Zo1m\/urqCDTLh23ldqxMV43ZYNwuwknBwQFI24BYt4frH7G\/i97eeeLSbwRkMwP2eTaCCcnITPPKgqTwcFMsQeN42vSd1Bq1r2teyWu3k+923rc7oUaUkm5JXSettbpctlrv1uvmunxjrfxLvLq6nunuZZHJUgGQsVHLMccAZJHTA6bQcZE\/hH4r3S3dlb3Ej7UaMZ3Mp8wyeYSxzyFI5X1PPrXQeMf2cfF2iz3KPZzr8rjY0bA4DMGAKrySx9R8ozhWyB4hL4H1\/RdRjWW1nRo3U5KsBkFNxGCQNgBJGODncATirp4\/4eZNX1s1K9\/d0u9Fe61vZea1cui3LTl5drq1tb2dk1pa77aW12P2T+HHjb7XolpBDKoluUiUHOWLSMQfmABDAMoAUgFQT90cfdfwL12+1Px9eNewvJpf8AaGwB42ZFhhcQwxAMNvESxqFG1iMYDcKfy6\/ZctrvxBrnhvTQpeU3lgHiO4h1MkQYkE8bQQTn7oYHOK\/qo\/Z8\/ZN0q70qz1OfT1jMwS4dkiAYsdu5mYYPDZ3g5Pyht3Kk+j9Y5nFpXi1qmtOiW9302v6q1muWUXF2V3a2u66aO2umjVlZ2bauj9A\/gFq2hQ+GNLt9Kt4oY0ggjEax4ywTcwY5+Ys3zZJU4bGMEbfvvw6sE9pC5VAWjVgAF647dgACTjOMAcsxAr4Z8K+Dj4XitdNsBDbxRhIzI4bJOMHhF9VUbANpBBBUAgfVfhHW49M0+OG9ulmkQ7dybhzuAGVJ+XHCjBAGBnPzEqpJTUXZq1lK72va1tdbvTu927bSrtapPVdVZtWut77K+q136HtsVjCwVgMqGA4VRgFVB6Zb\/ZAxgYySoNXY7CHOduGB4+VRuAJwMEcjpwT0OG4JFVdIvbe+RHUqQR8u3uCO+OfcAhTuBJy3zV0qw8ADAJ6cHoMHB9R94HHQDpgYrJvVLbz07rTfrd9L6Psrju20lpporLtvdeqt5Wa0147UdMV45AQMMSMEAnuB7gE9echTxjt8zfE34a2niG1u4J41MLrOvzp8wJBIIIBxuIDEcqPu4GMH7Fks1IO5C59xuGfTI6cjA9QPU8cVr2kiWPaI1O4t8uOAp3Y4BAZucHPcDkgkDGabaad7OzttbR6Xb0XVLpfZFxuvX9bf8M9fTa1\/48v29f2WNc8E+KJdf0PSbnUdK1C4kM8kCPIYSSTuKqmfmK8EDJByoBXLfFnwr\/Z31HxXqtvJJYyBPOjLJJCyPhZVTZtKknfwvAVhkspBUAf2AftC\/Cq11rRbx5LW3vCyyKUlCkRFgSCu8YIAwuQdw442gY\/On4WeAvCui+J7qC\/gtbO7jnZWhKLFGW8whtisCXZQCSFwCSMKASTnGKbcWtU24\/Za2uk3ZtJrVd9etjaUpcvMm3dJO6baVlFu\/mlZXu9NLWSPnDwd+wFoeoW2k6hJpUQIA3o0Ycg4ViTuDBzwMMACS3HUmvuy2\/Zv0Lw54IAayRJba2yrCLnaqFcYKDCsSQCuMsVIxkk\/W\/hrW\/B2l2C28lxaLt25UkAggDGAWPy5B4zjdgAABmXM8feN\/Cz6BdJDe2+PKbgSpyQMqpG4jcSwAAZT0AyQKjlfOpRTu7XeuqXK7d7prS1+qRkmmpO97rZrvbX7rvVdU7nxr8LILXRb+S2GEKTMEXG1srIowoLEDkHBIxxhQwyD9dwXEU1ugQFiSNwBGeVGwkZA5BUEqAwBxgeYMfmDrHxQTR\/FczWc0YgecLGVZgpQbgXJBOFBIbkfMTuVcBcfSPwl+Oml65etp89xFJPGfLWMyqWGAv3lHOQAWXdyFUnjgn26WIhNwpJrmstFa2i2XReTurLVHFVotKU+is3ta9ley676322uj6I8R2Xm28hEbr8g+UKo42jPzEKQGXaTxkIAMjbgfGHjmTS9L1OFZZsBZhLLE+OVMgfLRt95dwGfu5GVAOSV+0\/EXiCyj02SZ9ijy8lwRszg4J6jkbmZWJHHQscH8e\/2m\/Ho\/tqK603UPJW3nUymFkdSyTZbexc7FIyJFRiuMHbhgo7lSVSnNSjzJprS6d7JfPR2\/DrpyQqyhUhZ21imnZp6p67766LVLdO\/vfdcW660Fb6GQs8w8uOEEsCGUsuAAMlwqAgAZLEBdoK15\/c2F3f3tmk6ExOQl3Iqu0ruzPmCLa3R1PkyOFPmR74Yy0Jl87N\/Z8+Ilh4n8MafBfXcM95cfu7WIyIWKpH5at8mAfMIYghSQwx8sYDN9A6v4dhsraGSFC97dz+VEgUhArFTLJnHJVNy5LAAMDhcGvyLP8BWpVqk4pumn7y1ak007JW15m+VJWe9mrpn6bk+OpuMYyS52lFO2vw2+JJu6ScttHa2ljA8O+H2sHi+yXUkcrSrNIyu6QDZgW9umGWOVUI3yNzGZAjKxighkfrrv4myeE3El1IuoXizx29tbcIGeZI\/LREw\/mSvIFG4tnyleVtqxnHA+LNbbw\/YWUsM8UsiEKY0J3TSEhEQdPlR8GRuijGPutXkus6sktzcSThDc2V89w7ZJEMbW4DKHOC8kjEB+MxQlkj2ngfLVcYsOlGmnS9nJScm7QS5bpqLTUndOSi3ZaNqK1j9DRwMsSlOb541dNEnNtySXNJbJ6K91a7V2z6rtfjtbSiVppntbm4vUsbaIc4CNI9xKqMu5stuQ53EiSFG3dK77SPG1prX2mGW6id4wA8qlLaPTojG8kbXNzLKjorMJQMKokkidwQUyfhPwTrVtqltd3Or2TRrpO9dKuZgImvp5ttzcCAsHWQQspZJnDRQQwSyONyJBNx\/ia58VX+kRpo99c6bZtrEl1eRWCvD9oQTfvLqZ0bz5XMcYto2nldoIliy0klrbiO6Wc2hCVWUq0JqUoU4p3ajJczlfZXn7srOLgk1HVcuNXJ2604UY+xlDlTnN+4m4qaScUnskrSs07pv4k\/0A8TWTwSW2ox6xHqrRROEea1Bs0BRfNYiMQz3ykBzBLL5Do25tkq7NnOWk9jLBukjtpL+WF4zcR20kUDJIFbDM1taRfZGdAsi7psJ8uH3Nj5X074sTRpd6Tqk7C20+Cxgs7l3\/wCP29fL6hKQCqlFaTYBlc8lmG9a958MeI7a8sPkminWAQ3YIG5mTe6SBJNpMYLg4A8vGSDzyvWvqmLnKVF2Ul0k5csk+R9278l4t3urOOljilLE4RKFV2ktdbL3XaWqVk4780XbV2k002er6L4auLy0ndpJ3lB+Y2ZBlijco8ibEllKxiGQvGpWNXUxnfIN9dPonguDULGUCbVI7hZ0EiWrPOySMVaOOT93HMBtMeVEs8exid5G5qxfDGsi4Y\/Zby3trVJVT7LawSyNMWKsZN0c4WSQAsET7PtaTbmYJsjk+oPDDaWVSZY4reWRQpS4kj+1zBT954oi43hWKq2MoGG+UF811rIqFammmnaLinLVyvZc0Wp3S0srxhLV9dXzyzqrB35muZxlaK2S5W1Zrl97ZtXSaut2j438a\/DXWNEuHv7aZLewCnyg1nd3tyGdSsn+jWaLcvG0gjOZntrK3VnXnYsT8RpN5Jf3BDtcKiBLaykjiQwbo3l3IZ4WttkcbsHklKXMYZlWd3Lxon6Y614X0vV7DepZUZPnMJ2Bxg5QK0dwhZg3RVZyCUL9APBNa+E9nbaXcX\/h+wvZJMSvcQ6ZarcKcMHmX7O0tlZiViAVWSzuC+5lihlJw3xmacMYmjXlPD3VNqUmo1NU7xtZK0ZxTd1D3bNXTaVj6\/KeJ6NWjCli0lV5owjKUEopN3fNLeLezk3JNXbSk2zyLwetvcSXPk21hI8t5KIZlMst3M8bj95cRgG23M8casYJ2ilEalJjMrwtk\/F9pW8OQ2TXB1PXZ5YLKCwLXDSaZpk92plSFZiRDJKUEkr7o2jjVRBDCWmum9Kh0nSrO6ttNvU1GC\/vbRriwt7xZ7K3uo12wiNxIsEcJjkkG+OD7JncAY3j2xpesfhnF4lul1UsuftWb+AzX8tz5luuEt99wLe7uTbyGIo6T\/abd38uN95UosBgsTTUaUedyk7Si5SjF6Qu3BJppSTablK12+bdvpxGOoKosTVSUIPmg+Tm5pLZKT1Sls+RR5mlFNXcY\/Inww0qXw142urSbULrw7YXMFok+l2hkjUaqZp5UtpLZ43TUbV0uzevdPHG0MsxRLy4nWGKP9CdI0NdWtEtoGvIYlNxCFBuPtMUqACRY7tI7UW3mtGzJcRtJEGLo8lwQN\/50fGP4cax4K8T2uu\/2l4gtihS3sDLJHepZbpfJmgaW5haO0n1Ka6fUpSftFwZ9OQQS29tdtEn6Bfs6+LnvdJttOv1Wf7PZxWw1VFuJZLhPKBkMkjSuDANoKMzXhLo8sV1IXKj6fA1PY1fYToqCqRaUrt8s4qKmmk0rzSTUtI3ejdkefnUHWwlLMaNaNV2SmoqzVuVXej5+VtLSU5b+81G772HwRamM28zNLPqU9mjXKjLyxWyS4gmZ5VlctEYFAYF0Dv5Plkt5fj3xR+FXhnxDqt1J4ktbO+kuW0GcWc1q872r6fpusaXdJDEt7CS8EmqyzSOhTK3rRzXWG8sfW0mu6JZTzWZcNJZp5oU7SJWG11eN0Ub2QHMn+rOAxcZUMea8SWtnJqcmoNFNLLqGrW8tvM0S3ENq0mm28Ilw0hMUvyGBBbozGeUb4+Q1efmuEw1WhVgvZTnOcU1J3S92Sd1dc2uiXVyt0R4uX5jiqGJp1IyrU+WEuWUbRk\/epNKL5Xyp8kG5JN+5Hl3Pyv\/AGpviZ8Nf2Wfh1resxeE9K8PW9xZf2bpsWh2bWFvdy310LeD7dd6TZafd2tot3jznDvdCW9s45Fs2ktmm\/no8AfGvXPiD8YtV8R3SWs0WpalItgtkmsTTXkc9y5hjC6nf6hqJuHSTcyLLLDdRurW6tAYrmf9ZP8AgtbpUeiz\/DjTtd0rRPFWgeJtC1ySx0\/Vbb45Wf8Awi+sWc9nBc+J18S\/DD4ZfFbwi1\/dx6iLWLw\/8QPBWpWt6pkSFLu0uLmztvxa+FfxT1XwfKmgeHpvhvoemW0cavdab4f+JHg27vYIA4S11q21DwF8G\/hp4kLciW\/1v4WQzz5aW4KyyyFjLeGlQwVarUSjPEOUYQp0Go046WUVSjZXbav7rbteLilI7MVn\/t6+HUXKain7SVWs5SqTlHlcpSqyvpZNtyk3b3b7L9SfGvwnuviTp0WkarYQ6PePHGGsdcvrTSNXXzE\/dyQ+H764j1+8ifcdpstLuw4OEXcyqfhj4nf8E5NT00zas9xaWtsVZ\/3uieKbJiuS2Q+vaFoGnqQdxLHURDncwkBzXr\/ww\/aE8T+J9Xh0K68V+ErLT01CKA6bonxC+Geh6ezGQAtH4Y0DxHYW5mZjghNJ86aUfMS5Of3S8J\/BOy8X+CLZ72yZpbqxR1ea2McjFohghypEqPnzBIrlHHKk5wfuuEcupzoYnDTU06UoOPPGMX71tktGvdalKy00tHRHw\/EeLccRCtem7x15HJpctrptu61bdlZartJv+TG2+B3hTwPrMcd\/42jglikQGMTfCNVVkfLEC5+NttdKEO3aJLONiD8yRkED6PuNW8Kw6fpthp3i3SbtECRFbj+zbybYI23SG18B6x8QZsF1LYaNVQyRiQgKa+5v2qf+CeuoaxfXep6DZzRTFpHxHG7hztLFiFXPLcLsLna2BwoI\/IH4gfskfFzwteuYNP1Fo7VyVwkpXIYY4BJOcHO0ZDEbSWOT62NyLExlKSpyqwWzhur2suW+9ldpJt62asoryKGa0Z2UpxhP3U076rS7u97tPV2aXRdPrHSPECpf2lnpvka0rsph\/sRpryVgHQqz6Z5UGq2yggh\/tmm2zptDMuCC31XL8Rf+Ef8ADzXk0F3A0FqJJPOgmjO4Bd2UZQVbeCCz\/wAI2liOD+KX\/CK\/GnRZIrX+z9bZYXVlQC72n5ldR5e7hsbcHofuksQa+nvCPgT48fETT4tKn0W91O1kCQ+Xq8NzIyRSReUscN6JrXVbaFFbckNnfQwFkQSRyQgxH4\/FZbVjWs6dWMpe7yeykm2rbOTb5rP11vuexSxlCSjL2kJKC3Uo3e1rtW2d07Ldu1r2X254J\/au02\/vmsWvVRlbY6PPGWAAKHKeYSnOd4cAk5+UBhXU\/FHxTpviLwfq+bhJEnsLjcQ6spJUnAIJYHAHABYAErhhmvnjSP2BPF3gvRX8YXdxf6VJHbSzXVpqay3lsCimUtHe2UMV07OchYBpGyEAb72Z18w\/mV8b\/wBqvXvh3rN34UeWKa0guJLSZrW9imkTMhjMj2zOb2NJGAG64toyzsqsVZgjKnk+NpzpSlCdOnJqUVVTVR6Rtypatbpxb929tFo++GKwc4XhPmlHdJcys+97W6+9d3d9NHf1bwvJp2ieI7uZ1Qg37tuK4+XJIwSeVPHIGAAeSRgfRGs\/HK88L6bD5EbJHFHEQVAGM7m6KAzL1bB2cZwOAB+bnh342aJrURvRMkboySkuwUklMnJIGWBzx0JGOTknc1j4\/eG5tPnt764Sab92gVSHwoGFIKnOAFAwVYZBYD5vm7P7NWIrOVWm5WvdNtJfDvrGzW9vRW77rH+yw6pRlHS7jaKaTt7107t3SSSaWzbdj7H0r9pK28Ua3Lp2rWkdxYXcawTG4UkKW3Bl\/egsH+ZBgYLEHcCxFfTnwh8J6JN4w0HWfDMS26NcxCKNCqqqLIWRWUEfMWYvuxtGRg8DH44eH\/jF4Ga5js3ijje4lRkJBwzZwrgHcVc4CkscjIAywxX6y\/sq\/ELSW17QIFuVKG4s3Te2EYO21wvUL90nBIBQMx2nlta2A9jGMabsnOmpwjK+nNFXcH11eq2d3bRHFPF1JwqObjOSjJxahbWybilZL4U2nba129z+uj9ky0uV0DS457ZrZxaxAjyyEkU7TvG48Fs54wNwPO04r9D4S0UQGcnbu59B6epPrjnpngV8Yfsx6tpOp+EtIuYXiB+zQhgrKy5KjayEMco2Qy8kANnd1z9lrJGygKQQwyQc\/U55PTA6cAEEjI2n9LpQ5KVKN72px1dk9VfWyWvyV93qfBSnerUk0029W9HrK7strXW3a7b3JzMc4Oc8ZK4xwDjJGMkc9hgk491VyQTyFHA\/HjrznJHAHtjnpW43ZOM5A4ycfw\/l1A7H16YFyemB+HOOOQOCSQoAwR3AANaCVRppW02s3be1nfXbbZK70skTO+3AGQfmP3RjOO5HBPHXJPrnJqq7NkAEjGDwB0x1HAA2jJHTB\/DFph0+YAAkEAFiAQMcHHPXbkjjqKrOFHLYHqcMcjHTnGSMnOOvJHPBCKk3e2nondW9120VrdLXu7P7NkSxsMnknIIyVz0A6DqTyMgbueD2NX1fjadwyWGB8wwF4xjr8wAGOTgAEHBOMksYbBOBkkYB9c5BGScDJ7ZPB+YgVeVsocYzhiCd2Tk4IAOc4JGMHOTyQBuppNuyJU3om3un+Ttrtqr379dbkjyE9STyGGfx65wTjnA4GSMgt81Q7jxg8d\/lX1BAwABgYPbnJ6Dimk89PpjngklT1zgjgEgemOM008jJ6YznnjPtweh\/n04pEuTfldWdtL7b9N109B5Ynn1B7AdeowB25GcnPXryTPBHXJBPrxnjJBI5J4zj1B4w0HAyc4wTnGAMfXnpz3\/DIy0gFgc4468gbfrnGc9e+CO3UJ\/4C\/RL9F9w8n2z9P8A65x\/X+hTRjoeOAcAEDr054Gc49T0xRQB49HL0I4Bx1BGPUYPIGecYBHP4ziQZPOOTkEnOD7kEDPQAZwOQAACc1T9M5PXHQADrk46E9sZAIHOLCZz369NowcDJwSe5+mD1PFc53r\/ACt5LTft\/kaG8DAJxkbcjoARg55yAMck9Tx0wS7IyCCSOcZPJIHUj7oOSRgEduccCuhJH0PJ9Mnpx04A454GPlAwJwFGBkKeT\/d7Y5Pbk\/3jhSCOgwcqd9HrtpfXv2bsn0fVW3HGVmnfXR+jTi7ffbrfXsShyQRkZ65BDe2eRzgg8+vB6YAxyTnBxuOScg5756Yx144wMj1QAcDIxkAdsL1JzngZUfdHQcDjhC2MgZwOcDBOD35IwR1YZ69QOMRyqzXp016bPd3b36a6WRSk73V+\/VK+iu0rJPW13vfbcgJwCeOQQDkd85APTGR2HPTPU1C54wVBGRySScgAjIx1JHJ+oAwOLDnJOD0B5yoz0ySCM5HQ4BwR26VCzAZBXOeCcjHcYyQc8HGDk8kEjNLkfkkrPvba6S6+S12+8U5K7vdvTpskl+V+122731WFqdss0MiFR8yEE4PIOenysSNxIHYcEk9K+A\/2i\/hpBrFhdHyFkRgxc4ALZz8pYqygEMQVwSSDyAxJ\/QuYBwwGcgEEZB5GcdenoeoOD0xXlXjbw\/FqdrJG6bwc\/K0aMCcEK3IznjLH+EHGAAMEYNyt9l9bb7PTVLy1fnuivaNRb2a2e6u7WbT1teyu5W6en4u+F\/2d9L1O\/llmsIQrTFeUQnDfe+8oZsbTxj5c4Yk7M+5D9lnwu+mzRtpMHzxgENEhzt+ZsDHUkZ3EHrtOMDH2RofgO1sr4u6BRvztCLkkvlsAkfLnHoMsQcfJn1V9Fg+y7BEMBdvyhcYzgLxnHTHGBuxu+8KifLGTck3ZdUm3tfTVb3aSS1vtrbojzShHVLRbN21Sbemt77\/dbqfhN8Uv2GfDGrtdTpo1vJKwnAcQKGClAxDbcZ5UD7uMsy4GQG\/Mf4nf8E47s3s72lgwXe4U+QWwrEFSSgBJUlkG1Vx8oIzuI\/rhufB1tczESQoVJYYZR25ABwOFJVR8xwSTkBmriPGXw00k2E0z28RCRGQsYl6BSODgEZBBGMr0GACQcYqnOUbxjZWba01010s9L6a6lq6W732T06dHsk9VaztputP5Dfhx+yf4o+FXjPS9aS2lS2sruCWUw7vkWORGLFSqksCCcjjaHyfvEf05\/s0fE3Q08MabZajNDFPFAkT732ElUAJAJJyoyuOeFBwqj5fm690jR9U8SX+mPbwI1tdSRlTGiksjlGYjBZgQclgGCKoQ4G0Hz74h6BqHgqC4vdDvZbMRq0iLC3lqzFQZMEYG75MM2ODtHc16FOFGcNFbe7W17xatq23bfa13beRlVVSElJNtvRp2T7PV21Ta00vpvoz9gtQvdH1m2aTT5wDhWzA4D+pAOCckA5BAILA5Gcjl9P8AGNtaTf2Xcm5hKKEErKzPIVOCySKdvBwTknC5DKrDB\/LT9l\/9qCS\/19\/CniDUjJcwT\/Z1SaYEnaVGTv6gKflJLDLBRkrgfpXqLQXKW+q2nlyiVI2YBA+3BBGANx\/eZwSSSR9zIJrKVJwkmmnBvVtLXVau9l366q6v3iFZu90oyTSkrNvW17Xdn0Tu038VtbH0n8OPGF9LeizeNvsgyYJ2b5pVO1RkY+XaNuCxLc5+v1NZymWNXYjLIvAYHAxnrjty3Hf0BBr4g8Ba2LmWGG2ijWRGAkfCoEB5ZiygtuO3AXIHPBO3FfZWhSebaREuCSqjCgYJIyPm3dOcehxjbxmsqklLZbLTRt3stfVX+++q1tuuln67eVlppp+rtq1ffJyoI+6MDqe2SOeScAkfhzjIrOvLeN1LOPmwcHpggkjqODn34zznpWmOB1AyD268ryCGJzkkAHPQgHJBqlcsrIy5z1JJ645LDjnn24I444rkc2mvl6J6Xs+2t\/J+TVqPFPGmhR6hBcW0iBllUI6H7rB8\/MR8xDAEYxzuG7P3lP4r\/tg+BvE\/gI3niLQYZGA82UzW4ckKp3IzBCp3KFHR1YjB6Yz+7GrrHtlYAsWPRtucnjJBxgEkAZwQQN3c18n\/ABg8J6d4t0bVNP1SzM0E9s8cilFcfdJWRCMgE5BwynLE8ZwRKab3tLmjq7aWav711utNNtWlsnUXrZq6dlvbtZuy7\/1qfyH+Of2tvjZpV3dWtnfXMRhlkjy5mGwJvVQoab5WOGz98lidxJYrWR4Z\/bJ+KEjiDxHqclxDIQGEmcKMgH5y7ALwc7UPBG1mIxX07+1T8CrLwbq2r3K2ha0V55YZ1jUDy5Czxg8HIY45UscDcSoDV+Q3izxPYafrIsopFjAkUNgA7CWI+YEE9Bz2O1j2AHbGvGMVzKOtkkklr2Wnq1JWbtZrRsiOHi2mr73u3Nbcrd220+W6W9ttE0rfpRF8cLTxPfK0LzPK0P7yVvlVW3Fiyx5JwW2tknIBycqjvXuf7P8AJr82pXeqWbXUt3NqR2hmyuZWLgnKYKESqmCSdu8EbyVr8\/8A4Lafb681pY2T+a8pikuZVPLruJC7sNwxPso3fxgBT+zf7OHhaLS7UeZacLIJEJUAsQygFicFSQO+4ZUkHLVz0KU5Yn6xJckE9GrKMdo2WvRdW97btO3ViHGFBUopSqNe9Z217tu6v0a6bNOzZ9uw6TrWqeCCmoHbdSWLbvnw6hlyOTwygkZIx8+TyQK\/Cz9pSyl8MarqunzTXkaXk808ZkLtHEWYhljI2lYySCDI3y8ZYkrHX79R6y7WiWqW820xLHwm7KENn5h02nC4IY8AsMBsfMHxP\/Zn0H4rRXX9s2SpJKG8mdY9jLvzu2yBQysxJAZNjLnBZowQ3vU8VSg37yulKyutU1Z9VporXaV\/TTwHh5yqQkoPSUXd9HpfW2l03rtd6Jn4pfs6\/Gr\/AIQL4ieGNNvLq8ls5boQwR+Y5ig84gYmJBDfL8oVQCflUZIr+irTddh8YeG4L+zKSCWy4ZZFZkjljwEwOjkgnkno+cDJr8oL\/wD4J22uiSXV8dYuYbmzm+0Wl5FlXMkWAnG1yQCvysgBDMqhgQz198\/sleHfFWn6Nc6N4jnNylj\/AKPZ3DDIkijZ0V2RtuGwo+UDOQPn7t8tndFYiny00m5q6sou7WvvXUmklq7q72urXPo8sreyqxc1ZaN6p7OK01s9HtdLm73TOn1Hwldaxe2iXlqIoLa3aQQh2AyHIj8xs42sQGfawDNjdhSuOK1nwnpmlXd9d6lcQzPbwNItsjlbaBQoa4nmULJ5pSPIK4Ztu0JG7lRX1xq\/g7UdTnNrYpKkF1CoS8hUtIGjK5RwANsZfbuXaBJul8sdm19N\/Z7TUZWe\/ilkju4oDLJNEVV0fcZbco4w6bkCkMCSCrF2ZVI\/M6uR4uvOXsqblJS96c2lBvlt7qtzNbNS+GzUVdq6++w2d0MPGPtZ2jypRjTV5aON5OUpWStdbuXXmTaR+bl14uW4ht7jT7K1FhbLIbclNhS2MqjM8O\/5pLmWP52ZmKiG3RZBDChqnb+MtNjhjt\/tEUslxaB3RV8t45Wlcy+VG5IKRFpCybwQOQpQ7G+29b\/ZAu72bxXp1p5MGnXFrZ\/YnitRlI4ZT5tvG6lViLWxeOLap2sGLlifn4K1\/Y51248RosjW2maLpbqLjUGRZLuWytIPMlS0gwVlu7uWNsCT5IY9jlD0r5\/F8PZ6nF06HPPSHNzcqUuZwbSuopSUFNSm2rT+NdPfoZ\/kc1apVlGOk9VPmtywlFSbTcp80nF2STak7NNN\/OGpfD+bxNp1zFaWs7Xk1sxg+yKOGdd6zkRsBEqEElnwq7Qrso2qPEtI+Nfh\/wCFOr+IvCfj7xfBFqlloJih0PRIm1W9MmZJYi+oPLa6PDMXjVWjiu7y7jd1d7btX6MweDPEWot\/YtppR0DQRFuWR96zXUATDJMoC3OoTBQrSQwxm1h3ASHcnmV+Mv8AwUm+G\/iX4U2v\/Cy\/hf4Ksdf8UMps5vFni62i1rTfDdgm4G\/h8JzLL4cndUJihXxJF4liuBwtpAq5O2S0qmFr\/v1OEU+VyqRcYTkrXtCUeaUNbTkorR3vK0r+Xm9SnjIxdHkm5JTUISjKai7WU5+9Tjy9YwUpWXu3u0vrD4ffthQXds03hHwjLfQ29kr3\/iTxRqs58O6SzPIQNV1+D\/hH\/DukXIWMHZqN7GiQskszPBMhf6K8Aft1+EdF1HTZfEvjrwpfyi4WzvNE8DaAPEBFxcTwxQztrVnFPoklrHG8rnUdO1nXJLwrKwntha3Kn+STwLrPxN8fXMknjDxR4i8WXscUvkya3qNzdWemwmQgW+mWMsqWum20bNstdNsbeztI2kCqsMKstfpj+zR8AvFNt4gtfE3xfv7nwR4Od7SXRtOmt57\/AMX649zEq6dH4T8IQzW1y8+q+X5Vr4h16TSdNeKOW4s7\/UJoIrZPpo5hUg+WheStaDqRjyPVWTs07fCnLmVrtyTtc8n+zcPCDnXqKK5XaNNtttPSMXKMm1Z2tGHNd3TVrL+w74ffE+z8faXp+o+HxqVxb3XlqLaaZgwVWUAjT7UQyWzSDDwxyPKJIitzA9xZyx3EnsF\/aWcEMM0WqHSr0sCIopI50kkJQeTOXhuFcnKoEQM+9Qp2MjY\/Or4D6zreiaZa+GtB03TvCei6XGJNT01JjI+jwbDNct458TSYm1XxBIgvbnUPDGlrpOiaTJEw1tJ7q11WKw+uNJ8baNrkM8Gnql3YW00NudSuodsupX0rAwwWcUisbeF5GZtgIlEYIcr5qqfchUoV6TU+RVZLlcW7e9GMW\/Zu92ltJprlafM76HgOE6VVOKk6UXrblk7Nq3Pa8O1k+bmV5JqOqzvFt5JAup3njnT7KXTbe3vBpGtWLSW721rfQiOVruKIOcuSxMiNKFSJpEfzmKDqvBnhjU7LT9MsbLXk\/sTSrWy8w3pebXbtI4AivcTG8t3ihmYeY09xbEpMrKVBdiKv9sWNpPLczXQvLWxjkvLiaeZjai0jZZneK2DxwPK5C\/Zpj5jQxO02Apxc8rrHxh8Joktv9lsYLh4Yr+7vbWe1Fzb7PMu9O8pipa5nijV5pVZRBGGD7JQXQ+HUwtOnWlVrYjlinJRheUZqSte8otqaasknra65rJ39hYqrWoRoUKOmnPKKU6TVopOFKabpzV6jbi0nOafJGXK38Z\/8FBNd8c\/DDQ9K8WeGdI03xbosUs7azo9\/MtleToGS5mlstSijit0nhtBcRWcV1BNB52RclY1SW24T9nn9qHwDqPg2313TLrxBA+97iTQ\/FFjFocry4\/0q0sC+yxfN1IjwSWF9cQ+dExgnmhjKL6H8b\/jJ8KfGNumieMbg3tm6NJFGLjTdTu3vxN9lKw21qn265uYEbbdW0X2q0a5Jt0S6S3ngX8rbvwZc6F4m8R+DLbxr4T8I+BfE039v6Nc+LLSfQfE9rbvJ5LS2+g3WqWUD2Ef2R0iu7i7s5WlSSGe1hEMslfM5nj5RrVamEcfaU4N0+aM5qu0oqEVytunJatznGcUlZp3u\/wBN4dwWWV8lhgs+VTAONVTWMalCFWg6j9pFx9nUjWnTT5o06Lp1ZRclzSaSh+qesftTaDeaBetZ2GoWF\/JC1vewX1\/p1pc6N9otbpodVkjN5IJ7TzIg9ssJW7jVCJYldYRN98fDhLm88MeGfEetM5uLjw5od\/Mk++CK2kTT7eR5mjnX7XbPMZDeGK7AuYXkKNAkhlaX8s\/gX8J\/gR8I7CHx58QvGE3iq50VV1T+0\/FuqWy6PpkdnDc3f2y08O21xPZpFbWlhfXkZnl1FoY7C5uoWaOzkuk5X9o3\/go1Z\/EjwdrXww+Ad7Y2\/jDVNQvtA8N6j4t060uvB3j7xP4dsLHxDqHwz1C3u45rddM+IHhW8ubXwprEsxttT8Q6XqPhy4ht75tItdewyDBZrmVT61mFKOHpwcfY04ptNx951akvha5W+Ve9ZtzfK1FHzXF2MyDC1FgshqVsRCnz\/WcdVXsozUlTjyUaUpOoqcLNucvZSs4w5XzSnL8iP+Cruv8A7JX7Wn7Vfje68T+CfFl9d\/DzQI\/Dg+IPw\/8AGvj2LxOV8Jz+ILPX7\/Vfh7c+HviPe614N02bw\/qVvB4i+DvwX1DwXodrHb6v4\/8Ai1Nq2rr4T0T8RLP4Q+FvBVvc+O\/BXxSi1TwTGYp7Hx1p+nP4k8CWTXl3cWOkaHr3jL4fTaz4y8BeMdcurOf+xtA+N3wj+DNzeWsf9orKujNFqc36D\/Ee68J\/FXw14h8V22ga3YX\/AIO1bVv+FgeFNVg1jxB4++E\/ibQLmfVNU1TUkubyw8XeJz4ci8O3cPiXXLfUdE+MvhbwH4Yi8S+BPHusfCb4dfEH9nn4SfD\/AIW8PatP4\/1DxPqfiDxBaXF3Y3EVr8X\/AAFq1rcfEe58F+JfFOsWGs6zrd+P+Ed8O\/tOfDbxUP7f8P8AiSfxvF4f8Z3niK1X4cfEbxL4St\/Dv\/CHa1+oKMYUFTbnyQjCCu7uNmlZRb5XLmScrOLS6e8on5w6lRVYuna8pcrTfxaJpb3T1STS1STipN6\/Vn7PXhH4geIfiV4d0XxJ5viDTNV1S3tLPxImq6f4v0HUWjEdy8Xhb4gaNd6xomrPZQlmmh0TXb+1hdXtb+ATRSRRf2s\/s+aC3gn4f6Fpc0jMi6fAmJWAY\/u1IDc7XA3EdGKrwwAav4wvhQ958MfFWmfEHwZptrpfiSfU9Pk1jxL8CNdvvCXgz4g+XdTanqNlq\/gW7sbnQdF1y2sLW5vZ\/gxH4b+F9jdadaT674atoPDc2n2x\/r1+HHxXsvE\/wv0TxP8AaTepNpsV3JNa2Vto+q29tHaLNLPf+G47mXTVEUCSSXKaVdy2MBRjPqmGJP0HB9LDynj761P3Mr3tFU2npyzSanGd+azs1ycqaSkfNcUYivD6o42ULTSdmpc8VFSVk5NK2qTs7c10mmfWt5pXhvVoyt7Dayblwc7OWIz8wYEE4PbGQfmzjjxHxx8F\/h9qyuZrGwbzSSP3URBGeUJKHlWILdxlSwx81fDXxO\/bCsfh+kt\/JqFtfaNbzRW0mpWcpmgt7q4M5tLPUlZFuNKvLn7JcvbW94kRv1trqbTmvLSFrg\/Evjn\/AIKi6ZaNMq3oNuysrrFMvmAFQPNTLiHzYwAVQyqjiMxs4R9x+49phaEW5YiKhH4ou2miulokrJp2ta2jd1Y+PhUxVeSSw85ytaMorTRK\/urzdk7dU+l3+qsf7Kfw11C581tL08\/MDkRJ3G5cKD2wTwcAliBgg19FfDv9nj4eaAgMOk6egHlkEQxryqqcgsWPb5sErzkHAJb+drSv+CrTaTfQw31ypt5lFzY3cU4mgv7Fy6R3MLM8cgUskkUsLIk1tcwzW92sVzBNAv2B8LP+CqvhzXXjgu7lIgTH+9mnWPcmAG+UnAbknAyCcljyprysTmWUSlGKxVGLaW6S1aWt9e+9l2T0svUw1DMYrmeErOKeq15dGm9HZNpvv0Vla9\/2f8d\/BXwl4i0G6sGightJbOZJFRF6bHCqFG1QCGHdVAYnAILV\/mp\/8FdPAV18Of2wPHegabZ3Nv4diukl0+Xy2SCSSVpZZsMuUZ\/3ihlDZUgKMCv9ALwH+2H4X8bxJbRataD7SmzY80PzK33ckttZdrEbfl3HgZUDP4If8Fx\/gf8ADDxD4CPxO0+ys38Rq7PLcW0SM5BDPumkUbtwIIVegyflwxIUoYPF4Kq6U6NSdO1alNcsk+SL5op7+8muV+SdtGjtw1bFU8VBSjUhTmlGad7WduVvVpKKTdvh6vc\/ju8Lz+ItTmgsbaSaC0DqzsCQ8hJyQB94jK8KONwy3UAe43elS6dZNM6zS3HkFpA2GB2g4BzuLAAEjGcDODycZ\/gLTrfUtcttN09kRtwMjMuVUK2ZN23qAoA+YA4DYKk5HSfE3xL9h8TWuhaXELiO3thBczovDzzqIyqBcqTg4wxPOGxuUmvk0r1He0Vpba7vru9W3dW0tdrzZ9epKlTu5czdlfm5ktdktNLK7\/PoUPhFpWp\/EbxJbWVlZs8kV4kUgjRi4ZZMDIXnLE5Hy5wTjHIr91PCv7Mfxa8N+F9I8TWGk6nZxWccE5kVJU8uONI2kmLEY2IrhmRmUcE7CcGvTP8AgjF\/wT60HxxZw\/E7xqpQ3Op\/bILGRFVUW3RXWRi+3cPMOAuAoO4gnNf0Y+EfHPhLVPjHqv7PeneD4tR0nRNPht73U0tFeyjM6MEt2kMbJ5i7DkeYJOG4HJrxsTWjGoqsqkaNB1Vh4uerq1JScVCMOibUmnvZXtZXV03KcHHklOSTqTaTagrX524uNlZpPWybs7uyXW\/8E+bbxJL8KPDeptqlzfD7BEshkdsLIgAZApLsVDA8bjg8AE4av090fxbdrcrY3cTK64AJB2YGOQwBJ69yAcMSo2kn84PC3ivVfg98ZPDXwm8LeHX\/AOEa1OWWW4khG2GyjL7wWC7gC8jD+LI4yMcD9NbjTI0mtrwQBmkjRyQvJbb\/AHh6HHTBYAjJGAfYyTMnOcsBKbnPD8lOsndqEpx5oqMnd2S1tfr2bt5GY4FQpxrOCj7SPNGyS5rWUmlvvdd273TaZ3lvcB41ZsAttbBbkHjkggDpkZwM4B96seYc8MCcc5ORjvjPGePxByR0NctDcSrH8uW+UMMryARgE5PAA59TzgjNaFjMGbDk9l5CkZzk4OQS3JBOQD6g5z9ZytK7t+K+dntqfPt3t0tbW1n033v2uv003RJwRkd\/4iew4AwD2zzzxzyeK8pJTqc9Sc9sdcYJGCMcde5yebKIO24jk5OAMDJ6A54x\/IdBwhZc+\/BK8ZIBxkc9+3bGcjkETZ9hN\/otfu\/4C8rIxkRjKOH5wuDx3ySScZHHTGcnJ4OR0ECEDn5eDjduIY4xtAGSWKYUY5J4wCaijQhhkKMlQTxgHHPOAMfeAJyM4JODxplUKhUHOcocKyYTOAGxuwRkY5AyQMglWtNqzvo7fcrfpp30YL8td\/T8Nr217WepRnUI4CkMCATgnPHB78HjIJIG0q3IwarA4+XKj0GRgDgZB554GCd3zHGasToRJyecZOc45UEcHGcckjoAo4GMVV2fMDuO4AHqBt6DgjjoW5O7G7GcZIH0v\/Kter2V3pp92u3XQf8AWml+mnl8iQH+EcEA42kqc9MAk9+c88rgHpS9SuerDuTgYwSMYz1PPsMZHApnJbODgkkjPAwoDd8YOSx5IwBjDdHjduXJBIAIyAOq7jyMHn046DAJzTSd1p56p72V\/wAV1t89Lg522jHHG4d8jJO7IJ45z\/D1A9jRUW0twRkEdB1OCTxgjJ47HLHpnbwVV7aWv6Wtul1a6vpfr1D5fl\/meKBiDjgn0xwTkcjHOACOCecgYDYqyhJPJIwR1HTgdADy2ODnvg88NWQJGOWDEjBAG4AjjGDwp45HXpkdMmrMc5A+Zs84wSCBkkZXkk+gJIByTxyK4mrfcvxs\/vt8t\/I7nF9dNYu61vdJ20s73XRLy3NNCEOSeMfwsSPQ+noG6jjBxyCHiQAYyeTwT9FA5yDnAySQOSQRxms1rgKAc4zgkZz1wM454+YZ7jHYZy37bHjOVGM4JbDE4yNoIOML82DgtkD5TkUJtaJ2\/r\/gD5btPV\/52Wu3p5GurjnnPI4wRjnkD5T0AGMkDnBIFKWUgjI+YD88gfQ5HOCeOOoNZYuQUyMHlRxyfcgAHdgjCgE+g3E1G1yx4GM9T3OAQexB3YOME5AzkHHKuNK2+mut+jevrZ79ettjUaUAHkBgW64GOB056gZBOc88AjrVadQxwQCTkjHfJHqc8cAbtvIAyc4w7u+MbHkcHPLdTgnGPpwMckgkANjGTJq65AyPYFiCCDknDLy2PwAyrLgtRu\/P7u3Xbtf\/ADDldnKz87J9N32SSTva70OtkmUKWyOxP5dB\/dPAwMHcwzxk45vU543SReAeV3EAHk5XjrwQQM8ZwBnIznz6ujoSsgXCjdkgKBnILDJPBPPABGT8uMnmLzWodxjaTu7MpJA\/u8sMBsAfdDH7oGAMVcY3atv002ej7re\/3a+mbb0td20d7PVWXq3rZ276Pcz7qdY7gFMAbsHAJIIPGTzzwo543HA567VpqUZiG8rgJypwMnGTgZYEHIyOnQkckni7+\/tipcyKCPlJyMc5DAEnGBtXOCAHIJ71wNz4803THlinuURACF3ONmWznAYgkElTgHAXBBxkDLFQjG0rronqtZOySTdm7vfW9vVnXhpub5LNtfy6q2y3tZpLTdW00szrtR8c2Sa9BpsboWZyuFYDkNgllGMj5tuRjk5wAOe18UW\/2nw7NOpXP2Nm\/vDHkueCMno3XoVzggDB\/LP4o\/HPRPCnj+yvjfoI\/tGHHnIA3mSNjg5xw+MklW2hgGGQfojxF+1t4M0\/4dTX7ajC5NgW2iT5gTEMjpgAgjodoOAWJ5PlYatz+29rKMHTm0tUrwte6ab0TWt9mrO7PWxGGlCNFxi37SN9E2+bazVtLaWXW\/ZI\/M7xz8VLLwv8ctS0t7pbd7iR5WiZ1jyVZtwGf9YoJB3Y3AN9\/kZg+IvxYsfEmmyw297Cz+VIrR+YmS20KfkO7oOAQozuQ4ORt\/Cf9s79re+uPjPfav4djuGgS6miiurcOT5ZlY7w6YUrljgckpgggE48G0v9r3xhC7rMt6VuAwjkLSMrM6bSTkkB8cfNn5c44wBvl+LiouNSa5XVnyys2lG+iV2rpa301W3Y1xOEjyQd7VFGDmnG6vaLd3G7unZP4vhvrc+7LX4rXHhH4yWlzp88izHVkSRIpCm+Pz\/mDbCG2jaAPm7Y3Zfn+ln4F\/ERPEvg7TJL2QvIbO3J80k5LKowCQucP02j7y\/fC5UfxzfAvW7j4jfFa01LVt8Qe\/t2QuCMKzqwYlyVHzEBjzjBPH3h\/T58K\/EFtoPhixjt3A8q1iMhHyjAVQAd20ZyRxnGQR0JC+\/h6f1ilOSqR5eZqK0cktEm7u1ul9t9lo\/mMwrvDVIrklzNJO3Nbpa\/TyunfZt3ik\/1H8Iarb293GtsYoWeUF5HPzMGCgKvI3A54xwMDoQN3254R1VZbGLDKzYUbU6DPBBAHXPbBAAJHUCvxP8ACPxjebXrDTLG4Zp5pRHISCogh3MJJSzMETrlBtGc44ZmYfqz8M9ZtLmwtYrW4WV1iiad0cEmQqCQTnJZSSCRwvDZYkmvPxlNUo3TjJpOOjdmtOl27LpZre3ZnRgq0q8NYyVravZbWipfC7Le3Tex9CSaoqgKDkgE9M9SMAY9QQcccdckc5dzPLcbthKnoVRcHgZzwT1I2jkjAyMDrFCcjkfKSMvtLAAHnLZGFwcscnI7nmtqCOKaLzDtwQM4OT8v59G5BPOcAgnJHk79Wtemret2r\/cu2t7N3T7lZf1ov177bbpnEXlo823exYM2MkMCCQQAc9cruYjHoM5zXFa5oCTiZMMzyQbRGQeACWIYAFuSCoZtwII3e3e+IdasLBWie6t0uMo0SPIu+RUk+YqjbdxC55Bbb1HBJrM1rX9M0w2z6hJBapdtFGkk8gRZPNYCNdzkrvdiFVchsDr1Ixm4xduZt6K60avZd9G+l32VtUbRTly2TTe1tbpJaJdt9NWu66\/FHxd\/Zl8A\/EjQ7rTtY0yKczwTo84QqyTzqVkdVX52IBZgDkbQSynJDfyTf8FBP+Cc3xD+Fet6n4i+Hdjcz+EbMNdyX07+dfTtlpJisKhmEESHy0wzY2tI5IANf3Ga\/YfaLN7qxO2MDI2sSrqQSoVl+7lcEncOPUc18b\/GJPCHjaxu\/Auqyw2epa9p89vbl44vtEq7WSZbZbiK4WWReCSIpSc5UBgMc1WqlKMpz5GmlG7S5pO6jBX3TbSirxez2av0UYTldxipfFdK\/MlZXl6Ky1fZ6rc\/jZ\/Yx8f6RoGoR6D4hMcOvGZLcQ3BCzrhwi+YhAKbgR8pGcgkqTtFf0PfCXUbGa0t5I\/LKYDk8A42gYclm3FnyAxJDMTlvlyv4EftW\/svf8M1ftCnX7O4u\/7Kvr77XZyyW2oWwliknLENL5MdpcOpOW8pVkVdrOGB3n9GPhD8ftCsvDllcXWq21skFsvmGScAgrCVYHeTgZ53E7sAAMxLY9rDYt1aXLy8rilFJL4mmm72tq1e6eiaW72zqYeTelnJuKsr397Zuzflqn1V1d3f6P3Hx88I6Z4vi8FNNbya0YvPNujBnMafMXCjLdVwWA7jPAO7668MS6fqeiRakLdXE0QlBYbSARkKcPjIG4YyMkMcnDZ\/nd8C+M9J8eftA6149gu1ki0a2ure1fePLuHl4RY84XaSuAFI3buMk5H7RfDj4mWmneA7Y6ndxQSG1LkO6rtTaWwSTkHgngd+AMK1c1CeIqOo6sHTftJqFtL04tcstdXzbXWmlujYsTQjQcFFtuUbyTtdOy0td9+n4M5xvjZpPir4uaj8ItP0lp9SsI2a5cR5VN+U2gIhb1AYkn5TgHcuftn4ZfDA2NqZr3T0tvO4UqQA8bEs6uADuydoO8ggAhfusK+L\/wBl208N+OPjZ438Waa1tcu1yE82OMOwKbVbMrLtVWfOMEkjBwH+Zv0nvfGdjpuuQeE0yNSMSTiLadvkM4VW38KJGwWVfl3gHaAoOM51eWm5YlRTnWqQp9eaCk1Gzvdykop8t7+vVwpSU3Gm+ZxipSuvhbUeZ6Ju0W0lfr+PpHhzwhZW0CzeRGGxjzGQhiNxOM5zypx23jqSSRSa9DFbKiQEhzKiIEVcksyoAsecELyOCMAE54Ir0DTIyulRqc7vJRnRQfQswzgjnPIO3nHrg\/PHj7xNfeFvip8PNMnWGXRfFFxfWvlOkjzLf26xS2siMG8pFEkimRXUk8OgzE23LEThSoJu8YSlSprl2Uqs404ybWlruN7u6T7ImhCpWqO15SjCdSzu+b2cedpebjFv89NT08xWtrbJZu6NPKqExnaDISSBhQS2cgsAA2WzgHkDBv8ASY0jmkjTzEkiYSx5IEYAO5SCA5cISAAFBPDF8bU+SP20Lv4keANd+HvxT8KeIbrTvCug65pUXjDTGmtltL+y1DXtJsprRUmUsLu40+7vPsEobETQyAK0skTr94xWUE2jW93FgJc2ccgy4cnzY9xyMsqYDdVYE5BL7cgedCv7avi8K6coVMJ7FtyVlKlWjKVKpB3d4twqQel04tXudk6LoUcNiVUU44mVRNRuuSdJwc4SVviUakJJrdS7XR83aJbaP4gkvb2cx77iee0gYsrSR28eEMWQMqcj5UC8IueTuFeHftA\/A7RfF3g\/VtIl0i31G3v7aaMQ3FuL1wzoyLKIZtwd0JMgDZRWAdlGGdcbx1qXjfwPoXiy28I6dBca\/o3iySaDTnuP3V\/pN5dCezW2dIkSFp2kjgjUxgpI4WQlPmk+k9D1lvHfwtsNZeNBf39g0OopE6uqXITy7u1jkYtE8UMytDK5PlzhWOTFtJ8hfV8U6uFlTkq8KLqyfI1e9T2dTkk0veVRWlHmTs735bSXov22G9nXjUTourGmkp6xbgpQbiteRpuzso3TS1TP5DviH4U8Mfs6\/EO18E\/CPR4\/GXxP8U6xLFD4k1HT7W6s\/CjRO91NJ4Y0i5iGlrNplnHcSX3i\/XE+x6VFb3NxpMFiiLrg+sP2XC3xH8c2V34bvrrXk0i6eyvPiZJO+oGbW7y1MusW\/wAP5dTeJtd8Xaharc3Gr\/EnWGjs9C0qL7Voi6RpsVt4r8T\/ACP+2Fq2j\/8AC9fjX4b8Oa0uh21nphs\/iP42e3eVLTw5LewDXYdNaBhc2\/h+OFrSzSwt4rfVPHPimfTtHjkuIrvRtNr0D4PftW\/Dv4IeGrXwtDFHot1Dbx6dd6RLewT6h4a0lI4NevPCU88MMDXvjGW0Gmap8TdRigt\/tuvasnhuGGx0rwvb6Ra8FPC8sOZxlaEmm4tvVNaRmlJuTTS5uZygpNRs5OUPTlVnVlyRV6k6cbKe\/LKMOapKL1ULXUKdlF3k6t3WUJfuV8c9VsPhr8F3svCl\/p+h2i2wN7rFzJdyabbWdnE19qOsXlzFbtqVxoej2ttc6tqFwlt9u1qa0R7fTlaPRNGtuw\/Z28WXWtfAu0+Iut29\/o\/h2DT9VudGhvYok1hNISIb\/EeqLFiJdc1XTxHcxQxySx2F5rdrpNtdT2ukQXMn5neJPjFb\/tE6f4A8G61OdK0HxAfDviTxFpnAll0Broa14c0m6USMfL1MafpfjO5hdGhu7a58KOpWWzuFr9NvjV8SfAfwy+Bj+FJtQsdJjm0qLQrC2WaGHi0hSO+jijym5f7SlmSJMBVksgpYFVByqQca9fE8yhDD4W3IrRi6jgpU6aivhjF2lJu3NJw0Vm23SUKFDCuM516+KcnK3w03yxnK6V6kqnM1Ft2hGErScarSo\/sy\/EzxN8Y\/+FgXEyWp0qTxTceGNPhKMwt4bKyivrqJdwEaW6zmK0hjAO2O3wxLE7u8+IXhjTPDD3+t6jp1pwL1pTBiKSdLo4dJZAGzHJAzbYwyjfHbmRpBCpT5R\/Y++I\/hTwHpHiW4Gp27W8vi601W42zho4f+EhttRdnK7z5UIu7J4GckYM9tGzM3XsP2q\/2lfCGmWUinUop7BYvtbPA6MvlzKl3bLJ5YJAuMPEpXG1kVSoG8Hlw0XXy2nPFNVKynJydR\/wA1R8iV9W1torpRSvJJlY2c8NmNWODi6NJOMI8nMm4xhBSu9uaSSck9m7yundfnb+2f+2bb\/s1W+i23w3+HvhKz1jXtQuNJs\/EV5bQXmp2cLTRSXGp2TyLGYryzvUWOdliMbJdyKXikl3j8Kr34q+Lf2gvjzp1\/4t8ZXeqDTdQW9e41C5ubdNZ03UNSGrWUUVpEzWmmWU11e2Wrz2tksbC3+3WRKW17b2N3U\/4KI\/Hy++InjtDoltdXOlaHNJfaVJHHJJHImotHdOsShcRbrdLATqWcpdRTHJ2nPwx8EPGetXXxS0LU9YtNRsLe0WC2uZoIZJGsdMsYFW8vUiLhWaz0m1ae4Z2y8VoctsVVj9nBYTBUk3ShSjUm6cZ1LLnbbSfvSbaTi1tbla+FO5wYjF4qtPnr1atWKbV5OcnyqScrt30u27XSbt0R\/Vp8Y\/KX4EeEfDuiXsMmqXeh+J7m6iugkst1YXPgHX0naSI7mWO80yzF3NbopRxqd3GxEF7KH+L\/ANlnQNC+K\/wetvBV1c3+j+J9MksI7HxRFq17pmo6X4h8J6hc614T8RDU7TDW91pOqaprMdjqlwk8fh66vrLxdBbXWq+F9Mir5F8Xftg3cmqzazpMN09vo3h6CLRraVpb7TLbWPE9vHaz6BLOCjMsXhi68XwxW6sGhg0hoiElhZ34L9mL9pbUPh5rurzXNpdS6bJDInzIwN1cOrNuICYUKZNo3A424GQcV6UsLFKEadaEHaKtTnGz0SbaV7aWvLRuSeqaPPdZuLvFys5JucXeUpSU1eLTtZJbJaNPmelvu3xf8PDa6J4v+JnhnSJtI+KvhvxNq3hn4l+HtDgfw\/b6lfeD4dNvdVutN0rRNNsdX8N6fJYwWXxD8F3kbw3\/AMPrK31Dwxolz4df4K+Bdd8XfnnNZXWleObXw34X0u31eTWNYm8e6T4NtbODRdM8cf2ncnSvER+HwtdKW2+GfxnCRzaD4o8C6Tod38IfjJbadDpuneFI9T8O\/CzRvGvt9z+07rsvxJk8a6V4b1K80jxLoWnTa6z2Mdxbz+LPh5rVloN6lnLfRXNtdavD4E1bRPF8Zuw8Nn4z1Lw1r80Mlxo1tGOL+LvhuG41wt4f0sWttrG\/xj4XvkhvIrBLxNOtZfFGkafHPdTfZtK1jw8LPVrNNSE2vXGmab4DS9XTdR1LULOMhh2oyftozUbRqzk1ZyioOU1pZzSlrbTmc3rdxMpVFanFxtzJcnLFp8qesXy6vVdXGXLpdtRZ2mlfDTxF8N\/F\/hH4j\/D\/AFqbX\/B3id1spbtrVXsdXitJ7PUX8PeL9ANxeRWOu6JM+m3s+mXFzdXGj6vBpvizwfrl3Avhfxfc\/s34k+MmpeHvhraan4SiOnaQ2nQTXenW8s0Vx4R1Rt9s8CyIONJmvraWfQ7yNla3t5ItNutl5HDLe\/AX7N93rniPR\/EniHVY4dRWb95488M3cluLjxFHZL5dl8RdCb7HIbPXraO5ml8QXJS4vbXVGu\/EM0ms+HfFXi\/RNH9z8a3d7oPh2zNld2t7ZXZ1WG0uri3Z7DXtKuLeyi1DTNTtYZ28pW2Jb6tpiXX23TLkiSzvUmh0\/Uj7GSVYZc6uIliKb9vHlUeZJtQvzcyvZJuzSbW6eqlc8jOMP\/aFSjQdGanCScpRXxSkopJe7q5Pmt7vL9pLSy\/ML40\/tK+Mr7xbe3uqvfTTNKLeXxHpAtrfXPsLxyQzWGr6XcQnwt480a7ZoptZ0fxfpkt94iFtHYT+JtOsXl3fG\/iSz1rx\/DPe+FrmO01tY7MR6VZNfr4f8RTzrb262VimoT3Wo+D\/ABjeTGeVPDOt3d34Z8RahDqNl4G8UC7bwx4R1b7P+NHwmjE9rrOhedPoGsyXIsoppI57zTb63aI6joWovE5WW6003EEtteGO3\/tXTbrT9UNpYzXdxpll4ppnwv1ixuYL+3+12d1BloLm2laC6jEilG2yQssoEiM0L4+R0dkcmNmDebjMz9pWnJyjKm2rpSt6JW0suayunZq1tGepgsshTpw5Ycslu7Japr4k9N1K6Xn1s18p+Edb1+4L+F9WjuLeO6mlOlXtyZ4zomvELHGJTJIiwabqkkUOn6x5u1bRWttVPzaa8F13mgeOfGWiTtC9veWtzbTSQXEDb0limhdo5I3VwDG6SqwdGDYIIPevtOx+HeheOVWPxVpMFj4nkHlReJ7GG109dbkaWFEPiCyb7Poj6isPmoNTA0BdRZhd+ItaF3BLeal11v8As5X2o3q3MulMzOEt727W3khL3kEcaLPfW9wkdzaXd9AIrqc3sUEl3cPdXUBnhkSZ\/ErYug03JxV1ZLRO1tndavTR+Vu1vZp4KpskveS301uk0pXV\/NOztZtWdzjfhB+0b458Nz2tz9p1BVVkypknMeFPHBxghhwy4B5CqeDX1j8SvjN\/wvv4f3XhDxPLM\/2mHbbiR2ceZsO1P3i7QH+6cA85Zhk5XN8Mfsyr5MXn2qLgcoFQuMNld2FGxsYBzj5iBlM5PqH\/AApLQNHhPlwuSoJl8tQAO4KjAYhsjIwONpHDYCwOdUMLUvRc03JKSj8MuayfX7Sb2eltWjLE5Q6nK5TpudlZ2d0rqyuotWS+5baWP5ttW8OH4cfFDxBYteG0SCeY2jEsAYpCcIpx\/ATjoM7e+2ubk8b6ZdeLtBtlgiSz07UVvb64nbzJ7+58xPnmOGPlxquIYuDyWblQB+1PxF\/ZJ0Lxz4zm1K80ySIOSizfIxkUlvnZh8u5VLPjhjk4UHk+b\/8ADu\/wj\/wkUEiWdy3mtG5MDNwpOBuA6ZY\/cK5BBxlcmvoHn2WcjjUV3dzutZapXWrS91Oy3Ss7efFLKcYuXllTipK6bla8bp31u0vd1lol3P07\/YU\/bc8IeB\/Adh4T0e5trDUJ4Y4DcGSOKFZJ8L+6UEENkDIJXJxhui1\/QV+zNffD\/wAPaHe+Or\/VdOutb10tquoX0ksBmeWZHbLSfKxwuVQnComVG3aSv803wf8A+CffhoPZS2DaramC4jZwNyKfLIwdx27QQFAILE5QAc7X\/Zf4Y\/A6K28Px6JHrWq4t4oUSP7W4UbUUEHksV2KFYn5eoBJIavFxuZ0K0qLp4RVFQnKrSTlb9401GfZtJys7J2uludywLhC3t1Hnsppa3hpdNpJpPSyvaVm20fod4E8WeHPFPxZk8RR3NrPHGWt4pR5ZAYSqVG\/nJYAnbkEcc4wK\/Ri3vINRtoDFIjEKoCgjHygAEZORngEZJ59zX4u\/C\/wRL4T1+HT4Xum3StKZFmIJZn3ZYjcWycEeYx8vBwoyFP6eeA577T441keSYKAu1mJC7gBnIydy5UsAeeM4ya7+GK1SpjqrqYVwdWrzuaba53FW5tHoktFe6tdWueVnlJxw8OSorRpqMVpflVtEn0b76LXS6Z7ilhMoLZGOMY+7ySeDwoIJwccnPqQRoWtiVZWYgADIx75JGOOMqSMZOeQOQaW1lleCOQqPmCE7mLEhgCSFDHd1yeSWHYZGeisWS4VGVSyDcshcquSA2FQPsIIwARx044GW\/SG2ldpK2rbtbbZb6rrfR9j4dWfezu2ne+6S6+mt2tNLajTA7AMmGDZUHBDbwowPv8AAJJA\/vYGcEgmIWM0JLy\/xBSCdx2jjPOCVOSOCM8e3O6lq7EbZVEIwUCjJ3MCDliWzgbsHkFjnDKNrOMWN8TFmDEYJwuB\/FnAzg\/NySOSTkDgZqaVtndK9rp2tZb2XXbr6luPXVXt5X1W+vor212MJoXRFP394yCcsFwQCpIxtwfc5JwduCKaBINvyg88HBwABnOGPYEkkAE8titFra4dgjqFTcV3LtPy7j827B6c5LNuLMfvbmFWHtG8tUjTeQMbtwwrAqe+N2fnDHknGSSygGlyq129W37trJX16+VrJ7p2Dy+XfXT8dvwMxYmeXEmQflGSDyp46HbjBIGOQSAASMCnywFCSFBXhskFTyByQRn+IbjzhSMj5gKupBcODHO8a7ZE2EMN5PyhOvzNkN8h3ByfUAZWTfsZWUMCVCgMW3cFiRgcBmG0ELnkMCuQyl9VtZaNX0t7runp22dx\/LtbfVu1u\/nba+\/kURbrnKsmCDkDGflUtnax+6SOpOSWHB+UFrKiOisuQqgvgty2MtyAF3KG5AG3IHzAnAttCqmT5JFba527sqqkMQeNwPUlt3BzjvyoCuChViE25ZjtJVAR0G3cxzjBbcRtJPBAIySerdtL6emvm1tb1aYWasmmr9XfyV30X4b3StYzflEmIySnc4zx93IyMruHHOOBjnAYFXYoYGV1BkOAS56R5VMc5LYOSex2jJJIJBKTlG\/ra9436x127Xv835hyOW0eb0V7Xt\/n+fY+afN2ocrkDLEhsHqTgDac9QCAO24AdqDXkm4+UGbcVyBxgHnkKSegyMjAzgZIAqw4eTcNhAyQVAOABgEZGCeuCCOMDlhzUiWj7oygDbR8wPJTn7xGcksvPJB7dCAOXzel\/wDgdPufRdbnodVa9k1d6rS6v5rrto9tLplV5biZBtJJAGMDBHPJIBcdeMY5JwCOtJEZUw8m\/gdwMHnk4OMkkdSAODgYPMU0F2kmFbA+9tGMgEhQDyMgdRkKMjODkULA1yzxuzO67pBGrNuC4+XoQQMgdPlzknlalys0t9Vppptfq02+nfQpRuk1zWastWlpy7p69OZ2vv1le3QwyxkCMAghQxIyQTknCjJCnk5HCrnGeAKzry8C7gi7yoLKwz1IzwSAc8AYzkYXOMcwpayw5GcOACoYlm6ZAYAttONxGcfdJAycG9BaJKoMoG5s9BnoTnLZB7HPQ5JBweClK7tt8\/Ty630va\/rs1Hl1ba+W6snZaaXs9dbd9DmJ3uJi7MsigKTgnoCMnaSFJAxzjjocDcM1DatKN4JKkAszBeGwC+4ng5IJzsLHPTGTXXX1kykeWFKbSoRUJ4ODgNyWycZBPAIGcYIxp7C6MbptjVDlgwDArgbskhQMDnkhgf4j1w03drS+jbXfTTbTb7huS5U4vrpdrXZO\/u3bWl9bLfRWZy11YSIpZp1ILYIXjABbjrywyRuz9BySPMdeklt3kbzkVGDBc5Gcbm5HfOMgg9QeDjJ9F1LT\/OgMTXNws8ecgRyKHZeFIO4BiCADyQSwbJ6Hy\/X9PmjtZZLq1uXiETESGJwct3xuXGMDjgD5doLZFV7Rxje2lrptvZJX2XTXS\/VWvrbPki2k3fVW5dVayeut7LW7s1sutn4l4r8ZS6cJCt2kjBsLu4AfLZDDcgzkjgnjgDoRXzJ4r8R6jrRcpdsuWb5o3wAckHoSvIHBJBYsVLZUg73j1QdSmgEkwjbc6iQgsig5ICcY2g4HOO\/JG48ZptrDLG7CGWVcMikrtVnztOcqysp57cAE8\/Mp+Xx+MnVqSpN2imtpPpZ2S5u63vpbTX3n72Bw1OEI1bJt2ajZcqvrdK3l8k7bM+O\/ib8Op\/F2sRG5u7ous24MjNhjncoJZl5UbOGJBJUDaihV29W+Dh1Lwm2nT6ncvC1qEMW4kkeWQVbDjknKnJJIGCNvK+56roV82ppcQ2\/+jtJIAzgjpweWJyN4JwSDkElgCQOlls82Mmy3aRYkkVkjYAFtuc\/OhAJHAVWB3HCgg5Hj0GuarzOT57aOUneLvp1Vrba9N7s9upKypcqjaLT1vdW5bW03b974W1010PwT+KX7K2ijxDIJbVrgtK3lkqpzl2xg4ORlcDccHIJ+bJHL2X7K2irETNpKnaCQroDtwMrnAwpHOSfm6HOMV+s3i\/w\/Y3mtI0sRDyTmNEEZzu+dkWYKAqcoVD7m3OdqsEIDW18CRPBukSBWD7NrIR1AUEJzgDDEjA4BY54zvh60m3BSSgpLl0WsXy8rej3Tuo2TervZFVZpRUnSg5aJtp28r6qzez311sr2PyP0f4TQ+Ddct7jTbM2rx3EZDoo3AhhtJ2kff9AQWGCxBbFfpn4W8ZX+m+EIJLiVyUtQr+Y23B2njcGAx8rcqvIOMkFRWnqfwutZpYZZLZWRJUd3SNmyOoG0LuQYJO8BiFzhThmMuseEm\/sc6XYQI0bxF95XaVjcjOxW2gpuIC4Xoclcgsvq4fMHhoVL1LLlvGKjJ3lo1ok3fX8NNmzxMZhli3BRpK7321jaPVtK907Wto1dpPX5\/wD+GgtT0jxJAttey2kJnIuLpCSQMg7UckHaEzywCgtl8iPNf0KfsQ\/GXw1418PWcVrez3l1HBAk9xcygq8m0YMSBmVcurKADkkDJ6Afzm+JvhFe3WoIpt0tjJI2C0D\/ADq7EszSLG7JwAMksACX3EDdX3P+zhaeNPhiunHRbqZoN6yTonmSNNGhUbIo40XfviVwCMICxcEHIbHD5xGrOXtZTcXprqk9LNK+i11221tqldTLFSpR9mkprVpauy0d2rK60335n1TP6adT117OwkmgG5BHvbaPmwvzEqMgcjgkkdsAkKKi+E3xD0X4haVql3ot358Wk65qegXbMjIyajpU32W+hbeFLNBcI8LbTt3Bly2M18QaN+1HpUHh3HjDS9S06cwouJLOefcrqqFnMUb8bj87cAEsw3Lnb5\/8Kv2xvhh4a8Y6r4TgF1p1lq2oXWpreSafJZWX2qd5ZJxLIVDyTTGNQpMR8yVwWlyQK63iMO5xUcRh2mnFp1Iqalo1ZOV0nd3TS6aJo5Vhazi\/3U9LSvyuzj11utVr366pXZ9JftlQt4e8CP43GuX+k6Zo2p6ZJr1zptulxe2+nPdpG89vDIrmVFeeOSeKECZ4ogsbj52r0PxX4MPxg+Ci6NcXs9vqlzpNjc2uq6fdzWQmubZYLqCSK6tpBNDZ3xiCO8TO\/kyuwWTcEb82v28\/+Cg3wJ8EfDe68N+K9YjvU8VJHDHBa2lxfxOLXbcSIRbQyqhOISjuVDElVYFSxzf2R\/8Agqj+z\/8AE74b2Oj6Vq+oW2seH9JsV1PSbrSNRhura3ldLOCaFWtE+32cEyLDLcWQmS1xvu\/swaAz+bOhRlXxcp4uk6GIowp+y9uuenNKXPNe\/eN4zi1Jctp8zb107kqv1TDuNJqtSrTkpciTdPlhypxspO0ozUuZtOLimrLX9Hfg34ogj8O3ngfV9W\/tXXPCc39m35unibUFUwrNaLfbWKteRwOkU8ih7eSWN3id4mDV8w\/tHadYWt3YeILW2tW1HQdUttQ0+4gMSTpBI4S9QupG0FCXEbgByu1nCuQ34OftN\/8ABU\/4n+HPj74og+A3wd8aeKraW+tLTUNVsNC1CGzvprQFLkJNtgxLGytFb3EgEMqouQ0ZWQ4ln+15+3D8W76+ub74PahommXtvGkdvrd3Z2ktvE0YRpJ1dmkkm\/5aIYwGJbYxxgLwYmtg5YWGGq4iM6lLlipxanJqEv3crtycmuWDum25bPS69TD5fXdaOKpKKhVXPKEk1ZtR50+VcsU25W5kopWTtdI93\/4KUeIPDfjfwhoclncQS6ujkTwAo0mFUMzssbZ2ruc\/KHaJgrKDnFfzl\/FfWvHfh3w\/rFl4au7i6mELvbiJnXYdpzHxtDOM9D6nqOT+ul98Dfip4pFzrfi+\/e+vZSZ101Z1cQmRggVA223QKWCAqy7gFyd4GeUH7F+o6vHM99cwKbiNhJDMrLLESA5XaqsGxnaxBKkjK8AGu5Y6nClCUJqXPHRuXRpKTaSet170VG610tq+aOFm68opyikmtUr\/ABPl1u00tE3dJrZPRn4OfBP9qf49+AtcEc2i6pewRzFnKwTCRirZG\/5djqoJBRgC2cZIwK+4\/HP\/AAUR\/aM13wZb6TonhjV9LlLLFNdGCeIQ2+WUyK43NlMjKoEzlTnOM\/fnhT9gaG01QvNLZbRIxCvGzblbJV2dkIVTyMYO8sAoBKk\/S1j+wv4RudOjF\/K6qq7poLVE+ULgsUlMQAbncSUKDkqeTWqzyo4uMJNtpJp2b2WibScbdGm7+9JXabNvqMU17Wo5NP3ZNRuvhad1G1teunkeX\/8ABID9uq68P\/EOD4d+PtP1aJdfaW6uPE2qboLdLpgrC2xIobZIxcB3dXZnX92Bjf8A0yav8QfCd54vg8V2Oo2NxZx2EAuJYnjkdtr4Uh9xVFVWIcEA7sfdJxX4HeCf2T\/Bel600GmWlwzwujpMICl1HIihkMc8bRjzflMq4xkAMDgivpaT4JeINGtp9P07xd4p0kXyxSyQxXfneYEPyiJblJWgDMd2FUEkFQYxkjGpnVOpR5cRh3UdOd4VIODfu8ri3GTSVn\/fu4vXvKHlsXiHKFZQ54qNRSjZNO3Ny2u5XSvrZ31vZa\/0K+G\/iBo2oadDPBfwSRGOMECWM7QyqyqeQQxD9sAYGDkbj8xfFzxp4dvPif4H1C8v44ovDM808LnklrqW2S4niXKs0ghjkhzh9kQuGVTJtYfmL4P+Gnxq8Pae6+HPil4siFxfC9nS7S21UMkqhHtyJhCsUIGFCJvk3rkNuUAec\/Fbwh8XPEF8i3HxD160nt\/Mh09rfT7K1uYIUj8qJnWSSVJH4+di0ZmYlmwdiicRm2HqUYxdDEO8oS5ZRpuN4VKc0\/4qekkpO1tUtLaE4PKLVqn+1UlyxnBSXNd80XGXu8l1eLad9LNpS1uv3d+L8\/hD4gfDbXPDuoXVnNY63pUsJxJG7q5jzbywkiTbJDKI3jIVgjqrMuFNcH8Nvi2mmeF9M8LeKL6GC+0zT4LVb6ZhDHfR2kaQJcLuYASOBH5oRpAruMCMFVP4qaJ8Lv2g9JsrBr\/4reMbyztUlcPez6XIuJo8BZI\/tJkdfI28CMDcPNURvsq54x+FXxD8e6Nb2Gr\/ABi8W2dhG0MrPY3dloZQqyufN1GOB7n5pNoEcckan5A8pL7RyzzinGq6kMHXnOpCMJTXJBezT5rSTleXxTcHFStd3+KVuullEJYd0amOo8kKjnFck377jGLcWo+7olzppXSVm0rr9EPih8XfBVv4yu4n1mzb\/hIra58MJZQS7pjeCITXE+2NiRJDHNBFbSx4ZLi7Xyw7qhHmOp\/tAeCv2b\/hynhHVNcgTTHhvEtUuLjzJLdrhpCumqWcsyxuxS6mO\/dKTCdyQvNN8Dav+zjB4d1zSL+91\/xDrPiKHS4Ley1WbUpjcaek32i6vNTinLqravcPO9vBdRxB9NiK3FmI79LW40\/SPwC8M+J2spdYtdQ1OJIzZJPq1zc6nFbl2WIODePMsLAESfKqMwUs2UXjzamYSh7SeHw8fbPmUZTml7ONSUHUSUYy53Ky92MoxUryTvod1PAYVU4Rq4mpKhpKUacE+ecE1Skru8VBSerTcnzWVlFy\/HP9qDwzeaqPGXxGvEjuD408VQeL7ENBdSLe+JLmC5uvh5ot3bzyyGfRPCujsfiPq9ujHTNU1rWfDOk3lsGsIJk\/O34efskeLfGXi7SLq78ReJ57KBNV1nxLqE17I95eQSx3es+MNRSS6mZpNWl0v7XawzSGR72ezsnlZ5XBP9C37RvgPQ5dZh0O0sES20COWRmR2WEal4iZtQAVNvytBpEGi6YpRGSGLTY40LEBTxnw9+HsNkmqQLp8750rZHMILqPat1f6fHPGjusTNG9obwO7sqshfHyk486pja0f3EKkkuZ3ipLld2tvdWlm0r3aadmlZHoYWhhowddxaqSTa5vih\/z7tNNuVrqVuVSs1C75E18t\/ATwr8UIPG+nXWu39zFPrvi\/Rp4rS3V1sNN0q7vo7U6ZZLI5kg07S7NrTTNNtw7pbadEkakCNa+pv2iPBvxJ+KWrWfiDUNe1eTSLKO5v7Gw80wxpFq+p6jr7b41LRGRJtWkjYDDJsEJyqFq+jdP8EJp66RqsemqZbC+sZoHWO4aVRbzJKSXkt3BQSKiZSQfMyTLkla9lPg2XWPC+r2EL3NncRwXempPBDb3TxyWk9xHZXdut1DPaqHs9giykgeaF2lXkO3lVKuIkp3m4OUk7JO17efLdKS20fb4Ud31igqtCp7GLVNKEHK05RXMru600jaKavZNppvVfAXwa8F6+lxfWM+pawdL1TTzpGrWkdzMhmtFu7O\/spYtjIDd6dqVhZahandl5Ld7Zz9mubhH9t8cfDW5j0g2F6Li+SxjgYyXaSXC3unu5+zTRmZn3rbPPI0K\/LIkM4jZYmhkFe0+BvCFzpuqXbJpVwUjkZJIuJnby8sTJCbhEGWwGWJSH4RcuNp9J8V6TJeWMNvMkcvkq7xorKtyzy7\/NtYraUmZU6SKsohjW5BSPeXbPFThWlB88nzN2TTkt2tE21Zdn1kpKyvcMXWhKupxhHaLajGN+aMVrZJrZqPxO8HzWtDX8Hfjl8MdGju1nbTIZPL3RRQ\/Z0UhfNeQggxASAMzsBtLAsykkhVTwTQfh14eXUGQ6Iq3eohLKBVCRGG0lYvdygADL3CpHZIhJSS0udQSZRuhkb9Xvi38MBr080sYgSW33CF9SvrDRJlyXKkxX0kLso2sihS5Z2XoGLr4Ha\/C26a5tnC2D3JkQMJbuN54PLXdMUEpXzFWNRGiCWSPzWOXIGyu+liKtOCjNy5k7XaTTta1nopb3dndtO11YTpYaqlJtRkknOLUU91rKy0bS2sk3ay0s\/D9Z+Bvh+z060NjosU8NkJrieTbCY7m8niSO5mQqGLW8MYitbRgSrLHNdoIzfSoI\/AnwU0Ka4ubhNGU24ZQsYWAgkqSxAVVCBRgnnOCHBwcD7xHw91iz022trq0aNpIQyhElaS7jDbGlFtdRwxuAHT5oVZCWZfM81UA1PC\/w11B4cQ6FqahfNKTrpkkouXVpHdZfLEruyeaFE0wETJFtLgxS75eNrqPLKTvf3bu107O9tE3Lsm1rbTpnKlh1GXLBOS2fLF67czT25dF2s\/e00fyNoHwr0aVfGWipo\/lSTacdU0p99vC1vfaHFJqmovDIsgk3X\/h2LU9LWwwV1LUbjS5bgmfS7Ipt6D4JbX9LOg2Gim7vfCl1Y+MvCT3sJlnnWz1Ax654PheOFmez8QR6lNrNvaNOi\/2ppVxbW1vNd+JJHP1zbfDy60y9iuUsJZFS5SZoLh7e2UENEJbKTdexTeS2GhugRlIpJFDKo2L0uhfCmVdetri38u2lixNGba2u9R1NfLlV4PtP9n304WeCRIbz7VbGUYgRlCjlBY+vHRqSTe3Na6lGKsre9eNr94t2tbRZzo4eUHL2a5lGDUpRjZTi1fW1kpJJaPW87pXbPmz4c+BL7wNftPpMd3YXO8zWksU8Mc0cW7daXLt8oXdC6MQxMciyOkh2MySekeK9A0nXrSS3Wzv7XRrybbrml2lvGreG\/Ed2Y4j4s0KLyl26VOyW8T6VC6K9nC3h+5OnzP4Z1pPqi\/8ABq+YumTWOryWbJbugs4Le2tRKjySbYLaS0tZLGNJHDi2mQxwoJDGN5MS83qPgRYZ4rrTYriO\/VngjNxdbWK7WRY7lY1uIWDRkxzRBIYZ4CqvARIFLp4zEwvDnjq3K0pOKWieybTd0m1tJR5b3aa46+FpVJQrNLmbivd5bvRJWlrZr3Wndu66ptL4OXwDFpl3qfhvVIrm70vUo7f+0\/JkM8Ed5AzyaR4h0sBR501uk08lpcyxq97o+p39mht4dWkljyZ\/ghdtdxiKUJbl8+e0QkjkgLD7M1rIiKsiTD51lOBIvUByQ36HW3w0vXtIItR8L3V61tmNZtHaW3WQG4Mz+bFafZYVg3TSN9ms1t7Pl3iiDy3DV18XgO4t4I5bO70nQ1iLxxx6hNNHM7koVkSOaXWLeJI2Qp+7NrKpcM7lmBhiWLrNvlkldJ2bcrO8WtJX167Wu3ezbvtGLjZKLu2lKSjG0nFWvdaptb3Wy06s\/PvSfgpNFbyNJbTusBlZ5ktZPIdQFEZ84xDLPMW2KGJbB2qcvXungb4f3+mLHZ3NvNfWHCW1pcwS+bBE5lLRWV1w1rGZX82S2Y3OlvcMtzc6fNNHHIv0kfAGpl0urx9LvZZ3kRb5b+z8wlTudJIbuy1HacMQkrRgEsWj2sW2+gaL4F8kRy29gZbl5V3zSNeW0EccykTRxtBBZWV5FMil2UwLGRuDuMow55TqSleU5S1u72s9E1a7s3fS19bK6eqLm00oyas3a17pOyjvpZvd62V2ux4TB8NdQiZLmzjjuIbmBHmt5Ws47q1d0LP58FtcTKYodrYkEnKKGngsnljjPG+IvhxezyOyXEdmB5kgMd1AiTZiO0J5bO\/7olVIBfc7HZjad\/21aeCrewbfcy25nmQiLyLZQtqyTh0eB5bV1klGJEVmIMa4YAOgY8X4j8JWMs0skNtDIhMryvL9ltjLK\/SSeEWE0TKcbi29AWUSs5LSmqjJxTstO99VpFtbc6u0mltftpfG1N6OV7LS6eiW0vdSbtZ2lJu11e+jPhOP4WX0N+TeatbPCs8A8mGe9mljYIzyFlWxJhZijxxBm\/esjPyA+z0uy+HiWcVtcQ3kgE9uiiVba5ZNxY7xDI0chaRmO35wp+XnO8Y+gtO8E6C8ZfzdHsr2ZVZUS8uJPL2lyymXSNPNshV9+2C4VGAIZpXzvHU6bpenQPDaLqFjCInVZbuyt9UmaNo5HBZ47Y6cOI2KI78lnlZcqF3bRbvzSvpJN3WveLSsm9r6q97t3tYc4pJN3aS0vzJqKcFPW6Vney0k9vNSyPhh4ektFeSZLqQZxm5gESSyKrA+Wx3sFEIEpJ5P3tqsct9O+F2hhla4heIoeJNzxOqIVTIDKvmbcRqFPlkr82SrMVrg9OtPDEBt4WlN7dErJFMxECQblX99jUrK4vC5ADFY28ncq72LEPXsGixWUkyxQJdPKYolF7BIJFKkbZ98KW9jCQ4AKlvM2Hcd0jfKfRoOVTlTs3FxafMle9lFaqydunMm9W2ebXSSk3zK6u1ZqzVk73d13emu\/K+nsHgDSotT163ESyyXFxhLYRJI4kB+SV2TyZJgA4U4Vd6g9QpOPvHw9oMdtbW\/2iB4lWNVKB7eHdKCA43NI8zD5GAVkVsZyoJIr5T+G5gRILSxE11dNvVGudQdVkREdCfsUZuBHKhKhI2tdxjUqZTkg\/YPh4yNbR2ly9vO8aKJI1imt7kFcElTCtu4ETkBQFlKjABUHNfq2Q0IQoQmopzaUrx0UXaN1e75m3bWLsurb95\/DZtUm5OF2o3Sa1crJpprZJWdrdZXemy7K0tWABIQDcpjZXabGAdhLR26AjADbgcAjIyAwroNPhlIK4IiBywVxsZt4Iyu1twJHGApAIUZHAyrFoC6gROVUAbZI02AlQxCGW1jnUZXhkfgE8gg1vQS7dw3EEgsAwwuA20gAKBjJ53DaGxxkce7Ke6SerVm+3dfn\/kzw1C1ne2yt53Vlutk76fc91rJkZXkYzk9OpyduOnOScn2680Pt4AJL4zkkFyqnrgkOEOSAOvzDschjXUERG91BYHG5gCDjIDZUgZz1zuJ49qjKJIVcCNT95TFI+3O4n5hFGhIJJLfMpJ+8M5J592nZrqtt7rVrTTv187ba26PS68181b\/AIJLKcRkglSSuflaQ5yuMIhRsYycrtC\/eJABIhJZQTGjtjeC0ihdu0ENgM4dgGUldkZVlxtbA3l7LODlXj25zyrMWye4YAemMFehJAI5cIxkvuCOMljGgXfkk7W4Ynhic\/dycleFWhPTum1ffTbR79NN3faz1Fyxu2\/JL5fl6qz6Luo0MUgEjblIyQXRQwU8sgJyVXKjoRkdWyCCGMMVct8oHyjAO4FiBkjB24PIBYFgCO2H43EhkAxgI25jzvyC6EIM5ySNwzggDb0VxLtYKoIA+XadrE98qTgHoMZOeKa0t5pbvppe1116ry9BtLtuuqXVL79PTZPfQYY2yzBQMjnAwWxkZyMcgEEEg4HQEMAGnYYwjBGO5QQyAlsk5Hzc5xk5bI4yWyeWxmXaS+IQSclss2MZBG07QoPXucZ65phZHVi7BgCpJ+ZQCNndF3DnJBC88jGOavyWtnbr\/T0f3kuPklqtFdXs7LZWSd+a+nn3Hooxti2xeWWDrEFIyVXrgDHGDgDO3BxgiimmNvLIheXJBKqzlOeuM7d2MgjLMTx0B5BSulu1p3fp3v6\/Jeo0kt0r6bJvt6Wt\/XdfOqWr4\/dRIq5JAYEKSB\/DkopC5PPPIJHcm1bacY4yzNCZHBkk3SRgxqoHLIsmecqB0AK4OCQtbyAlTHK0zkggo0kbdRlmIdgVOQcDkFc8YU5zHL7ituuyKX5JHgjcmTClVBdYygfgZwZGYBCQhJrC6Vrq1rWSs+qstLJve6vt3trv70tutt01pZdemu2+trOyIFjhmUvvjj3KUyVCu7cgqucFio2k8YAb94QSDVRLO1JYh42ZFysoXC5wTtB2gnDdQnIbGcbgKtSqqFhsnkVsojtJC5RtqAbdxhUbjhCJVPzZGNgLFrRxZUR2OMDc7IqBmDYUp5S5V5ACXb5sLt2gv90ZSqK6bS7aXu9VtHprq312TasbRhJK190t2rdL6p3a17db2Vlam2nwO5kDsGdcKH+UEjI3Fm2tghcAggKMADCk1bXSPJXeoLfuzIyo2dnz4BdiMKSOVUli64KjkmteB4iwItissQjCGVV3J5aBY8K8OAyneSqqBkp5Zx95EnkZkEMSI+SfJCIPMyJC5\/eWzAJnYVjR1ZAocFN5wueK262SaT62b3urfP0vqVyTaV5aX1TabW3ya23bXysYospT+9SZByUEJKTDc4bDkJuIAXadmQynqKY8cpdlcBzHDjyirKpLgNuQ7dhYjnDMBwfmPyg74hji8xnVFYsXZ\/MWBy7KAUB+aRiThYyrM4zhUBD7c3VLy4tljhSC2t4VDB5Ji8b3HmNxBG4MXm84w2+RvL2KEUsGc9ooq\/wq2yvN7dFo9LdtNE02rh7N3avF\/wAqul203d1897+873XnWozHTvMlnbc7Q77WGK5tE83zGKrsaYRqrOcgI8iltpCh2GD8\/fErU9bkuEhN7LpNtPaPIPtCyTrIhjZo1At1kSV2YPgwP5alQGbkKPbvELyXiu13bw6bYzySh977EQq2YjLe39tNbzzybJXK272qKGwAwPzfNfjbVLbTmubC1tbKSWESRrMwsrBzA6F0hK6XeF3WLCNHElvKRgyBUUnzObE4nlpvWy3TcnG9kn0SldrVtNXSuzejRbkk099Va6WySWr+FW6ytol1t8favm\/uLstFcXNxHIdtxdQfZzt+UAos3kxtEOHP71WQKxmQBlA567gvBbRnzEhVnACFZFkYNhhstrWSR5AMMQS5JLRlgD8tdV4gsIjcyXkwuRI0izvM6XIRHeMBCA43Om5iEHltFlQzr5pfHLXkcEcwE8MU0csJaGW4tkLFzufbFAjyKqiSP\/Xu05QsZDDJgxV8PiKk2pJLla0aU3FNOSkm1y3u79W3e69pZWf1VCnFKKeumqcbtaJPZ27a6uz5rWWvFeIrGK3eJZddvLQyuSiSwXMDr8wVlVGtJG3NvP8ArcRg\/cLbSWpJbzxWwks9VuLmCRZQkby3qibYuTMkcaqk0JCM6GJ5Nx3JuY7tvS3dpLMIxBbsqKxO+K1eQxxqWiUW7xSwIqb5nlKCOGIyENLHviAqC8m1m1zbx3V+tskkPyC\/2MitEybTNcFVjzIzOiq8pXbHv3ylZpeH2tpS1l1VldvdL7UlbbaTs3tY7OTSKSi0mpWfKrPS7vy21b01smtWk1fyfUtNge\/E1s4uJQVNzOGMUCyYVmIS58twBufmUZyy8jaS3S6fpLKI99ssxLFt0RWQsp5CmTK5yRnAO5QTswF+XXl0a0+0vIW1BIw0fzmZbhWmYoLhhcZ5aMxuwGwxxly+EBwex02yt7iDyZI5N29cz7fIf9z5Yw08TyXLMwJUqJYwxcnyo48MLw9eUZXtbXrKKdrXfLz8zW6s73d7PcVaEXFJveK+w2tLW92nKLfyS6NWV78HL4fvJ5ZFS3yr2jSK7zBSFEhVVjS4QKGZlkI8ttwK7WUAlRmajoBmsgXtDcyW8GCZ4pg6yBhHGFjtoblpFjbLSSMfmIUqMoGf3WLTVa2jjtI1QvHFHaKy7J51Xe3mPKGeQl3JkLSSO00mfMbeFVKmoaFcWlxbyLZyyybZwbh3kjkVnYx+QjGKa3hWVVUq0oIRVYRuJJdx6a+IcqW+spLW6k372iVlG7TW8Y2VtLyRxRppVOV2UVZtJONlFRbcrt2vs25Jtu1krnzfb\/DTWNXuzcrY3DwK2x2g0zWhGHQ7pX86XT47OFhgks2YI5CkUxhds19u\/CX4ZjSbS2gvY45pHDSRRy38JZEJ3F5IYriWQyIMnjKqSQG2qhbH0TwffX5gurga5ZwLcJ9otbrUYLeG6PyPE1zJZ6XcSTgKGLFpFILkidQTn7G8FaJDaW8dvFPJGoji4RppBHNn5mWWa7jmKneyKpgj2q7BRwuHgqak+ea0tdSdtW7Xts7b2Tu\/J3ZWIm3GKUk+XdJt8ui3afZrZWcer2MafwJatYvm2jLJCFAiVYoiBtA+88u0rjDEEMAcMvysK8l8N\/CW0vfE93eXOmo0VvlbczzQvGjKykEPLbzOJWYx7AxZixcgOCpb7CmsYpYliCPIjHO\/dKuTglc5kbG0KB8zgsCo5DEnO0zSorO7kkLusTylmjnK+UpVY1IVRgt5oByZZZWBAxtyN3TUp05TpppOzbvazvolzb37pa7a36RTqThGTi7XWyerWmqWl9L727W3b+Ofi78ENE1DR5LlfD2m3l0hikVDGiu6sxB+dI4ztLKp4mUSdV28E0\/hb8FPCPh7w\/PPP4eji1GRVkuJozHfPEqrujCuGuJ4kTdnYUTdgj5lG4\/W\/jiw+3wP5LzLbN98xIZGKHYfkXfG5YktkhgNuQSQSK560toLfT\/I8q2VgkvmM1kih4lBMQMkrTPHIoG1cyEuMhjhQD5U4U4V5Pliko2S5UtWorm5bLo77u19N7nfTq1JUIx55PVX96Ss+ZPldrpaevS97nxjqHwF8OeJvFc982i2LRxSHyJm022t3Zsl0zKJrGaVwBuZSowNoUhmWEN1f4Z6fpMM0dvDYExxojKkCMSUjXzGMkbOQXCvKFe6VWEm13k8tWk+mpwtlcXJtREGmbdL5dvb5aJUESkb5FCsqBVDJmQIn7sHIQeXeIJLZFliEcxhHziNymHlkLOQQIY\/4gysrKArgOCH+auKsqcKbbSc5O+jitN0nq910bvutVZvpjOpJwi5PlSilG+qVou\/Sz20282lZfMmueFLI\/ZLeJEt3mVjH5wkbzGUguqeT56+aiRuVjPAAbK+WA8VTTvAm8Syxm3nMcxBIm0vfNGzZKq9xqEYZkBKPHHAjI5SRoVBAT1+7t2vtitIqNA0jBpfJM+187wZQVmfzFJIBDIAQVjw7h+msrKOGKFbGR5WZMM728rmB8AExqDCBhgGPJRueAuAFCu2oK+iSd2249LpaNdLbt77vQc4SjdvWS2d1qrpp30fXTfrZPQ+f18FXEGpwmHTL25hdVHlwBJbeKRd215W\/tKOMKoLKubKRfkcqUGSPQ7TwlCtu3nQywzO7SlxDbM8e1D+7keI5AU52MDAI8Ak7AWr2C3s2gXBlnuZSgDO8SJGSADhVV5HUBiFHzAAZOwschzxo6xoyj925cKgwxlBKySb1CEOA24Y2qWPy5BIrdVbXa5Umn6ttLRWffbbTU51K70u0uVJppu67JpK6afbrfVXPHfDXh2\/t9fkuLOSFliY\/bSdRW9lWZYUQW\/lyXSxb0Duf9YrlSAHbIK+5voB1G6sx5KxbUQsVKRyjeo3MHjldQ3lhjlncEFWw+wkc1FaiC9SSCzDgsGZmtyVQg\/LKXUhvNKrgMWPy4VVBHPplhFcShQNzyZ+eNssykgf3sg5yVKggeoI3AEK\/MpRk7KU1O1\/evotW3ez1d7e8vUbhdqSdmoqKd7X0Sd9bW30s7Lsnp2uj+G7dLVI08qWQI4RHkd2kTAQtNLcFmYozjYq7HDAZbyvMFeYfEbwBZ3eo6bPDFGW85mu7dpi8PkqIWj8q3jiRlYsuS0vQEuJQOvr2kXNtDaRwyiSYQg\/K8MRZGJOY9zxMwibILI2fQsWOKparcNJ5bx2sjOXK7XjjCqWP7skxxxiXP8ACX3KF4AVBg9lbEwq0UnZJWV1byaatFNWfXdp2srMypUpU6rlqo63bvfa13d763TS8rtuxxWr6La2+lW1mmmRpJcQRhJE0+5aBUCgurTGNo0IZstPPKqK4K+RJIQXueFfBlra6ZBvls28nc7SLO3lMCNpVVlsownzjJ5CZ3IjtGTv6jUQ89pbwzW4ULCg+XqpKFes24o43HCrkMSQGzkBbeSaytIlgjjRyrozSBDIyqGGAfLVSMEZAY7S3Ix053XvU5tX7qSduW2zTaau3s7rp7vU2dP93y6q8ufvd973ulbol3etrrxfxP4Rsry9kkWC1S4QSxQmODftjGSoaVPLiKxhpFw6IrgLIm87kkpaP4Sg061uIt6PPGiiFxBFsZCrbfNuhbI4fzBIWYKpdmCytJtWQ+kX9tNLKZZEhUyltwGQSNuAcEYcH7uWOOmcEOKoLZhIJIvLIWQMuVLBBkgqx6Acqeud2WDDf08+dZqcrXjfmtdOz0S10TWm6ez01ubcjULKzWite6VrNrXu781ra3V+\/wAieL\/hHout6xdXmp6aJbmRVadZpNUS0uPkVXiLWl9FbGVnLFoY0hUq7EcxhVxNN+F9ja36LpWm6NZW8Q3hbSxiuncgt5j3N\/qLXchJJKurkKEjQJGY2lE3014g0G3luEullWJ9iLKi2+VcZCB3HyAOFYEOQwTDIDlWIu2mnWENiIblZHuvOeSC6juvuIU2tGbdJZTjIJzuVQx+YMQrp5k51FJ3lqutrXdlt12010S8mm+iFSEIrROTajZ3aXKkrtXSeysviV+ZNyab8fj8C27RhDCd8EbBbaG1tUgLv5LPOEjtUTzEZAFcfIN7KchYGTvdI8H2trZqzsyuYhl85LShDHuePLBpNjCAhoysixgEk7g3oGm2kGzdLbmU4wGLzMFBAGUAjRD91GbIwFPc4c6f2SYSFoovl5LM4O4EfKMfuw2d33DnIABAIJ3K9SVnzu+jbu1e9td7tbJpq3TfcU5SUY2SS3SSVo9r8uy1a1er1TTseVaf4UtFvgE2iEyF3hkiVjK6hiXcCWEb1JOZdrsVZlWNQQq6+seHbbBYg3SeUyLCgeKVs\/OCsnmg8BlQs7Fm27QwBIPcR6dJ5gIY7gxw5++QRzkFFZsKcFTklM9AwFOntLdxi5cfKFUAD5AzfdOWCkM2MMyEfMoGeayUqkU1d3cr6uyWkUt27W3\/ACdkjRqL5W5RvFdFG+8FK+ibbTle1tuWLt8Px14y+F+m6jcPLc2E8DlxM4muLlkn2AnOySaZWQuCx\/1i5xIpTIB8sl+GvlRljPbHaTGlrNJFcKYwSqRRrKY0hkZTGGKyDbsWNd4TA+2NYsLEyu9wZ1yQEdBGDwTjIYRMRkfMm8nkrwOK4LUdDhuFZ9PMxkAzvkt7R3Y8hSQzMWBG5CdjEncMqclsJOSk7ttbXd9bNaPXVN2a18\/M7KdRODVkor3Vppo1s3d9X6p+Z4Rp+gWSXCWxtbmx1P7KwSeOQxb1ZV3RnYbRgpJO0ee+FyIwu\/JzX8KRW7tcXkQYldwMyB0Ll1DB5ppZJQrKg25JAKqCXClq9+h8KzXLrLfsRODHtdYo4Tg\/Mgby1PDAkHPDFhluQK0LjwqLKMmS0trsSADMyoWAXkEMI4mYYwR8nII+XnaXzt68zs+8n1ttrfXpfS\/RhzRbcVLW15J2tdWWraXNfu3e33nkemeHp5WV38iK12gwRJqU8KAyJy22C4HyFmDlVjCFmVQuDltrTtGVbiSB7G0leFokinEV9eKiiRGJMk87qzGTJGYwUICA4Az6Pp2iWs0oM8aQsqsIzxtjYBSqBpFGwZ+ZCowD\/vYafyFsLmcRmKSFyEYl5PmYAkEfO6KAh4B4YlimOtGvLdNq73S072SstfW1lurWTj2y5nBR5pJL4VZJJq6V73s73vqrLb4jhV8NW5kkmvI7YeYpKS29hbqVwSRu86SZ1ZSSQyiNTgneCVaq11pE0CMkU24SyBl3ZjdWVsxsWhcc7QVG92IDFiyAcei+XbzwMgiCCNR8yhY84IY5l9AwyDwo+6FU5DU5LdJFMSqOhGdySHBG3gvgEZXaSQV+9twWOBLdq1ttbauy7\/f007bE1KjatyWldW1Sulbyb95L5t28jzaSygMyy3tjbupaLznDzrczxgAKiTu8pVgTgNs2kgM0ZYgmSOyjlIdZ5bUeYTHHEdjGEsNiyAxBZWCBAzqy7+DGsa\/JXYDw5HcTqJ3IBIJAjZTuPUMsUjR5GCWJUgbemRxoQ6NZWcgVXR2KgDEYJC88YIQu2SoClhkEqy7tu2tWkuazWuumyjppfZJXu7NJXW949qoPRttxW66Rsm7O663b30STbV3zEB1aCVvs+p38tqsm9DNczrH8xOOfN8nG3JCFSMsq5GCD3UN\/LPbot158l0GBUmT5H4XbuFvGhjUZJ4dsYIYspY1DBFpIdY9zHO7O3AYdBgOuXwR8xDBVxnOSdracccO8LGAqN8pdsE8rtO7Kuc5yxAULk8jGVDitL3T1a6u10mtVo3deTb0WyvjVak0+WSdk3JppuzvZN6vz95XSv0HKlzGWaFooi8e2QeWZkcmRdok8xSx2su4BUZcoNpFcnr8H2iR3uJY53KbWaPzIgz44LEBSmSAQAFUn5WLEkDvYLeED95PmM54+6c4GCMBCwUKxO3PG3gY557WksrZWMDGaUsxxtYqFQnhmLgtnJLDgsSAc4Bq7ySfvXV2mtley7aJP531S0VjKDbntd2cbqPdLVyd3vqr6Ls9DyCSyCyoPtFyGXO2OO98xF3AjawnkGULKvy4+TA3OeBV20063mxlYbZUySV3bHHUboxFIm4eq92XBGBjqbK1s7qZpJlEW0fMGYxx4KnIK+WWcEnAAxuXHGeTs2UNpBdOy25KkgAkRkyAnCjCAZ3EAEsHOeG4GBUW726OyuraaJNpNOz6XWuu+jk95TS9xxd0tLO6bdkru+3rez21GaLptoNqy3EwR\/kzBcOeBhTD5YaNygXgqIQ2GKDBYK3t2k6NoSpaCCCa7lkCL5YQxtGxXAVhLACOdpZAxMfzAqHD48+jktTz9n2ryqhURMgDPmErGuCNpPIB75B2gdl4cuGluYg0ZVd2N5bdtGGJ+YlcbsDJ6sMgqQefZwLhGcFUpqXPJJczbSfNFc3KrJOzts1fZK2nnYqUnHRuKS1b2s7WVtGlq9N9bt2bv9GfDbThBfyMtxYw2hjEQj2p9qHOXdGEjndJlcPtjJUAEFvu\/ZPhb7H9lWSCN0Chojv8ALkkdOMvvePzMHg4y2P4QMGvlPwRp6faYJh5cwkQF4gcgqpC4B2NIMjADNnkbUIUDH0jol61reQWkcapC6nMSJyCABubqWBOTkEgAHj7xH6zlUVTw8Y8qhfVJWas9rJLlS01XVnw2ZXq1Jcrba1d9E7aSvqm7XXk9lvZ+w26wqqCBdrLtBYksxO7J+X5UIILfLjAORkgYq+HZV\/eLEHB+XywoztIIVvvMCAACcHllORw1ZNjKgHmFQucFgwIPfBGSCecbsEEjI4BIGodkoBTABIyEzkLnjdtz1ALDOQDgYAyx9R6\/8HX+ttOx5Kik1a1utrt9N1v06p6ve2hcjWT\/AGVDMxOBnJzjqDxgbc4VTwQcEmpyBxgjBA56k8ZJHbBx7HOe3SIYKjHHXHykjtkZHHfIycYPQkGn4Izk8gAnqP8ADpnnJxk5xg8w2r79WtE\/Lquv3p2tpcGur06W16W0+Sf4CsVKZYsOP4TgY9ueDjBPcZ4AOcMdlQZRS2TkAtjGQOpx15AB9SOMEmmuXJ4AwCMnoSCe3zZBx2GCAQAcZDQnzBjGWJz1VieM7s5YdeQD1J2ht2SwFG2\/e++j26evkne3zOi167a+Xa\/6N\/grAkJDblJHOCCTg7TzyOp6AAE8jHciN0dskS4QchSVOMHnGc46d\/r0yAxWlUYbnJAXGAPu4BySDyc4wpIAOAQFFNyfmVnyTnC428E9RgA5AUsSOFCk9gapJdNFfTW9\/vvbd7BbzX59v8+6W6uMWUO7IQu4En94wbJGQM5zkhuSoJAzgcbQyXEkwXhhtyu0gjPO44A5IIxhiM\/KVAAGRUP2YK5IZ8Etltxy3PUkBjuBIGCDuIPQAAyMuOh+U4Jfb\/e3DII+bJAGSpGMnHO0F\/1\/X9fcF3vaN9bJNu2kbdbpvppp12VhJ8KAzuS2SW3DYM4IKjgcHIKjHfIIAFFRPAT8+Wx6lQQVBJU5LK34hTg5HOM0Un0\/yv1Xl39O+ltGrvVK\/dppdVpZxvp22TVkeJQmWWSPdH94kOXjEgwwwRku\/QjgLgbuAcKMXXl8guhhUqrxkyLGUIdgABsUgDGDgjYzDO4h2YmWO2UGMq7b8tklmHQkYBAOCPXb6Zxgmk+zxyOyA4wc8uxB7\/3QGAxkDbnGD1HHJ71nezs7tNJt\/C7Nt313031u73OnlV1pyrS7tZLZJvXRrbfe2+xViFqbjIbJ2qHN1GZR0wNiqqLkElxw27jI7C75cZaKNmSGGFm2GKLZvbIClVAZVKkHO1CoGAwBGRLJGqhAuFIUAArknaCM7gpbJKnk\/LuIxkYelM0y4AALLnO45ycEZHA5xj5SCSeB1wc5NRV5NLXXRpLy1u1ZvVLTW\/Q0UXo0rWSa1S0VtU+W9rdfkr7krSEgrGskispjLSiJwFLcN5nlk4O4nBJwCQGZSaSSCNIWM7B8RyLGU3x\/KeqkKUXJy2CF+baTkgAmFPPSMzM7lw4ZRkEKGPfIxtwe5BICkAblxVZ5ZwxODIvyqQdoGDk5bJAyD8wJyuM8g5qXJKzktdWkt7JK\/k7b7Ldq+ty4wd1yuyvd2bvtsrd7q6bsrbOwrrNEFmSbKvGqxxfPJHHGgLAiF8IGztJZzvDdWbAFcveTCRZDcFNvmLJHGhYSF2Iyx2kKSjqNv3Qu1ivIUnqmctGRPEPMUkbt+AQAFAZF5GOOo57EEAHBvYwse9Y0Eitu3Y52nnmTOdpw2D8uPmINZTqN7fDZJJpNttpSTXm1e2mqRSgkut+rVlpdPVqzdrWu\/eevfTyTxJLcXNpPBFA4V02SmWG2lQJFIARLJIszncyjeVb51IyM5FfN3jJnnjxNGlxqAV0MsWyG2EChgAkcaBNwLOjI6+WTvPAAC\/VWrERRzLM7obhdqs0hc5B24wVGdwIziTcfuheAK8J8QeGFaCWSC5Zy8kpSRZWZQXxy0buzYGTnaCDjorDNeXim2npo1rrqmnq7p6Nptpp6ar09DDwvu2mm2nbRpqKbUt7dGrarW6a0+QNa0W81SZJRM9wbcBDPJiERqryOAmxgoUgkbQPLAbO5t7VzEmkOqGKS5luIVO2PYSRFvYs0qOXDKxYbtqkjoCQATXv2q6fPbwPbeUIyzkmRhGylnOSQzbGCOwOWVQVAHO5cjxq7sb2OWeCKYxoxbewO2M72yQxbgBvYtxjAOcD5jF0o05KT9+VXWT6Jq2ij15t7v5I+gw03JO7jFU2lFWTT1Wt\/stXfLFaJb7o4u4sbmzkwNSKQxo2ApZHxt2ojEMA2GIA+TkDGQScQJaw7Xe+llmdsmGUvnawOVb5Sit8xZhlMKCSFBzjavrKW4ijjlBkZCdxQBSAS4yNp2yKAfvAHgKWAbk0Y7GQyLDNLIEUJhGcZONgUFzncmdvPyjG7kA5Ty22nZy97Xda2SVleyvJa62Vkul9euOyUrp7rZW22aSa0fZ2tbrrkPaqwEbvtUtuDqAAXcAsc79\/zD7hbqwCEHaQer0SwgZlMYWeQqCZH3KVyoIywOGA2ltuDltxGAWqOS1tsqm7cRhWXKn5iQMK\/y5ywGSSNwy3YiulsLKKKIBA8Z3N5fzgALksT0HC7jhioYtkEoTUQnZrW72fZ7JNau19PLd621qWqt33TtaV16Xto9trJvsadrZwHaxVFJcjcF5AABCJgDaSSqkknp8yqpArdWziup1Z0kPlgOjebPGCy4AYBXWOQFSQwKhDknb8was+3TdsB3KQeGZQD\/shWyF2kq+4DaSGyMHDR9laERw7lJZsZzwVA4IGeccDaGyGGMDc2GXVTu027W0tfRWas12etr662djmkmmko66p+81rdWd0tX000\/lTT06vQ0ndVCxwxrGDDt2yZYEZBZHUryAdu7IyuJNyli3t\/hy8WCNY7h7d9u3b8gDArjaDIFUFsNgMcMeOMqu7xvRomkTcZH2k9CcJnBLZRvmBQbcgZAXg5IVh3eniNniEjOSoAD7iQAQByocAjnkEsAQeRXqU63LCLi1KVo3TSV9VZJJO\/ya63vpfl9kmk5JpNcyb36X6pO7XVaux68LmJE3pHChOCFY4xggLwVA3AjIUngAYwCapm7DShfKibccMGXP8AD\/D94FSTkkbSABvzg5yoJ444kQuXXAw24Fhyo5Jx93I4AJIywwRwyS4hznkMdxB7DCgA5PAPPTO0H5uSoqpVrq6a0avHR\/yuy07LdO\/S97XI09Vo2k2r2dtNPLqnppbq1ZXl1u6u\/KZYljUlVyNzgNxyAM8nGOQQT91cHp5dq+pvshSNimSDMEB+YFioz5qNtJx94hSSxOWYA10etao4VgXl3AAYJAXByMgochSBjuCMEADLV5xd3rsWLBAuDjcS5K56DeR6MQSqkEjI6A+dVqOTcpbPtskrPVLbbSy6b3VztpQcUm1azTjvZ2avvd\/CrJ31ert0zL29geZt8x2og2xy4+QgbSxKFV6gFge3QhcCvP8AxA9lO5ZZ8yjZggsu3A2jcjKSM84ww2kAjGDWzqc0atKxIDNuKguBuGDkKTjnII4A5wN2GyeGuQtzI2BK5D5DFww4OdrfeOCXchcMNu4tncFPlV68ZKUZWs+vTW625umnR9baXZ0QVpc2tl2tovdvfstNdU2ntZsihtDMBtkV+BjaVYDBG5iQBxgkAKcYY5GCM9JZxCJ90WVJzuILEg4YsRhSdqjcB8qsm5QNpXNYVusaImc5TqMnrnJAAXqGJwQ3UAkgH5tuyudpO5txCswyTnOWOFJKkYI4yMKSAPvHOlOyilHRaWv1lorO1tL2kkrXT2TsxVHJ3lb8LaNdNE90r636XudLbwqzB5N68FcplSDhVLLkggtt+YnA4O5DxhjWcNvKXTBX7pDM5J2uSxIMisAgySQ20HAxnDMLeK2Gwy5AYESE+vIO0E5Gfmz1AJKnLBouEdu20DChnIweDkngqxBwQckDI3clWucYTSUm7t3j0etrWf8Aduu+77WOeMnHazbet9ne293031vuT216YZmjjdF83JfKHow2sqkZz9wY5HL5+8M1umS8tkEtpGZJ3OSEAXPqABt5wDjzCMZILEHFc+sUTyFwACGB5IYg\/MVy2SCOQOwbOFBJJPR28kkaqVLgDaV2nngcZUA9R8yqM5YdSSS+EYwi3ZNOy1tzWd1Z62Sdnd2v1d7aHUnJpK9r9LuOmj7u616qyv8Af2WkGS7slN1vhmJzwMOOg+csWy7LjaT8gLbSAwUCxeOEIUfvNpDbmfnAGcnCdsZ4JO3blWDlaoabMxUiTcNybRvLDIJGDjoQQDxtDHBxnbmr1xlWPTkklBjgDJwQN2CAMY5UEjgDgdaa5IpdUrt9VddNen3XfqLVu17vVb2elne7v8ktdL21YXF5M6KCq5K7VLbt2PlAXrkkE42kZz8yhmqmytPCoMpT5t5MZOSwIKgBQmRuI4ILE8jJORaZiIAANpIGchVxgAfNkbcLgcENtAJG0YDVopJfL2HO1RhsnDEbgTwNuFwMHPAAH3RtC5SktNemrTto+VbXWjb\/ALqumrXKiv7uqs7626fzLa++iveza0M65QgHdtJAIOQem1ScnA+bk\/eGSxO05wTmb5tu0biquSdwIAyucA8HGSCAc4clhjJLbV0QQW5ywI64GcfLkAjByPl5C7iqhfk5pxKoLEAque+CAxIIb51xkZIXGDhlwMoRWDbTsrpbaJ2t7mjeln6vZPa1zbl93VWs77X0stV+lttU2cfqlvPMAnk5UgHCpuOcsRhSGVzgqN3GPlIHIdobSxBOZFkwOPnARclQcCMKcDcMbcHGOvJFdXcOrsV6gcqQcE4bnODnJ3Yx2y5wpzmFFYsCE5bp5hUknGC5Ay2TnDA8E9OS1czpXm3zPVp7XavZaN620dtHbSyejSUO70um1o7ttJbq1u1n0V72Jre0fauxdrE7dqoRwwYHdjarY4UlcDIUHlfl0f7OkaIszhdoOCwcsRnOAwUsByNwxtUptHTJsWsJGDtKngYVjtIII6spIPPQEZH97I266xtIhypJw2Tn0PyAEqBg5OQWIwCGHOR0cmkk4tqy20Wlu1r9LO3a93dI5uWyT2b0002tbdJ2b28+iOUisczYLYJUnoRkKMksznPXkEYBUnOcAs670gMmVAkJO3GCWP3lGMg8thwxAAPIUYGB0DRFJPmI3YJUKAwYjABXoo6jqTtzy+dzLDMZOjHjOQu8AY55yoJ5wSDgYzyASQeeVJRTT5pN63e92k7aat97auz2NE097NONkteity39F3W19evmmq6VGinziVG7IAR3yCcD7i7lyMYwRnkAgHB4xrOOGULGyZG5jwYtwIYBf3m7lTkcewI216pqabwRuYYBU5Of4tu5Rlt45IOTxnGCQFHBXEM4kBClxu4xHl0BLN95goyQeAWJXDheRxw1I8r0i10s97vuum\/Tba19+qnyuylK26a2TeiunbVJcvRK9tL3G2kRC7ZChK4KlTvUDaepVSA5wc7iSflAI2gl8u6UrGZV2jJO2FcYEjAjezMCflwOMDB2qWK7rsFm5QllwScfvCBzjO3AkcAYxyPlORkggLUzabI25tqqu0klW2jkjADfeAOWGFOWHYEYqEr2te\/XRdUumrVnfVeREoxi5W667J27O+6Wm8V0umcx9nt7d2IZ2255DlVzhsgIhHy9OM7S3IHzAVzt7MrXCxqA5yvX+LAYYYlWLEZYcE5GexAHU6lYSQMzgZXDZPyPxhV5diWOCSQSTgDd8pznnUspJJQxUk7s8tkL8xO07M4ycjknJP3QeKtxdkkm7vqvKOzvt00equ9NDOnOCetlZPV3TUkkr7t3vbfRXTTIZwPIaNUw20gvsAILMpJIPuzEM7jjbuJHDc3JDLGSUmcDO1kLMpAGw7RxtHBPyDJU8bAeD2FxbME53YAAwGXd\/F8oHYDLYwOehwdwrl7wSKCMAjOcszdRlBk5G07iqt0yOAc5DChzdHr287O67JbW18tbt6xq6NX0teN7ptu3noo3u9Er7LVMzjGyMcznJxwDJhd3QjO08bSQSxLAjcFPNTQQDJkZj2KkglsjrksGOc4yRjhSQ2ASMwS3DkDO0DkkMORkYzjAG5ipdiW6ls53E7dvOmzLklj06buCedufm4YgneSWIB+YNiuVtxs3rdXs7q+ib89r6rolqDrKz5o8zt03UvV99HpeyvukkLD5ckqttRtuDnDbxywAyBtCk56rgk8HC7T18GwoEjjAICgMHYkhcAYAJIOSdpAYAsODlhXLQRLJL5hBGCrDAJGeVzwQNwxnP3sYGAhC101rtjwMKobAXlG52h1PQjPBBBOAVBbjAoULb9Pu1ta+yWt73vvboY1Ki05eitbWyate1mt\/Ta11ta3Iknljy9wJBwMNuJZiScc5OeNpIPGck7geO1WB8OxEjAZUqeVYKSw2gYUbmOS2SGx3BGPQfM3R4Vl+UZX5gCd3UY35\/DAyMBcgZPLaysjRuAynJbIz1DAHBB437sjIQ4BxlgTVqLlZLu9lsnbZ+V116JbvXGnNKSvFbq6d27K11otW77PRPe9rHCG4MYIBVQSFI2k5ztAOHwSAMhjwCo54CitTSnJk8wkE8MdwbjDcAcg8fdznKksGJAGcWSBjIdybhk8kngEFgFAGV4XI+XO3J6AVvaezBAkePu8kgcEOcEA7A3ynAAYgknkEfJUE01furXejvZfa1s0ml6LVa22c00rLV6Suk91a6b122utHbzS7W1vI\/kXaHfLZLgYQhVyMKCc4GSQQOmT97PoPh1RI6bGGWK+WuMg5GDgDIByWHykHAGCFXB8vtYmMoVEyQwypCk56E9RwowAo3EqwU5xgeo+HJBbPC7bmXKDCMvAHzZBXKsRnC84wAechh7eWtzr0k0vdlGT5rJrXmulft\/eau9NzzMW1CLcdXJK79XGXS6V17uiva26dj6Q8CPLZz26tuYsASFJ6nBBUEsDg9SpIwrYJBxX1V4btxMyzEbmGMN0YAgZPGVye5xgjI2vjFfL\/AIFH2i5SQBFQAHaJFLZLZJ4DD7655JJwdxx0+sNCIhtVKKQRuZj94kgZypz0I27Ty2AOoANfrGWRcaEd2mlbXe+t9UrWu9\/PzPh8ynHnbtq2rtddnrvp2t6vY6\/7MSYyrMAMFvmBGABzwQeCc\/KeOBnIBOvaSclflCqhCEsevBG7OByMdAAf97riQTM5AG52JCkEgjjGQR0K5BJJ7kjOcgblvbghfm28cqG3YIyeQxyBuxk85JAyMNt9L\/hzzFa7drKyu\/uVtEt9b3vfW1umwhUDOMbiCeDk57cfxDHOR15I7h2QcZXB4wecA8rz7dCcgYycjANNVSQOehA4OM4z69RyAV7cH1w4jnPIHQDP4g5A6Z65BJHTIwDn7ret1d21+\/qtLbafkK+\/pb5aWW3TzfnutVypyP5Zzk9QCBwecAnoRnOQSWMdoGQevoSRkgjocHv16DnkDgd9oIGBgZ+Y9OeeCOwPpjIxkLmombfkZ6E856kDuehwc5AOD909xVKKXW\/4LWz0\/wA7\/kL8Bssi42uTyR0yODnHQY5AOVyDjOM4AFJyCzFSRnI3Ekk5J56kFTk4\/wBnGOpqZ2UEcBidvBYEZA4LEHrg5JJIYADnORCDu+U4IKtjJY4JyeAMjJPQAkMMADOMUaRstfe2elt9r2t00W+j0ER1UgZ3DJ5G44A74644yxxngMcFUISSRScLt5A+Xgn7q4GTySCeRj7xHTGRE\/ykYBBw4xkgjPB5J3EY+UAnGDzkYqM9ASMEYyM5G7rg9uOuQO27oKLafP8AK39f5k9XrfSK087JpdL7JK3W6u07W4ZRhuAVweoOfl5GeDk8tuB5AGOTgEqJGCkbd2MHPAxnqcMTlSB8vzbgOQd2QtFG\/l815b3X9LX0m87\/AAt7a6\/3e3S97eV92rnlhBVGflQSeMAZyM49TgHGNpIJPQnmCOUgsR1DADHoDnvxj0POO2Sow592evB465HAAA\/EAgEcDAzwackfBHHYgbjyDkEdM8HGMg4Brzryvo7W\/Hbb02f3X6r1kkr31Ta0forJ6WXXdXu16EokbjoCADgjPYA8c84Azn6gghRSNIc5yWwTnA+XvgLxkLySDwOmQAvLDGpK4HIAHDNgn1A3DkkdM8nj0y+NQQQCeAflBPIXA6gEDjrkEDnuKl3clqklZtX1v07d\/wAn5NrTpqlb8Fou6+e\/4NedlQDGFOOgwcdRhSNoX5iQAADnrggCq8xQYHGcHbgdyePfJ+vQnHIAvNGnRtwYnPTt6HPtnaABycgknhj26kKQdzkHjnoSQpHJySOAR174rOfOn8S3sntro1dbW6Pp63SBW0\/ReS+7Ta5iyXUzNtTkZwSVwCMEdcYByBhsMDu9ABUNwZXi5BHy45JCjsMcc57bj1zxnk9GlnGF3kKWUtlSCSMDjAGMEMOBgZLZJHJGTeLhCQAxwANu7+H1IzwAARycbd3GDnJ6Su+tru\/pd7LW+v42W400\/Oz1PNdYspLhVTcwxk4Man5gTjDYDcYJ69VwCNwFeVeIVmsoZFBGFLEoR1IbgjJYFjuC5Iy2dxJXdu9uvVLqxkwoCnacHg7jgkjvzyQRgEY9K8u11BK8qt5Ug3NjBIOBt5zgkg7gAc5HGR\/FXmYqNneLeu\/W2ySb1t0e99N7pX9HCzb0e2+2rb8l00W+t9dtvnnXHnuYJEIwx5KlFceaSAWUiFWzz0BILYJDfxeJ6va6hAzn7y7iUBC7hhicHbxjaCSQcEbWXcSGP1Rq1lapCyNsUgrghN2B8wAJUj5mLN3GeCcYArxrXIEjDLsRwxbDBd23JJXAOFAXvtIICn8fExtJSjzttOCS5UtHtrazs3bTVLba6T9bD1OWWkU1J3s1rptyu2ujV7vrbRK54FNfXavz8shyHXYB1bhgQg+YgE87sYJ3KS0r59y01w5cB434XO5mxhixYjaMEgEbSOpIPILHtNSsIpJGwg3EsTgNnIIJO4ZGM54LDAxkleuM9ocBMKw3NxkgqSewyo4HJ5HKnHTnwKqetk77q1k09FrZdFot9L6OzPUjq4u2ltndXTSv620X\/DtmBa27mdTMu\/jdvyq5I3dAuduSMHIABUEgEgr2UbL5caKEwCR9xty5CgZ24XGcgY55LMRkgZUdmX5VduduV5C44JDEDHA2rn5vlJ+VlOBvWlk4QgcKSAM+YV6AbsYbqAMdjuIwGCk87jLS99Hp01XZO97p77NpK5onGKa0bvddN0rd\/wAet3qtr9o5QK3fhskKc85J4JO4BRnO09BkACu10\/OxSSdoBUbR2ZsH5iFKt17nOPl+\/iuatrZxwQmVKkHDKCAozndnBBxySc7cHHJPR2qldqjDZClc5GRxg8EbTwe5A4yRkMNI3tve7k3o1a9rLVq7b63vrZWSsctTXlWy0\/C1vldd0tNnbTsrCdkYhcgN0OwKAoA4XaMA5zsHTOVLKCwr0XSTuwZBnKryAu4+hBIzznpk4wQCcDd5baNsxuzk44HuACOCOOCTwOuT1C122n3eAoVmXAUBSQecZJwRg5OT1IDEHGQK9ChNcl30S0020b3Wje2j0ve97GDi7XVnrvazT0297ZXvd+SSR3rXEYQBeMEEZQNwB0IycYB6g4AOQBgVWNwfm+Uqeck5Uk7fTqcfwkZ5zuJbO7Iju96kMAD0G1sZYdBzjB5PAJ3AE8ggGvNcsCRkLtJYL2GG46ZC7sDJAbnpxnNOadtbWtvpquVpO3fpf\/t1bDUOXXXo7u1r3vp56+qXW9yrrUhbneTjIYfOAAMd+fYHqDwMgHbXD3MjBXJQkkAf3ixyByS24\/KCxLYAA543k9HfXCtnaQQAASMk9BnGA45U5BCg9Qc4CnlryZVJJXBYcjAwDkBSdvUnDbflJIyQCQcctZu1k0ua695b3S9bd9GveVnq3bpSkoxT0vfZb7WstraWfqrXZxV+RLIVZMZJ27mJIxwSCcEDPQNuUkAkY+Zufkg8sttPzZXd8uNxGGPJP3csTt5wccDk10d625jxhcYJODk5Bwcc8c4OM7eOi85TKmQDt34XnndySp65yCoPUkHo+R18yUIuV238V+2qs3e6dumiSbszWLaSe23d9rX3Tvpa21vVFZ4WZd\/BJBYsrdW6nleflwcsCFAAGMnbVq3jOwlsb\/nUgYxwO5JOcHe2V2ngbHUjaBssAvXcMHGODkZIBBb0DZGQ20DHLBISwySS2OjHB6\/McAAsOWJGBnJJAD5rqikklb3bW+T1b1d2lryrXRaKyuZSk7N9dOru7q1lbRbq7sm7WNaItjaVxkLwNuDyoIA7A5JzjOCSPm+WrRA+h5OcA8dcc8ngEdAAOQctxQjYHPUMfm3AE4Jyc4zhtuVwCx6jIznbcVuoBLAKckc4wQGz3JzgfLnuMbiFqlZXSaVvyaV2rel0k9DnvK6trffzvb1v5pvvpc0LY\/MOTyeSATnAODgE8jkgnjPQ9q6i2cfLnBztJ2AY3HklTk8DdyTgfTOBzNmiggDGPTAG4gAED7p+6Sv3vlIIxkDPSWoOAwCgnbwScBhtByRtJTOTnoMnrjbWUd07e6rLTW9reTb1Tdvkr7nXG9oqVujb0f8ALs21pt0\/yXTWm3ALBlCqT\/d45TngdOoBA6knhWrQfawOCSFyARwOAuGx02pgjP3+QQMA1mwDoc5Y5GAOMNnB3A4wAwwCOpC5Jyw0VQncThQxXsC3Azj5g3HAUZB2jj5TzWqvy2VmrfJp21u731une2l27aXaevNffSzj3cdmt2lffttdoerZjz95tobAGCM5OMEE5yvB5HUAdhAu5VORs4OQVA+pLAjdwC44bA3Dv81pU4xgc4BAXdnJI4I6qCAvYqpHBB2iJUZmK8nqcMAAQxzggjGCRwQcgHvwtGnuaq+m78trd9rfPrvWvvXas3q11TS83por7PW97GTcKN7YGc5yGOVx1BwuWBPBIHAU5HXa1LjoDyQAAQM8nIU4wWxwMllwOPlAwuzcRAksVUknqM5yQuFx1LZ4A442lV4OKflAEbSMZBHA6AEc4JLZHBI4xj5m5zjJWa03s73W7tv10e6W9lq1vrFq1t9rWt3SutOvuvs\/wM94nYZUEgAknC8dcEHOeMA\/dBBGSfl4fb2ju7ZIYgEsNpDA42quOCMcnBz1I9VrSWAfKoGPlJPByOjMuCxPpz0IIUqGzWlbwKGGcYyemAvGMKvAPBIAAAKjIOHLZIpcybb9b9bpLVdU9Xd2ej2ZEp6X0u72v2du+it5Wb+8ktrfamdozweVyM556jnPPcc4wQck6QiBQqoA6ADbgZxwOnI+VQMsCvHQ9HxbQoQDAOOuBwOg+oAHJHIHy5AzU+0fKQQcZJJO7HLYJGM+5GDuznkGtlaN+t3q7dFZJPut+y3troY2bs7rotHpdbbdbf5K+l8edAXZxuHUZCrkHBB6A4+8c7h6sCGBxE8YYYbsVAO47hkkHcWyxycKcksSeRwDV6YZbHydwQcgAkD5gc\/xfLngEkDA4Ga7d1AwWAzg8k5AYEMxIAIyB8uB9zC7cZSjZ2e9klbpZJLZt3Wy79Fq2bRbst9Fuvlre17a7aatvVnP31mCh2gk4bPyHBGT3JJPAbIXIDbgCWHHPm1jLjO1RuPJzhs4wCMbc5XBDAkqEAAON3azEEH5QDsIyoY8A8jPHHy5AYHBYBmxknKMQMgYquDzhjyevB4I4XAU8ElSD1wuUqcZK7t0a5dG3eLe3m2rq7T62s1rGWzb6+i6aafndPoihFp4JVVXH3McYPJPbOCxwrNkE5VQRjhr40xdu5kJ+UbeFJ\/hyAucA5VeGJXbnopwdO2h5AAQFOMEYU5U5LEEjkkKGA6AEryudRo1RQAVGAWA25BG487cZGBjIAO4fLjGA2HskpdE7K2u2y3u1qnH1\/u7u5Tejsumzk97Wd21q5NrVPW7WiV\/OtS01SpXYpGXGSjHZhVPJ7BSARkfwfx4Nc3FphjJJUEAqOm4E5wBlSRwcq5wSQACWYYX0nUVDB9oTBycDJIZuDkluG+pPsDznlmcA5KggYbnJGQV2g9upxz0IJYKclc50lFJq2rvZ69VyrRavZWautXZ9MJRbSs+u3e6T06ror7+t9OavdNjMTBQvKtwq5HTO0Dgg7dgJ+X5dwGflU+d6lYzBiDggk4AVTgnghV5wAcqPlUjGWIJwfY59pRvk6fdwpwFweASobbxxkZPOQq\/NXBaurhmA2glmyduDjqVLZIIxztBOTkHkgiOTeyXTsm07ddr33vZ6O5Ck1K19Glvrfb5Xeq6q17rW55u9g5OSXQ5I27TgjJIZz3ZVCEclcHAOR80Mdk4JJIXgEAZJAOBgZ2rgMcANjadpY+vQzq+7gpg7SQATzg8fMDgYznqRk85O41VSTeC23A24O0seMlskY+\/gckDOPuouGocbJaJX3Wt9dGtb366aq2utzW7spJ2Ttezdvs+ut\/vs3qmkXrG2QRf6zLDABIGGYKWyx+ZQQPlT7rDBBBwQdZYHUYAKjGSy5ycfeyuSd20njbhc9SGJqlakrtDOqnBA4GCNoIYkkhiQCuRk7VwcglhqCRgwyQQwXHGAGPpj5SCMjDA5yRk8kOC0emtr9dLOOrSXvLqtJWe6fXGV02l0vsnbWz6b9Za3ve1nct28fylSwIIVTwc7T8oAIB29iM8knDHHSK5tYmDKRvDAgkghcnZ8nqMALk5J568glRICQSwDHaCCMEtk7SBjgHAJGQCVyOQdzpn+U5IPBOSPlB4UAHGQcgYKgYbaVAbmt1FPTWzvs5OzVtU0rvrq7t7eSWq1v0TWrvey1vp3te66JNWVuQu9MRwzJGrEHcNwB3hSxHGDxuZiATjIHPJFR29iqONxIUltw24GGbGQNq9BubZx\/stWtNIMnoASoYKTjkFhtG4qckAMSAAQVbBAqgriRsAsASACQWLFn24BJYY6gH+EDB3g5LjT99PZJarrt9qV013to5JdFYtNWur6N3cUt2lbXTdu3TZ7I6WyiQIFyDg\/dypJO0nCdAPmwQpyFBySMEDsdOyrJ85GdrEAgY64BwDk5xkA5y3IHUcVp7OG4JHsCeSxPGBjIGAOmduSTxmu500bivTBxtY54UMrEnaCzDILYx0HLNgLXpYaLUoWVnzJp3SvqtV01t6tfe+Ku7Xu76JW7Npfi3purbOyR9EfDG62XCArhSAvzEM5IcsOgKk5JByAwYn+6GH11osrPGqg7gNwzwCMjoAAoIIAbHGTgkHjHxj4JLQyQMAwzhcKegZ\/lBDAEn7oyQcgM3yqOPrjwrMW8s8Yx90nnt1zjJIUZ5PTG07vl\/UspnfDqO7V++lrKyd29VZu+t3u9L\/ABeZwXtHKySunZpK+i1tvtb52t1PVdPg8tQcZJC\/MwAIJ68knAPHPGOucDjchPON3GAAAOD8pJyfXIAAOAFUAEglqyLWQlQCRxjp82DjqSMcemM8n05OrCQCSAS3A6cAZwT13HjpwFDEFuACPX\/r+v6tvc82y5LK3S+y1bTeuiNBSBgcc8ckEZHTORnI4wMAAk8YJp\/UcngnJyOpJI6dOgJOPp6YiDZz\/PHOMHIIHYfQA7iB05fu6EDrzz3Pp7BsnI5yepyec3DqtXorfJfd8+m7M9vw\/r\/MQgYweM88D3OOB15z1x6gHkiBsgttB4JxwMZ2nGcsOpG3seAenSdmHAbHPA44PPI9Aee\/64NRAj7xB3Me5\/2QRjBxjnBGcHk9CTVRTSS\/pfnf8AKsqMTuyByASByuFHzHAPA5OSMjjrxiDcRkc9AckA9TnA3DOMnONvQ8joRcddw2nAztIbBIyAcgjOQPQkkqeRk4JqbQNvzAggAgAk5y3OTk5X5flO3OSQRxii4vRXe1remj9b6evfZ2HyWORyCxIIXHHOWBAIPJ5wMAklQgAMQibHYkMvTAxnJ7gYIAI4GCAw6ZxZHPIOfmPADDgkEliQcHruILNgA7iAaQ5IU4RSNp78\/Ly3BwoPIYAZJxx93cfP8Ar8\/69Cddu90ovTW8bPvay0b11a0KpUgA84OMEZJxwSQAB1xkAYIJAJoqZugI2kgDIwcY+8V5Py9wCQBxggbckou+ja9Gl1Xf+rX8h3u7uLb\/ALq00a7pavd9bPW25\/\/Z\"}}\n'\n\nBut i am getting the below error :\n\n\n\n{\n\n      ret = Operation(c_op, self)\\n  File \\\"\/Users\/i311157\/PycharmProjects\/mlf-python-grpc-model-server\/venv\/lib\/python3.6\/site-packages\/tensorflow\/python\/framework\/ops.py\\\", line 1768, in __init__\\n    self._traceback = tf_stack.extract_stack()\\n\\nInvalidArgumentError (see above for traceback): Expected image (JPEG, PNG, or GIF), got unknown format starting with 'image\/jpeg;base6'\\n\\t [[{{node map\/while\/DecodeJpeg}} = DecodeJpeg[acceptable_fraction=1, channels=3, dct_method=\\\"\\\", fancy_upscaling=true, ratio=1, try_recover_truncated=false, _device=\\\"\/job:localhost\/replica:0\/task:0\/device:CPU:0\\\"](map\/while\/TensorArrayReadV3)]]\\n\\n\"\n\n\n\n\n\nIt gives me unknown format error but the test image is jpeg file still it gives the above error .\n\nBut when i try directly from the code like the below i get the prediction result:\n\n\ntf_graph = tf.Graph()\ntf_sess = tf.Session(graph=tf_graph)\nsignature_def =tensorflow.load_model(\"\/Users\/i311157\/PycharmProjects\/mlflow-tf\/mlruns\/0\/8167e43b47474b88b81a9069d1d45110\/artifacts\/model\",tf_sess=tf_sess)\nmodel = _tensorflow(tf_sess=tf_sess, tf_graph=tf_graph, signature_def=signature_def)\nimage_data = tf.gfile.GFile(\"\/Users\/i311157\/PycharmProjects\/mlflow-tf\/data\/testmlflow.jpeg\", 'rb').read()                    columns=[\"images\"])\ndf = pd.DataFrame(\n    data=[image_data],\n    columns=[\"images\"])\ndf.to_csv(\"test1.csv\")\njson_data=df.to_json(orient=\"split\")\npredict_df = model.predict(df)\n\n   scores                                 classes\n0  10.083101         b'lycaenid, lycaenid butterfly'\n1   7.066910           b'ringlet, ringlet butterfly'\n2   4.377772                    b'cabbage butterfly'\n3   3.555962  b'sulphur butterfly, sulfur butterfly'\n4   2.427257                              b'admiral'\n\n\nSo I am not sure what is wrong when i call http endpoint .\n\nKindly please help.\nMany Thanks.\nPLease let me know for any other information."
    },
    {
        "Question_title":"Kedro vs MLFlow",
        "Question_created_time":"2019-07-01T18:09:08",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/NKeIrAaBpV8",
        "Question_comment_count":1,
        "Question_view_count":99,
        "Question_body":"Newbie question: Is anyone familiar with Kedro?\u00a0 If so, how does it compare with MLFlow?\u00a0 Could they be used together effectively, if one has strengths the other lacks?\u00a0 As I start trying to move my organization in this direction, I would like to have any experienced honest feedback available.\u00a0 I know Kedro is pretty new, so I understand if noone has any experience with it.\n\nKedro Ref:\u00a0https:\/\/medium.com\/@QuantumBlack\/introducing-kedro-the-open-source-library-for-production-ready-machine-learning-code-d1c6d26ce2cf"
    },
    {
        "Question_title":"Custom Tags to MLflow registry",
        "Question_created_time":"2021-10-01T03:07:05",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/ADNSwAemjAw",
        "Question_comment_count":0,
        "Question_view_count":15,
        "Question_body":"Hi Team,\n\n\nI am looking to add custom tags to a model registered in mlflow registry via python api. I am able to add tags from the UI but unable to find an api to do it programmatically.\u00a0\u00a0\nThe set_tag api only allows to add tags to a run and those tags are not being taken forward when the model is registered. Please help.\n\n\nThank you,\nJagdeesh R"
    },
    {
        "Question_title":"Tracking steps",
        "Question_created_time":"2023-06-30T10:44:22",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/RxJ4GEKh-VQ",
        "Question_comment_count":0,
        "Question_view_count":7,
        "Question_body":"Is there a way to track the following:\n\n\nExperiment A\n\u00a0 \u00a0 - Run 1\n\u00a0 \u00a0 \u00a0 \u00a0- Step 1 eg: Tokenize - track params, metrics\n\u00a0 \u00a0 \u00a0 \u00a0- Step 2"
    },
    {
        "Question_title":"MLflow 1.2 released!",
        "Question_created_time":"2019-08-12T21:41:49",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/ZGokUyJggBs",
        "Question_comment_count":0,
        "Question_view_count":12,
        "Question_body":"Hi all, MLflow 1.2 has been released! In addition to several bug and documentation fixes, MLflow 1.2.0 includes the following major features and improvements:\n\n* Experiments now have editable tags and descriptions\n* Search latency has been significantly reduced in the SQLAlchemyStore\n\nFor details about the new features, see the CHANGELOG at\u00a0https:\/\/github.com\/mlflow\/mlflow\/releases\/tag\/v1.2.0\u00a0and\u00a0updated docs at\u00a0http:\/\/mlflow.org.\n\n\nNote: the R package is not yet available, but will be once CRAN submissions are back online on August 18.\n\n\n\nThanks!\nSid"
    },
    {
        "Question_title":"pattern for ML model versioning?",
        "Question_created_time":"2019-09-04T18:48:26",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/d2g7oAa6Hy4",
        "Question_comment_count":1,
        "Question_view_count":63,
        "Question_body":"Hi,\n\n\nIs there a standard pattern for tracking different versions of a model in mlflow?\n\n\nIdeally, I would like to use a model id and version to determine a mlflow URI that can be used to load that model.\u00a0\n\n\nI could use mlflow tags, but tags wouldn't enforce version uniqueness for a given model id.\n\n\nrun_id can't really be used as a version number as a model run can be resumed from an existing run_id.\n\n\nThanks for any pointers."
    },
    {
        "Question_title":"I'm presenting 'HIPAA Compliance for AI Data Using InfinStor MLflow' tomorrow at 11 AM Pacific",
        "Question_created_time":"2022-07-26T15:52:04",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/CJBo2p1jddc",
        "Question_comment_count":0,
        "Question_view_count":6,
        "Question_body":"If this topic is of interest to you, please sign up at the following link:\n\n\nhttps:\/\/us06web.zoom.us\/webinar\/register\/2316563487439\/WN_etMx8m8oR--VhQBRmzuCfg\n\n\nWe look forward to exchanging ideas with you tomorrow.\n\nBest\nJagane"
    },
    {
        "Question_title":"Could it trigger the train model with Restful API?",
        "Question_created_time":"2018-11-27T06:46:41",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/D38-4wDIVsg",
        "Question_comment_count":2,
        "Question_view_count":26,
        "Question_body":"Hi, there\n\u00a0 \u00a0 I sent the message\u00a0 to \"2.0\/preview\/mlflow\/runs\/create\" \uff0cthen I can see the detail on the UI including\u00a0the run command.\u00a0 But when the start time is up\uff0c still not run.\u00a0\n\n\n\u00a0I hope that it could trigger a JOB when call the some Restful API. How could it work ?\u00a0\n\n\n\u00a0The following is the response message:\n\n\nhttp:\/\/host:port\/api\/2.0\/preview\/mlflow\/runs\/create\n\n\n\n\n{\n\"experiment_id\": \"0\",\n\"user_id\": \"me\",\n\"run_name\": \"test_run\",\n\"source_type\": \"PROJECT\",\n\"source_name\": \"git@test\/test.git\",\n\"entry_point_name\": \"main\",\n\"start_time\":1543314730000,\n\"source_version\": \"\",\n\"tags\":[]\n}\n\n\nrequest :\n\n\n{\n\u00a0 \u00a0 \"run\": {\n\u00a0 \u00a0 \u00a0 \u00a0 \"info\": {\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"start_time\": \"1543314730000\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"user_id\": \"me\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"run_uuid\": \"3e178d7173874811a27b83ebbb3881e7\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"entry_point_name\": \"main\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"experiment_id\": \"0\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"source_type\": \"PROJECT\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"source_name\": \"git@test\/test.git\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"lifecycle_stage\": \"active\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"status\": \"RUNNING\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"artifact_uri\": \"$WORK_PATH\/mlruns\/0\/3e178d7173874811a27b83ebbb3881e7\/artifacts\"\n\u00a0 \u00a0 \u00a0 \u00a0 }\n\u00a0 \u00a0 }\n}"
    },
    {
        "Question_title":"MLflow models deployment\/serving",
        "Question_created_time":"2018-07-18T02:38:40",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/sI7yw-eZxnE",
        "Question_comment_count":0,
        "Question_view_count":56,
        "Question_body":"Hi folks,\n\n\nFew people have checked on easy model deployment method. And Matei also mentioned on Slide 9 in last MLflow meetup.\n\n\nWhat do you folks think of this \"one click\" solution to get your endpoint? See on site: http:\/\/dockai.com\u00a0\nYou can try wine quality example there.\u00a0\n\n\n\nBased on the feedback, we would like to extend and open it up. Feel free to reach out directly to me.\n\n\nThanks,\nHenry"
    },
    {
        "Question_title":"Trying to use the 'log_metric() function.",
        "Question_created_time":"2018-11-02T18:48:59",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/qZONNmbAASk",
        "Question_comment_count":8,
        "Question_view_count":19,
        "Question_body":"I used\u00a0 'with mlflow.start_run()\u00a0 to log and show the params in the web ui and it works,\u00a0 when i try to use log_metric() i cant get it to show in the ui.\u00a0\n\n\nI used a variable called 'history' to store the values output from model.compile, then a function to extract the float value, and then pass that variable to log_metric()\u00a0\n\n\nmy 'history' variable is not getting anything stored in it though."
    },
    {
        "Question_title":"mlflow model artifacts are not getting stored, while running the airflow dag. for that reason unable to fetch experiment details?",
        "Question_created_time":"2022-05-01T03:05:49",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/C4gnXc4WN9A",
        "Question_comment_count":0,
        "Question_view_count":402,
        "Question_body":"import mlflow\n\nfrom mlflow.tracking import MlflowClient\nclient = MlflowClient()\n\n\" training the model and saving the model artificats\"\nmlflow.set_registry_uri('postgresql:\/\/postgres:postgres@localhost\/mlflow')\nmlflow.set_experiment('testing_mlflow_with_airflow')\nwith mlflow.start_run():\n# creating the training dataframe\n\u00a0 \u00a0 train_x = self.train_data[0]\n\u00a0 \u00a0 train_y = self.train_data[1]\n\n\u00a0 \u00a0 # training the given model\n\u00a0 \u00a0 model.fit(train_x, train_y)\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\n\u00a0 \u00a0 mlflow.sklearn.log_model(model, \"model\")\n\n\n\n\" getting the experiment details by experiment name\"\nexperiment_id = client.get_experiment_by_name('testing_mlflow_with_airflow').experiment_id\nexperiment_results = mlflow.search_runs(experiment_ids=experiment_id)\n\n\n\nairflow code:\n\n\ntraining = BashOperator(\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 task_id = 'mlflow_training',\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 bash_command='python3 \/home\/vasanth\/airflow\/scripts\/mlproject\/src\/models\/train_mlflow.py',\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 do_xcom_push=False\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0)\n\n\nairflow error :\n\n\n[2022-04-29, 13:01:08 UTC] {subprocess.py:74} INFO - Running command: ['bash', '-c', 'python3 \/home\/vasanth\/airflow\/scripts\/mlproject\/src\/models\/train_mlflow.py']\n[2022-04-29, 13:01:08 UTC] {subprocess.py:85} INFO - Output:\n[2022-04-29, 13:01:28 UTC] {subprocess.py:89} INFO - WARNING:root:Malformed experiment '2'. Detailed error Yaml file '\/tmp\/airflowtmpzjvuldm6\/mlruns\/2\/meta.yaml' does not exist.\n[2022-04-29, 13:01:28 UTC] {subprocess.py:89} INFO - Traceback (most recent call last):\n[2022-04-29, 13:01:28 UTC] {subprocess.py:89} INFO - \u00a0 File \"\/usr\/local\/lib\/python3.8\/dist-packages\/mlflow\/store\/tracking\/file_store.py\", line 262, in list_experiments\n[2022-04-29, 13:01:28 UTC] {subprocess.py:89} INFO - \u00a0 \u00a0 experiment = self._get_experiment(exp_id, view_type)\n[2022-04-29, 13:01:28 UTC] {subprocess.py:89} INFO - \u00a0 File \"\/usr\/local\/lib\/python3.8\/dist-packages\/mlflow\/store\/tracking\/file_store.py\", line 341, in _get_experiment\n[2022-04-29, 13:01:28 UTC] {subprocess.py:89} INFO - \u00a0 \u00a0 meta = read_yaml(experiment_dir, FileStore.META_DATA_FILE_NAME)\n[2022-04-29, 13:01:28 UTC] {subprocess.py:89} INFO - \u00a0 File \"\/usr\/local\/lib\/python3.8\/dist-packages\/mlflow\/utils\/file_utils.py\", line 179, in read_yaml\n[2022-04-29, 13:01:28 UTC] {subprocess.py:89} INFO - \u00a0 \u00a0 raise MissingConfigException(\"Yaml file '%s' does not exist.\" % file_path)\n[2022-04-29, 13:01:28 UTC] {subprocess.py:89} INFO - mlflow.exceptions.MissingConfigException: Yaml file '\/tmp\/airflowtmpzjvuldm6\/mlruns\/2\/meta.yaml' does not exist.\n[2022-04-29, 13:01:28 UTC] {subprocess.py:89} INFO - priniting the testing data <class 'pandas.core.frame.DataFrame'>\n[2022-04-29, 13:01:28 UTC] {subprocess.py:89} INFO - priniting the testing data \u00a0 \u00a0fixed_acidity \u00a0volatile_acidity \u00a0citric_acid \u00a0... \u00a0sulphates \u00a0alcohol \u00a0quality\n[2022-04-29, 13:01:28 UTC] {subprocess.py:89} INFO - 0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a07.4 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a00.70 \u00a0 \u00a0 \u00a0 \u00a0 0.00 \u00a0... \u00a0 \u00a0 \u00a0 0.56 \u00a0 \u00a0 \u00a09.4 \u00a0 \u00a0 \u00a0 \u00a05\n[2022-04-29, 13:01:28 UTC] {subprocess.py:89} INFO - 1 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a07.8 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a00.88 \u00a0 \u00a0 \u00a0 \u00a0 0.00 \u00a0... \u00a0 \u00a0 \u00a0 0.68 \u00a0 \u00a0 \u00a09.8 \u00a0 \u00a0 \u00a0 \u00a05\n[2022-04-29, 13:01:28 UTC] {subprocess.py:89} INFO - 2 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a07.8 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a00.76 \u00a0 \u00a0 \u00a0 \u00a0 0.04 \u00a0... \u00a0 \u00a0 \u00a0 0.65 \u00a0 \u00a0 \u00a09.8 \u00a0 \u00a0 \u00a0 \u00a05\n[2022-04-29, 13:01:28 UTC] {subprocess.py:89} INFO - 3 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 11.2 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a00.28 \u00a0 \u00a0 \u00a0 \u00a0 0.56 \u00a0... \u00a0 \u00a0 \u00a0 0.58 \u00a0 \u00a0 \u00a09.8 \u00a0 \u00a0 \u00a0 \u00a06\n[2022-04-29, 13:01:28 UTC] {subprocess.py:89} INFO -\n[2022-04-29, 13:01:28 UTC] {subprocess.py:89} INFO - [4 rows x 12 columns]\n[2022-04-29, 13:01:28 UTC] {subprocess.py:89} INFO - tracking uri ***ql:\/\/***:***@localhost\/mlflow\n[2022-04-29, 13:01:28 UTC] {subprocess.py:89} INFO - Traceback (most recent call last):\n[2022-04-29, 13:01:28 UTC] {subprocess.py:89} INFO - File \"\/home\/vasanth\/airflow\/scripts\/mlproject\/src\/models\/train_mlflow.py\", line 44, in <module>\n[2022-04-29, 13:01:28 UTC] {subprocess.py:89} INFO - File \"\/home\/vasanth\/airflow\/scripts\/mlproject\/src\/models\/mlflow_class.py\", line 88, in __init__\n[2022-04-29, 13:01:28 UTC] {subprocess.py:89} INFO - experiment_id = client.get_experiment_by_name('testing_mlflow_with_airflow').experiment_id\n[2022-04-29, 13:01:28 UTC] {subprocess.py:89} INFO - AttributeError: 'NoneType' object has no attribute 'experiment_id'\n[2022-04-29, 13:01:29 UTC] {subprocess.py:93} INFO - Command exited with return code 1\n[2022-04-29, 13:01:29 UTC] {taskinstance.py:1774} ERROR - Task failed with exception\n\nhow i can set a directory where all my experiment runs artifacts will be stored? where the mlflow artifacts are getting stored now? how i can find all runs details by the mlflow client as per the above code?\n\ni have tried with different approaches, None of them is worked\n\nsetting the tracking server as below\nmlflow.set_tracking_uri('postgresql:\/\/postgres:postgres@localhost\/mlflow')\nmlflow.set_tracking_uri('file:\/\/\/tmp\/mlruns')\n\nmlflow.set_tracking_uri('http:\/\/localhost:5000')\n\nmlflow.set_registry_uri('postgresql:\/\/postgres:postgres@localhost\/mlflow')\nmlflow.set_tracking_uri('\/home\/vasanth\/airflow\/scripts\/mlproject\/src\/models')"
    },
    {
        "Question_title":"ML flow and Airflow Integration",
        "Question_created_time":"2019-09-24T02:08:27",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/nuxDrEAXseg",
        "Question_comment_count":2,
        "Question_view_count":18,
        "Question_body":"Hi\n\n\nIs there any\u00a0 integration of airflow and mlflow\u00a0 for scheduling\n\n\n\nThank you and Warm Regards"
    },
    {
        "Question_title":"MLFlow Meetup 1.0 @ Microsoft",
        "Question_created_time":"2019-06-27T17:27:55",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/Xf5Bs8xootI",
        "Question_comment_count":0,
        "Question_view_count":12,
        "Question_body":"Hello!\n\n\n\nIf you missed the last\u00a0MLflow meetup,\u00a0here are the slides and the video presentation.\n\nTalks for the meetup are on the SlideShare:\n1. Talk 1:\u00a0https:\/\/www.slideshare.net\/databricks\/flock-data-science-platform-cisl\n2. Talk-2:\u00a0https:\/\/www.slideshare.net\/databricks\/mlflow-10-meetup\n\nAnd the video is now available:\u00a0\u00a0https:\/\/youtu.be\/ILIllCMDEgc\n\n\n\n\n--\u00a0\n\n\nThe Best Ideas are Simple\n\nJules S. Damji\n\nApache Spark Developer & Community Advocate\n\nDatabricks, Inc.\n\nju...@databricks.com\n\n(510) 304-7686"
    },
    {
        "Question_title":"Deploy problems",
        "Question_created_time":"2019-05-13T15:16:42",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/mZCOZ5FCQaM",
        "Question_comment_count":2,
        "Question_view_count":27,
        "Question_body":"Hi guys!\n\n\nI'm new with MLFlow and I would like to deploy a simple model on SageMaker but I got some problems.\n\n\n\nI have trained a model locally and successfully generated a docker image and uploaded it to AWS ECR but, when I called deploy method I got the following error:\u00a0MlflowException: Run '6b33f54c1b2541da8ec95152ab5f566b' not found\n\n\nI'm using MLFlow\u00a00.9.1 and I'm following this tutorial:\u00a0https:\/\/docs.databricks.com\/_static\/notebooks\/mlflow\/mlflow-quick-start-deployment-aws.html\n\n\nCould someone help me please =D S2\u00a0\n\n\nThanks a lot!"
    },
    {
        "Question_title":"grpc Endpoint for Databricks MLFlow server",
        "Question_created_time":"2022-01-05T04:12:20",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/sB9lZIvPu0E",
        "Question_comment_count":0,
        "Question_view_count":23,
        "Question_body":"Hello Everyone,\n\n\nDoes MLFlow server (Azure managed) provide gRPC endpoints?\nIf so, I couldn't find any doc to use client libraries to communicate with server with gRPC endpoints.\nAny guidance would be highly appreciated."
    },
    {
        "Question_title":"Not able to get expected output while serving the model using \"mlflow model serve\" while using sklearn-crfsuite",
        "Question_created_time":"2019-09-13T01:54:00",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/l7sPjsCx9dQ",
        "Question_comment_count":1,
        "Question_view_count":7,
        "Question_body":"I am not able to get the expected response when calling api served with \"mlflow model serve\" command. It is working with other sklearn libraries but not with sklearn-crfsuite. Need help."
    },
    {
        "Question_title":"sanic python - instead of flask",
        "Question_created_time":"2019-06-13T08:41:26",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/KjKwpgi8EjI",
        "Question_comment_count":1,
        "Question_view_count":6,
        "Question_body":"Hey,\n\n\nWe are not able to use the mlflow server in our production API due to the fact it's using flask.\nWe have create our own API which is taking the pickel from mlflow and uses\u00a0sanic python for the API which is much faster.\n\n\nCan you please change your flask to\u00a0sanic python?\n\n\nIt will help us a lot."
    },
    {
        "Question_title":"Filament AI Logo for inclusion on your website!",
        "Question_created_time":"2021-01-06T11:53:15",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/3yzDfHEs0F0",
        "Question_comment_count":1,
        "Question_view_count":19,
        "Question_body":"Hi there,\n\n\nWe'd be very grateful if we could get our logo on your site.\u00a0\n\n\nWe've been using MLFlow a lot in 2020 and love what you folks are up to. I recently wrote a blog about our use of MLFlow with NLP models we've been developing https:\/\/medium.com\/filament-ai\/serving-nlp-models-with-mlflow-b19d310ec4c6\n\n\nI've attached our logo - I hope that's OK.\n\n\nBest wishes,\n\n\n\n\nJames Ravenscroft | \u00a0Chief Technology Officer\n\n\n\nFilament\u00a0-\u00a0Experts in Applied AI\n\n1 King William Street,\nLondon\n\nEC4N 7BJ\nfilament.ai\n\n\n\nLONDON | SOUTHAMPTON | TORONTO\n\n\n\nFilament Consultancy Group Limited - Registered in England and Wales | Company # 10180537\n\nRegistered in Ontario, Corporation # 1995332"
    },
    {
        "Question_title":"MLFlow Tracking example using database encoding",
        "Question_created_time":"2022-12-05T11:51:52",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/eOuvHGgFUmQ",
        "Question_comment_count":0,
        "Question_view_count":13,
        "Question_body":"Hi all,\nI wanted to use DB encoded tracking for MLflow. However from the documentation mentioned\u00a0https:\/\/www.mlflow.org\/docs\/latest\/tracking.html#where-runs-are-recorded\ni am unable to figure out how to exactly specify :\n\n\nDatabase encoded as\u00a0<dialect>+<driver>:\/\/<username>:<password>@<host>:<port>\/<database>. MLflow supports the dialects\u00a0mysql,\u00a0mssql,\u00a0sqlite, and\u00a0postgresql. For more details, see\u00a0SQLAlchemy database uri.\n\n\nI do not know SQAlchemy; i have also looked at the URI. There are some code on creating an engine and so on. Do i need to have a separate python process running for this?\nSorry if the question is beyond trivial.\nregards"
    },
    {
        "Question_title":"MLFlow Tracking server scalability",
        "Question_created_time":"2018-06-22T04:38:07",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/TQe7ATr8Wqw",
        "Question_comment_count":4,
        "Question_view_count":107,
        "Question_body":"Hey Guys,\n\n\nFirst of all, great job with this effort. It's certainly something a lot of people are waiting for (or have tried to create themselves).\n\n\nI was wondering about the scalability of the tracking server. I see in the code there is an abstraction of for the tracking Store, which is currently a FileStore if I'm correct. What are the plans to support other stores for this (ElasticSearch, Kafka, S3, ...?)\n\n\nCheers,\nD."
    },
    {
        "Question_title":"Bay Area MLflow Meetup @ Mesoshere",
        "Question_created_time":"2018-09-20T14:33:58",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/h8MFLcRq11M",
        "Question_comment_count":3,
        "Question_view_count":30,
        "Question_body":"If you can't flow with us in person, do so remotely:\n\n\nMEETUP @ Mesosphere :\u00a0 https:\/\/www.meetup.com\/Bay-Area-MLflow\/events\/254124344\/\n\n\nZOOM:\u00a0https:\/\/mesosphere.zoom.us\/j\/823248629\n\n\nCheers\nJules"
    },
    {
        "Question_title":"AWS local profiles for model deployment",
        "Question_created_time":"2020-07-17T11:50:44",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/eO0NihIWa2s",
        "Question_comment_count":0,
        "Question_view_count":12,
        "Question_body":"Hi everyone,\n\n\n\nI'm\u00a0curious\u00a0about the model deployment\u00a0through\u00a0mlflow and I want to ask you if there is a way that we can use our\u00a0AWS local profiles to the deployment in this Cloud? Or it's necessary to work with the default profile?\n\n\n\nCheers.\n\n\nJuan Felipe G\u00f3mez\nMachine Learning Engineer"
    },
    {
        "Question_title":"MLflow 1.1 released!",
        "Question_created_time":"2019-07-23T13:34:20",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/VDLdh-HzhlU",
        "Question_comment_count":0,
        "Question_view_count":14,
        "Question_body":"Hi all,\n\nMLflow 1.1 has been released! The release contains many exciting new features:\n* Automatic logging from TensorFlow and Keras\n* Parallel coordinate plots in the tracking UI\n* Pandas DataFrame based search API\n* Java Fluent API\n* Kubernetes execution backend for MLflow projects\n* Search Pagination\n\nSee the CHANGELOG for details about the new features:\nhttps:\/\/github.com\/mlflow\/mlflow\/releases\/tag\/v1.1.0\n\nAnd see the blog post for some examples of these features in action: https:\/\/databricks.com\/blog\/2019\/07\/23\/announcing-the-mlflow-1-1-release.html\n\nThanks,\nSid"
    },
    {
        "Question_title":"Is it possible to use MLFlow logo on our landing page?",
        "Question_created_time":"2019-12-16T06:13:56",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/F1YiBxZa1dc",
        "Question_comment_count":2,
        "Question_view_count":23,
        "Question_body":"Hello,\u00a0\n\n\nAt NBT AG, we are currently developing\u00a0a\u00a0deployment and orchestration platform for MLOps. We are planning to make an integration of MLflow for deploying models on edge devices through our platform. Could we use MLflow logo on our landing page already until we actually make that integration?\n\n\nThank you!\n\n\nSimon Bernard"
    },
    {
        "Question_title":"MLflow 2.2.0 released!",
        "Question_created_time":"2023-03-02T01:16:44",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/JWCgKwLHxxk",
        "Question_comment_count":0,
        "Question_view_count":5,
        "Question_body":"Hi all,\n\n\nWe are happy to announce the availability of\u00a0MLflow\u00a02.2.0!\n\n\nMLflow\u00a02.2.0\u00a0includes several major features and improvements:\n\n\n\nFeatures:\n\n[Recipes] Add support for score calibration to the classification recipe (#7744,\u00a0@sunishsheth2009)\n[Recipes] Add automatic label encoding to the classification recipe (#7711,\u00a0@sunishsheth2009)\n[Recipes] Support custom data splitting logic in the classification and regression recipes (#7815,\u00a0#7588,\u00a0@sunishsheth2009)\n[Recipes] Introduce customizable MLflow Run name prefixes to the classification and regression recipes (#7746,\u00a0@kamalesh0406;\u00a0#7763,\u00a0@sunishsheth2009)\n[UI] Add a new Chart View to the MLflow Experiment Page for model performance insights (#7864,\u00a0@hubertzub-db,\u00a0@apurva-koti,\u00a0@prithvikannan,\u00a0@ridhimag11, @sunishseth2009,\u00a0@dbczumar)\n[UI] Modernize and improve parallel coordinates chart for model tuning (#7864,\u00a0@hubertzub-db,\u00a0@apurva-koti,\u00a0@prithvikannan,\u00a0@ridhimag11, @sunishseth2009,\u00a0@dbczumar)\n[UI] Add typeahead suggestions to the MLflow Experiment Page search bar (#7864,\u00a0@hubertzub-db,\u00a0@apurva-koti,\u00a0@prithvikannan,\u00a0@ridhimag11, @sunishseth2009,\u00a0@dbczumar)\n[UI] Improve performance of Experiments Sidebar for large numbers of experiments (#7804,\u00a0@jmahlik)\n[Tracking] Introduce autologging support for native PyTorch models (#7627,\u00a0@temporaer)\n[Tracking] Allow specifying\u00a0model_format\u00a0when autologging XGBoost models (#7781,\u00a0@guyrosin)\n[Tracking] Add\u00a0MLFLOW_ARTIFACT_UPLOAD_DOWNLOAD_TIMEOUT\u00a0environment variable to configure artifact operation timeouts (#7783,\u00a0@wamartin-aml)\n[Artifacts] Include\u00a0Content-Type\u00a0response headers for artifacts downloaded from\u00a0mlflow server\u00a0(#7827,\u00a0@bali0019)\n[Model Registry] Introduce the\u00a0searchModelVersions()\u00a0API to the Java client (#7880,\u00a0@gabrielfu)\n[Model Registry] Introduce\u00a0max_results,\u00a0order_by\u00a0and\u00a0page_token\u00a0arguments to\u00a0MlflowClient.search_model_versions()\u00a0(#7623,\u00a0@serena-ruan)\n[Models] Support logging large ONNX models by using external data (#7808,\u00a0@dogeplusplus)\n[Models] Add support for logging Diviner models fit in Spark (#7800,\u00a0@BenWilson2)\n[Models] Introduce\u00a0MLFLOW_DEFAULT_PREDICTION_DEVICE\u00a0environment variable to set the device for pyfunc model inference (#7922,\u00a0@ankit-db)\n[Scoring] Publish official Docker images for the MLflow Model scoring server at github.com\/mlflow\/mlflow\/pkgs (#7759,\u00a0@dbczumar)\n\nBug fixes:\n\n[Recipes] Fix dataset format validation in the ingest step for custom dataset sources (#7638,\u00a0@sunishsheth2009)\n[Recipes] Fix bug in identification of worst performing examples during training (#7658,\u00a0@sunishsheth2009)\n[Recipes] Ensure consistent rendering of the recipe graph when\u00a0inspect()\u00a0is called (#7852,\u00a0@sunishsheth2009)\n[Recipes] Correctly respect\u00a0positive_class\u00a0configuration in the transform step (#7626,\u00a0@sunishsheth2009)\n[Recipes] Make logged metric names consistent with\u00a0mlflow.evaluate()\u00a0(#7613,\u00a0@sunishsheth2009)\n[Recipes] Add\u00a0run_id\u00a0and\u00a0artifact_path\u00a0keys to logged MLmodel files (#7651,\u00a0@sunishsheth2009)\n[UI] Fix bugs in UI validation of experiment names, model names, and tag keys (#7818,\u00a0@subramaniam02)\n[Tracking] Resolve artifact locations to absolute paths when creating experiments (#7670,\u00a0@bali0019)\n[Tracking] Exclude Delta checkpoints from Spark datasource autologging (#7902,\u00a0@harupy)\n[Tracking] Consistently return an empty list from GetMetricHistory when a metric does not exist (#7589,\u00a0@bali0019;\u00a0#7659,\u00a0@harupy)\n[Artifacts] Fix support for artifact operations on Windows paths in UNC format (#7750,\u00a0@bali0019)\n[Artifacts] Fix bug in HDFS artifact listing (#7581,\u00a0@pwnywiz)\n[Model Registry] Disallow creation of model versions with local filesystem sources in\u00a0mlflow server\u00a0(#7908,\u00a0@harupy)\n[Model Registry] Fix handling of deleted model versions in FileStore (#7716,\u00a0@harupy)\n[Model Registry] Correctly initialize Model Registry SQL tables independently of MLflow Tracking (#7704,\u00a0@harupy)\n[Models] Correctly move PyTorch model outputs from GPUs to CPUs during inference with pyfunc (#7885,\u00a0@ankit-db)\n[Build] Fix compatiblility issues with Python installations compiled using\u00a0PYTHONOPTIMIZE=2\u00a0(#7791,\u00a0@dbczumar)\n[Build] Fix compatibility issues with the upcoming pandas 2.0 release (#7899,\u00a0@harupy;\u00a0#7910,\u00a0@dbczumar)\n\nDocumentation updates:\n\n[Docs] Add an example of saving and loading Spark MLlib models with MLflow (#7706,\u00a0@dipanjank)\n[Docs] Add usage examples for\u00a0mlflow.lightgbm\u00a0APIs (#7565,\u00a0@canerturkseven)\n[Docs] Add an example of custom model flavor creation with\u00a0sktime\u00a0(#7624,\u00a0@benjaminbluhm)\n[Docs] Clarify\u00a0precision_recall_auc\u00a0metric calculation in\u00a0mlflow.evaluate()\u00a0(#7701,\u00a0@BenWilson2)\n[Docs] Remove outdated example links (#7587,\u00a0@asloan7)\nFor a comprehensive list of changes, see the\u00a0release\u00a0change log, and check out the latest documentation on\u00a0mlflow.org."
    },
    {
        "Question_title":"Sahred MLFlow server on local network",
        "Question_created_time":"2019-08-28T20:36:53",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/xpOE5nUuK1M",
        "Question_comment_count":1,
        "Question_view_count":32,
        "Question_body":"Hi,\n\n\nI'm trying to setup a shared MLFlow server for data and artefacts on the local network so our team can pool their experiments. Is this even possible?\u00a0\n\n\nI've run into errors with the `--default-artifact-root`. I've tried local files, gcloud and sftp but with no joy.\n\n\nI'm assuming that the\u00a0default-artifact-root needs to be accessible by both the client and the server? I've tried the following with no success:\n```\n\u00a0 \u00a0 \u00a0mlflow server\u00a0\n\u00a0 \u00a0 \u00a0 \u00a0 --backend-store-uri sqlite:\/\/\/mlflow.db\n\u00a0 \u00a0 \u00a0 \u00a0 --default-artifact-root gs:\/\/somewhere-mlflow\n\u00a0 \u00a0 \u00a0 \u00a0 --host 0.0.0.0\n```\nwhich gives this error:\n\n\n> mlflow.exceptions.MlflowException: Could not find a registered artifact repository for: 127.0.0.1:5000\/0\/a84053975075455ab01b116110d010cc\/artifacts. Currently registered schemes are: ['', 'file', 's3', 'gs', 'wasbs', 'ftp', 'sftp', 'dbfs', 'hdfs', 'runs']\n\n\nas does this:\n\n\n```\n\u00a0 \u00a0 \u00a0 mlflow server\u00a0\n\u00a0 \u00a0 \u00a0 \u00a0 --backend-store-uri sqlite:\/\/\/mlflow-runs.db\n\u00a0 \u00a0 \u00a0 \u00a0 --default-artifact-root file:\/app\/mlrun\n\u00a0 \u00a0 \u00a0 \u00a0 --host 0.0.0.0\n```\nand this\n```\n\u00a0 \u00a0 \u00a0 mlflow server\u00a0\n\u00a0 \u00a0 \u00a0 \u00a0 --backend-store-uri sqlite:\/\/\/mlflow-runs.db\n\u00a0 \u00a0 \u00a0 \u00a0 --default-artifact-root \/mlrun\n\u00a0 \u00a0 \u00a0 \u00a0 --host 0.0.0.0\n```\nas does this\n```\n\u00a0 \u00a0 \u00a0 mlflow server\u00a0\n\u00a0 \u00a0 \u00a0 \u00a0 --host 0.0.0.0\n```\nHas anyone tried to set this up on a local network for sharing? Do you have a configuration that works?\n\n\nalex"
    },
    {
        "Question_title":"request for help in loading the latest version of model from mlflow",
        "Question_created_time":"2021-05-28T17:59:05",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/n3WYjzCufuY",
        "Question_comment_count":3,
        "Question_view_count":14,
        "Question_body":"Hello everyone , can someone help me how can i load the latest version of my model automatically in databricks ?"
    },
    {
        "Question_title":"MLflow workflows",
        "Question_created_time":"2020-02-13T10:09:26",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/w4BGI5qcFzE",
        "Question_comment_count":0,
        "Question_view_count":26,
        "Question_body":"Hi all,\n\n\u00a0\n\nI am new to mlflow and I'd like to ask for MLflow workflows capabilities. In April 2019 (SPARK+AI) two new components were announced for feature releases: MLflow workflows and MLflow Model registry. Afterwards, MLflow Model registry has been added (ver.1.4) but MLflow workflows has not till now (as far as I know). Does anyone know if MLflow workflows will be released and when (in which release)?\n\n\u00a0\n\nThanks,\n\n\u00a0\n\nDimitris"
    },
    {
        "Question_title":"Upgrade mlflow",
        "Question_created_time":"2021-06-28T03:13:36",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/CX4PiIGYZiE",
        "Question_comment_count":1,
        "Question_view_count":240,
        "Question_body":"The following error is thrown when I upgrade mlflow from 1.13.1 to 1.18.0\n\n\nalembic.util.exc.CommandError: Can't locate revision identified by 'a8c4a736bde6' mlflow\n\n\n\nWould deleting the alembic version fix the issue or is there any alternate solution?\n\n\nThank you and Warm Regards"
    },
    {
        "Question_title":"MLProject with Docker not producing MLModel artifact",
        "Question_created_time":"2019-08-27T10:34:27",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/54mVBwanIVQ",
        "Question_comment_count":3,
        "Question_view_count":31,
        "Question_body":"Hello,\n\n\nI've been trying to run an MLProject (using the command mlflow run ...) with a Docker image to generate an MLmodel file with sklearn and the project runs but the artifacts directory created in the newly created mlruns directory is empty. If I run the exact same python script as a standalone (without the MLProject and Docker image), it works perfectly fine and correctly populates the artifacts directory. I'm not sure if this is an actual bug or if I am just doing something incorrectly.\n\n\nHere is the workflow I am using:\ncreated script (sklearn_mlflow_train.py) that uses mlflow.sklearn.log_model() python api call to create model log\nsnippet of python script:\n# Run the experiments using set parameters and log the resulting model\nwith mlflow.start_run() as run:\n\u00a0 \u00a0 clf = DecisionTreeClassifier(criterion=params.criterion, random_state=params.trand)\n\u00a0 \u00a0 model = clf.fit(X_train, y_train)\n\u00a0 \u00a0 mlflow.log_metric(\"Accuracy\", model.score(X_test, y_test))\n\n\n\u00a0 \u00a0 mlflow.log_param('train_size', params.train_size)\n\u00a0 \u00a0 mlflow.log_param('srand', params.srand)\n\u00a0 \u00a0 mlflow.log_param('trand', params.trand)\n\u00a0 \u00a0 mlflow.log_param('criterion', params.criterion)\n\n\n\u00a0 \u00a0 sk_model_path = \"sk_models\"\n\u00a0 \u00a0 mlflow.sklearn.log_model(model, sk_model_path)\ncreate docker image (standard docker image creation)\ncreate MLproject file that references the docker image\n\nname: mlflowproject-sklearn-test\n\n\ndocker_env:\n\u00a0 \u00a0 image: mlflow-sklearn-test\n\n\nentry_points:\n\u00a0 \u00a0 main:\n\u00a0 \u00a0 \u00a0 \u00a0 parameters:\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 train_size: {type: float, default: 0.2}\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 trand: {type: int, default: 123}\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 srand: {type: int, default: 12}\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 criterion: {type: string, default: gini}\n\u00a0 \u00a0 \u00a0 \u00a0 command: \"python36 sklearn_mlflow_train.py -train_size {train_size} -trand {trand} -srand {srand} -criterion {criterion}\"\nrun the mlflow project in the working directory that has both the python script and the MLproject file: mlflow run .\nafter running the project, an mlruns directory is created and all of the params and metrics are correctly logged, but the artifacts directory is empty\nThanks in advance for the help!"
    },
    {
        "Question_title":"GPT-3 integration?",
        "Question_created_time":"2022-08-22T13:04:49",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/m36yrKpx87c",
        "Question_comment_count":0,
        "Question_view_count":12,
        "Question_body":"OpenAI has put out a powerful model called GPT-3. This model allows for custom model generation, complete with fine-tuning, metrics measurement, etc. I was wondering whether it would be possible to track GPT-3 runs using MLflow?\n\n\nThey do have a provision to track using Weights and Biases.\n\n\nHere's the link to the documentation (specific bookmark links to the chapter that provides github links to jupyter notebooks).\n\n\nThanks!"
    },
    {
        "Question_title":"Track training loss to Azure when running file locally",
        "Question_created_time":"2022-06-16T12:35:24",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/QXD8azgicVI",
        "Question_comment_count":4,
        "Question_view_count":26,
        "Question_body":"Hi all :)\n\n\nI have followed the official microsoft tutorial (https:\/\/docs.microsoft.com\/en-us\/azure\/machine-learning\/how-to-use-mlflow-cli-runs?tabs=mlflow) to log parameters or metrics in the Azure Workspace when I run something locally. That works just fine.\n\n\nHowever, what I want to do is run a train.py file by using the os.system command like\nos.system(f\"python .\/src\/train.py --data_path .\/data) instead of the os.system command used in the tutorial.\u00a0\n\n\nThis works fine in general. However, inside the train.py file, I am not able to get access to the Azure Machine Learning experiment that I created in the file which runs the os.system command. Therefore, I am not able to track the loss of the train.py file to Azure.\n\n\n\nDo you have any suggestions how I could solve that?\n\n\nThanks a lot already!\n\n\nBest regards"
    },
    {
        "Question_title":"MLflow feature roadmap",
        "Question_created_time":"2018-07-12T06:44:25",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/FG3X_OaEgtw",
        "Question_comment_count":1,
        "Question_view_count":315,
        "Question_body":"Hi there,\u00a0\n\n\nIs there a roadmap of features that are planned for MLflow and that you maybe would like help with?\u00a0\n\n\n-- Bruno"
    },
    {
        "Question_title":"What are the advantages of Database usage vs. file based storage with MLflow?",
        "Question_created_time":"2020-03-11T16:47:09",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/ubaYYaDROns",
        "Question_comment_count":3,
        "Question_view_count":38,
        "Question_body":"Hi,\nwhat are the advantages of database usage vs. file based storage with MLflow?\nIs the DB faster on large experiments?\nI mean backup for example would be easier when it is all files. Artifacts and other data.\nThanks\nPhilip"
    },
    {
        "Question_title":"[RFC] Extended Search and Pagination functionality",
        "Question_created_time":"2019-05-08T13:55:29",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/IdVF99MAgyM",
        "Question_comment_count":0,
        "Question_view_count":8,
        "Question_body":"Overview\n\nSearch is one of the most used APIs in MLflow to read logged experiment and run data. As organizations and projects scale and an increasing number of ML runs are logged, users have a need to severely limit the search results returned. In addition to selecting specific rows, there may be needs to limit the number of parameters, metrics, tags, and run attributes returned with searches. In cases where a large number of runs are produced from a search, there is a need to paginate the results at server-side and return only a limited set of runs at a time.\n\nIn this RFC, we present proposals to extend search functionality for advanced use cases along with some optimizations. We also discuss proposed solution for server-side pagination of results.\n\n\n\nRequest for comment\n\nFull RFC for these 2 features is in this google doc\u00a0(which has comment access). We are looking forward to your feedback directly in this document.Thank you!\n\n\n\n\nMani Parkhe\n\nma...@databricks.com"
    },
    {
        "Question_title":"MLflow 1.9.1 released!",
        "Question_created_time":"2020-06-25T03:20:57",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/z--UqHehim0",
        "Question_comment_count":0,
        "Question_view_count":10,
        "Question_body":"Hi all,\n\nWe are happy to announce the availability of MLflow 1.9.1! It's a patch release containing a number of bug-fixes & improvements:\n\n\nFixes AttributeError when pickling an instance of the Python MlflowClient class (#2955, @Polyphenolx)\nFixes bug that prevented updating model-version descriptions in the model registry UI (#2969, @AnastasiaKol)\u00a0\nFixes bug where credentials were not properly propagated to artifact CLI commands when logging artifacts from Java to the DatabricksArtifactRepository (#3001, @dbczumar)\nRemoves use of new Pandas API in new MLflow model-schema functionality, so that it can be used with older Pandas versions (#2988, @aarondav)\nFor a comprehensive list of changes, see the release change log, and check out the latest documentation on https:\/\/mlflow.org\/\n\nThanks,\nSid"
    },
    {
        "Question_title":"Organizations using and contributing to MLflow - we are using it! :)",
        "Question_created_time":"2020-04-28T10:33:37",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/n8GI4uhm8No",
        "Question_comment_count":2,
        "Question_view_count":42,
        "Question_body":"Hello MLflow organization,\n\nAt\u00a0Stratio\u00a0- a leading Big Data and Artificial Intelligence company - we've been using MLflow and integrating it to our product. We want MLFlow to be one of the key elements for the development of ML Algorithms\u00a0in our product and we've already been using it for quite some time.\u00a0\n\n\nWe would really like to be included in your website's list of contributors.\u00a0Attached you can find our logo. Please let us know if you need anything else.\n\nThanks in advance,\n\nStratio Team"
    },
    {
        "Question_title":"MLflow 1.24.0 released!",
        "Question_created_time":"2022-02-28T04:47:48",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/IaSsGTO5PLY",
        "Question_comment_count":0,
        "Question_view_count":24,
        "Question_body":"We are happy to announce the availability of MLflow 1.24.0!\n\nIn addition to bug and documentation fixes, MLflow 1.24.0 includes the following features and improvements:\n\nFeatures:\n\n- [Tracking] Support uploading, downloading, and listing artifacts through the MLflow server via ``mlflow server --serve-artifacts`` (#5320, @BenWilson2, @harupy)\n- [Tracking] Add the ``registered_model_name`` argument to ``mlflow.autolog()`` for automatic model registration during autologging (#5395, @WeichenXu123)\n- [UI] Improve and restructure the Compare Runs page. Additions include \"show diff only\" toggles and scrollable tables (#5306, @WeichenXu123)\n- [Models] Introduce ``mlflow.pmdarima`` flavor for pmdarima models (#5373, @BenWilson2)\n- [Models] When loading an MLflow Model, print a warning if a mismatch is detected between the current environment and the Model's dependencies (#5368, @WeichenXu123)\n- [Models] Support computing custom scalar metrics during model evaluation with ``mlflow.evaluate()`` (#5389, @MarkYHZhang)\n- [Scoring] Add support for deploying and evaluating SageMaker models via the MLflow Deployments API <https:\/\/mlflow.org\/docs\/latest\/models.html#deployment-to-custom-targets>_ (#4971, #5396, @jamestran201)\n\nBug fixes and documentation updates:\n\n- [Tracking \/ UI] Fix artifact listing and download failures that occurred when operating the MLflow server in ``--serve-artifacts`` mode (#5409, @dbczumar)\n- [Tracking] Support environment-variable-based authentication when making artifact requests to the MLflow server in ``--serve-artifacts`` mode (#5370, @TimNooren)\n- [Tracking] Fix bugs in hostname and path resolution when making artifacts requests to the MLflow server in ``--serve-artifacts`` mode (#5384, #5385, @mert-kirpici)\n- [Tracking] Fix an import error that occurred when ``mlflow.log_figure()`` was used without ``matplotlib.figure`` imported (#5406, @WeichenXu123)\n- [Tracking] Correctly log XGBoost metrics containing the ``@`` symbol during autologging (#5403, @maxfriedrich)\n- [Tracking] Fix a SQL Server database error that occurred during Runs search (#5382, @dianacarvalho1)\n- [Tracking] When downloading artifacts from HDFS, store them in the user-specified destination directory (#5210, @DimaClaudiu)\n- [Tracking \/ Model Registry] Improve performance of large artifact and model downloads (#5359, @mehtayogita)\n- [Models] Fix fast.ai PyFunc inference behavior for models with 2D outputs (#5411, @santiagxf)\n- [Models] Record Spark model information to the active run when ``mlflow.spark.log_model()`` is called (#5355, @szczeles)\n- [Models] Restore onnxruntime execution providers when loading ONNX models with ``mlflow.pyfunc.load_model()`` (#5317, @ecm200)\n- [Projects] Increase Docker image push timeout when using Projects with Docker (#5363, @zanitete)\n- [Python] Fix a bug that prevented users from enabling DEBUG-level Python log outputs (#5362, @dbczumar)\n- [Docs] Add a developer guide explaining how to build custom plugins for ``mlflow.evaluate()`` (#5333, @WeichenXu123)\n\nNote: Version 1.24.0 of the MLflow R package has not yet been released. It will be available on CRAN within the next week.\n\nFor a comprehensive list of changes, see the release change log, and check out the latest documentation on mlflow.org."
    },
    {
        "Question_title":"rest api request create-run",
        "Question_created_time":"2021-03-09T20:20:48",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/XaAAvIMX2Vc",
        "Question_comment_count":1,
        "Question_view_count":11,
        "Question_body":"Hi, i try to learn to make rest call but could not find out using the documentation.\nhttps:\/\/mlflow.org\/docs\/latest\/rest-api.html#create-run\nI try using post on the address and did not work out.\n\nhttp:\/\/192.168.1.3:5000\/api\/2.0\/preview\/mlflow\/runs\/create\n\n\n{\"experiment_id\":\"2\",\n\"user_id\":\"meunome\",\n\"start_time\": 1615324496000,\n\"tags\":{\n\"metrics\":{\"key\":\"f1\",\"value\":1},\n\"params\":{\"key\":\"param1\",\"value\":\"1\"}\n}\n}\n\n\nO got one\u00a0 error because the tags are not correct set. So, how to set the tags correct?\n\nThis is the error:\n\n<!DOCTYPE HTML PUBLIC \"-\/\/W3C\/\/DTD HTML 3.2 Final\/\/EN\">\n<title>500 Internal Server Error<\/title>\n<h1>Internal Server Error<\/h1>\n<p>The server encountered an internal error and was unable to complete your request. Either the server is overloaded or\nthere is an error in the application.<\/p>"
    },
    {
        "Question_title":"Scaling predictions with MLOps",
        "Question_created_time":"2023-06-05T04:52:41",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/Q8uRWgj8cmk",
        "Question_comment_count":0,
        "Question_view_count":20,
        "Question_body":"Hello everyone,\n\nI'm working on a project where a Python client connects to a server in a Kubernetes cluster (in production) or Docker Compose (locally), using custom RPC protocol that we developed.\u00a0\n\nDuring the interaction with the server, the server will be requesting a large number of predictions from the client in a short amount of time, and these predictions will be sent in small batches. To address this, I would like to achieve the following\n\n\nI want to:\n1. Wrap the client's models without specifying the model type or requirements.\n2. Save the models in my Kubernetes cluster or Docker Compose file system.\n3. Scale the models to 5-30 replicas for prediction needs, on-the-fly.\n4. (bonus)\u00a0- Implement \/ use my custom communication protocol instead of a REST API.\n\nI am seeking guidance on:\n\nWhether MLflow.pyfunc the\u00a0appropriate solution for fulfilling these requirements?\u00a0\nI would appreciate any tips or instructions on using the module to accomplish the following tasks: wrapping ML models agnostically, saving them, and automatically scaling them when needed, on-the-fly.\n\n\nThank you in advance for your assistance!\nOren"
    },
    {
        "Question_title":"Is there any way to display the entire source path of the file",
        "Question_created_time":"2019-07-30T04:37:51",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/CKfSORLcfRs",
        "Question_comment_count":2,
        "Question_view_count":8,
        "Question_body":"Hi,\n\nIn the MLFLOW UI, the source only displays the name of the file whereas when I set the source tag I set the entire path in that.\nis there any way to display the entire path, specially if the file is saved in a GIT repository.\n\n\nThanks"
    },
    {
        "Question_title":"MLflow 1.11.0 released!",
        "Question_created_time":"2020-08-31T03:41:05",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/Cf8RLtdN5A4",
        "Question_comment_count":0,
        "Question_view_count":31,
        "Question_body":"Hi all,\n\nWe are happy to announce the availability of\u00a0MLflow 1.11.0!\n\nMLflow 1.11.0 includes a number of major features and improvements, in addition to bug fixes and documentation updates:\n\nNew\u00a0mlflow.sklearn.autolog()\u00a0API for automatic logging of metrics, params, and models from scikit-learn model training (#3287,\u00a0@harupy;\u00a0#3323,\u00a0#3358\u00a0@dbczumar)\nRegistered model & model version creation APIs now support specifying an initial\u00a0description\u00a0(#3271,\u00a0@sueann)\nThe R\u00a0mlflow_log_model\u00a0and\u00a0mlflow_load_model\u00a0APIs now support XGBoost models (#3085,\u00a0@lorenzwalthert)\nNew\u00a0mlflow.list_run_infos\u00a0fluent API for listing run metadata (#3183,\u00a0@trangevi)\nAdded section for visualizing and comparing model schemas to model version and model-version-comparison UIs (#3209,\u00a0@zhidongqu-db)\nEnhanced support for using the model registry across Databricks workspaces: support for registering models to a Databricks workspace from outside the workspace (#3119,\u00a0@sueann), tracking run-lineage of these models (#3128,\u00a0#3164,\u00a0@ankitmathur-db;\u00a0#3187,\u00a0@harupy), and calling\u00a0mlflow.<flavor>.load_model\u00a0against remote Databricks model registries (#3330,\u00a0@sueann)\nUI support for setting\/deleting registered model and model version tags (#3187,\u00a0@harupy)\nUI support for archiving existing staging\/production versions of a model when transitioning a new model version to staging\/production (#3134,\u00a0@harupy)\n\nFor a comprehensive list of changes, see the\u00a0release change log, and check out the latest documentation on\u00a0mlflow.org.\n\nThanks,\nSid"
    },
    {
        "Question_title":"Configuring the docker swarm\/cluster in MLflow project",
        "Question_created_time":"2019-05-20T16:24:02",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/nTDNBIE3g2g",
        "Question_comment_count":0,
        "Question_view_count":17,
        "Question_body":"I am developing an MLflow project. The running environment is docker and needs to be a cluster\/swarm due to data and computation needs.\u00a0\n\nWhat is the recommended way to configure and manage the cluster\/swarm? Specifically, do we need Kubeflow or Kubernetes to manage the docker cluster? Where(at which file in the MLflow project structure) should we configure in MLflow project? Currently, in\u00a0the MLflow docker example on GithHub, there is a place that we can define\n\ndocker_env:\n  image:  mlflow-docker-example\n\n\nShould we define the cluster\/swarm outside MLflow framework, or let MLflow control the cluster or docker swarm?\u00a0\n\n\n\n\nThanks,\n\nBin"
    },
    {
        "Question_title":"Org Using MLflow - BRIDGEi2i Analytics",
        "Question_created_time":"2021-01-20T00:13:05",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/1ptDCEaHLZ0",
        "Question_comment_count":0,
        "Question_view_count":16,
        "Question_body":"Hi all,\n\n\nWe at BRIDGEi2i Analytics Solutions\u00a0are extensively using MLFlow in most of our analytical products.\nWe would like to support and contribute to MLFlow, Please add our organization to the list on MLFlow website.\n\n\n\n\nThanks!!\n\n\n\n\nRegards,\n\nSaddam |\u00a0Manager |\u00a0AI Actions\u00a0\n\nBRIDGEi2i Analytics Solutions\n\nCell:\u00a0+91 - 8147171826\n\n\n\n\n\n\n\nThis e-mail (and any attachments), is confidential and may be privileged. It may be read, copied and used only by intended recipients. Unauthorized access to this e-mail (or attachments) and disclosure or copying of its contents or any action taken in reliance on it is unlawful. Unintended recipients must notify the sender immediately by e-mail or phone and delete it from their system without making any copies or disclosing it to a third person. BRIDGEi2i Analytics Solutions reserves the right to store, monitor and review the content of all messages sent to or from this email address."
    },
    {
        "Question_title":"LLM",
        "Question_created_time":"2023-06-07T20:24:04",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/MQjbMMYWwAU",
        "Question_comment_count":2,
        "Question_view_count":10,
        "Question_body":"New to MLFLow. I have used tutorial to train, track and register the models. My understanding is that Model=Model Info,version etc + Artifact (at some location). My question is how is Model represented when using a Model as a Service like Open AI where there is no artifact?\u00a0\n\n\nCan MLFlow be used for this scenario? If so how specifically?"
    },
    {
        "Question_title":"RFC: Batched logging APIs in MLflow",
        "Question_created_time":"2019-02-25T17:49:00",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/0M2BIceZirQ",
        "Question_comment_count":0,
        "Question_view_count":13,
        "Question_body":"Hi all,\n\n\nThis GitHub issue contains a proposal for adding new REST, fluent, and client APIs for logging batches of metrics\/params\/tags in MLflow, which we expect will improve performance by reducing the number of API requests needed to log data.\n\n\n\nWe may deprecate the existing set of REST APIs in favor of the new batched API endpoint in MLflow 1.0. Any feedback is welcome - we'd like to start implementation work on this by early next week.\n\nThanks!\nSid"
    },
    {
        "Question_title":"MLflow 0.9.0 Released!",
        "Question_created_time":"2019-03-28T15:56:00",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/nmStGjJT720",
        "Question_comment_count":2,
        "Question_view_count":21,
        "Question_body":"MLflow 0.9.0 has been released!\n\n\nMLflow 0.9.0 introduces several major features:\nSupport for running MLflow Projects in Docker containers.\nDatabase stores for the MLflow Tracking Server.\nSimplified custom Python model packaging.\nPlugin systems allowing third party libraries to extend MLflow functionality.\nSupport for HTTP authentication to the Tracking Server in the R client.\nAnd a few breaking changes:\n[Scoring] The pyfunc scoring server now expects requests with the application\/json content type to contain json-serialized pandas dataframes in the split format, rather than the records format. Also, when reading the pandas dataframes from JSON, the scoring server no longer automatically infers data types as it can result in unintentional conversion of data types.\n[API] Removed GetMetric & GetParam from the REST API as they are subsumed by GetRun.\nFor a comprehensive list of features, see the release change log , and check out the latest documentation on mlflow.org ."
    },
    {
        "Question_title":"MLflow Release 0.4.1",
        "Question_created_time":"2018-08-03T19:30:52",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/2Diy6_Sflr0",
        "Question_comment_count":0,
        "Question_view_count":28,
        "Question_body":"Hi mlflow-users,\n\nMLflow Release 0.4.1 is ready, released 2018-08-03. The release is available on\u00a0PyPI\u00a0and docs are\u00a0updated. Here are the release notes (also available\u00a0on GitHub):\n\n\n\nBreaking changes: None\n\nFeatures:\n\n[Projects] MLflow will use the conda installation directory given by the $MLFLOW_CONDA_HOME if specified (e.g. running conda commands by invoking \"$MLFLOW_CONDA_HOME\/bin\/conda\"), defaulting to running \"conda\" otherwise. (#231,\u00a0@smurching)\n[UI] Show GitHub links in the UI for projects run from http(s):\/\/ GitHub URLs (#235,\u00a0@smurching)\n\nBug fixes:\n\nFix GCSArtifactRepository issue when calling list_artifacts on a path containing nested directories (#233,\u00a0@jakeret)\nFix Spark model support when saving\/loading models to\/from distributed filesystems (#180,\u00a0@tomasatdatabricks)\nAdd missing mlflow.version import to sagemaker module (#229,\u00a0@dbczumar)\nValidate metric, parameter and run IDs in file store and Python client (#224,\u00a0@mateiz)\nValidate that the tracking URI is a remote URI for Databricks project runs (#234,\u00a0@smurching)\nFix bug where we'd fetch git projects at SSH URIs into a local directory with the same name as the URI, instead of into a temporary directory (#236,\u00a0@smurching)\n\n\n\n\n\nThanks,\nSid"
    },
    {
        "Question_title":"MLflow 1.13.1 released!",
        "Question_created_time":"2020-12-31T04:40:43",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/-a8i25u253Q",
        "Question_comment_count":0,
        "Question_view_count":11,
        "Question_body":"Hi all, we are happy to announce the availability of MLflow 1.13.1!\n\nNote: The MLflow R package for 1.13.1 is not yet available on CRAN because CRAN's submission system will be offline until January 4.\n\nMLflow 1.13.1 is a patch release containing bug fixes and small changes:\n\nFix bug causing Spark autologging to ignore configuration options specified by mlflow.autolog() (#3917,\u00a0@dbczumar)\nFix bugs causing metrics to be dropped during TensorFlow autologging (#3913,\u00a0#3914,\u00a0@dbczumar)\nFix incorrect value of optimizer name parameter in autologging PyTorch Lightning (#3901,\u00a0@harupy)\nFix model registry database allow_null_for_run_id migration failure affecting MySQL databases (#3836,\u00a0@t-henri)\nFix failure in transition_model_version_stage when noncanonical stage name is passed (#3929,\u00a0@harupy)\nFix an undefined variable error causing AzureML model deployment to fail (#3922,\u00a0@eedeleon)\nReclassify scikit-learn as a pip dependency in MLflow Model conda environments (#3896,\u00a0@harupy)\nFix experiment view crash and artifact view inconsistency caused by artifact URIs with redundant slashes (#3928,\u00a0@dbczumar)\nThis information is also available in the\u00a0release change log, and you can check out the latest documentation for MLflow 1.13.1 on\u00a0mlflow.org."
    },
    {
        "Question_title":"[RFC] Fluent API for MLflow Java SDK",
        "Question_created_time":"2019-06-27T16:57:58",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/QdB_DBMGPhU",
        "Question_comment_count":0,
        "Question_view_count":2,
        "Question_body":"Hi MLflow users,\n\n\nWe're planning on adding a \"fluent\" API to the MLflow Java SDK. This API allows users to manage their MLflow runs similarly to how they would with the Python SDK. Instead of\n    RunInfo runCreated = client.createRun(expId);\n    System.out.println(\"CreateRun: \" + runCreated);\n    String runId = runCreated.getRunUuid();\n\n    \/\/ Log parameters\n    client.logParam(runId, \"min_samples_leaf\", \"2\");\n    client.logParam(runId, \"max_depth\", \"3\");\n\n    \/\/ Log metrics\n    client.logMetric(runId, \"auc\", 2.12F);\n    client.logMetric(runId, \"accuracy_score\", 3.12F);\n    client.logMetric(runId, \"zero_one_loss\", 4.12F);\n\n    \/\/ Update finished run\n    client.setTerminated(runId, RunStatus.FINISHED);\nthe code would look something like\n    MlflowContext mlflow = MlflowContext.getOrCreate();\n    ActiveRun run = mlflow.startRun(\"run\");\n    run.logParam(\"alpha\", \"0.0\");\n    run.logMetric(\"MSE\", 0.0);\n    run.setTags(ImmutableMap.of(\n      \"company\", \"databricks\",\n      \"org\", \"engineering\"\n    ));\n    run.endRun();\nWe'd appreciate any feedback on the proposed APIs on the Github PR.\u00a0https:\/\/github.com\/mlflow\/mlflow\/pull\/1508\n\n\nThanks!\nAndrew"
    },
    {
        "Question_title":"What's the purpose of mlflow.models.FlavorBackend.serve API ?",
        "Question_created_time":"2019-07-24T06:30:54",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/O_w-8r1UVmg",
        "Question_comment_count":1,
        "Question_view_count":7,
        "Question_body":"Hi,\n\nI was looking into the\u00a0mlflow.models.FlavorBackend.serve API. What is the purpose of this API? Has anyone used it?"
    },
    {
        "Question_title":"java api serve model",
        "Question_created_time":"2020-05-07T04:06:21",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/Cl2cPlQhy98",
        "Question_comment_count":0,
        "Question_view_count":19,
        "Question_body":"Hey. is there a possibility to serve a model with java api"
    },
    {
        "Question_title":"DATA Pill - knowledge-sharing project",
        "Question_created_time":"2022-06-27T15:42:17",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/hm7VvOcNIuY",
        "Question_comment_count":0,
        "Question_view_count":24,
        "Question_body":"Hi,\n\nAs we are a community focused around MLFlow I thought I would send you some information about the new DATA Pill project.\u00a0\n\nI hope you will be interested because it covers our area and the project is focused on highly selected content for specialists.\n\nIt is also a community-driven project.\n\nDATA Pill is a weekly newsletter with an overview of the best Big Data, Cloud and AI\/ML content.\n\nfiltered content from over 200 sources\n\nextracts from articles, tutorials, podcasts, youtube, etc\n\na simple mail with a condensed form that you can skim through in just 10 minutes\u00a0\n\nreminders of upcoming meetups and events\n\nHere you can see examples of previous mails: DATA PiIl, so you can decide if it's something for you.\n\nIt started from the internal slack channel where we shared interesting links.\n\nOver time, the idea arose to organize this content more and gather it in one place\u00a0\n\nso that it would not get lost amongst hundreds of notifications.\u00a0\n\nSince we started doing this, browsing through even more sources of information,\u00a0\n\nsomeone threw in a thought: why not share it and allow everyone to subscribe?\n\n\n\n\nWe also want to involve everyone who is interested in creating this newsletter.\u00a0\n\nWe are in ongoing communication by mail and we are looking for a place where we could interact more.\n\nAny ideas are welcomed.\n\n\n\n\n\n\nCheers!\nSylwia from\u00a0GetInData"
    },
    {
        "Question_title":"databricks to power bi",
        "Question_created_time":"2021-05-17T10:50:13",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/GvkoTw0sL4U",
        "Question_comment_count":2,
        "Question_view_count":11,
        "Question_body":"Hello community , i'm trying to save stream data in delta lake and i want to push this data to power bi for real time insights , however when i try to connect databricks to power bi i get an empty table , someone can help me please ??\u00a0\nif there's another alternative it would be grateful\u00a0\nthank you"
    },
    {
        "Question_title":"MLFLow Deployment",
        "Question_created_time":"2023-06-09T11:32:19",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/AscalsFRAK4",
        "Question_comment_count":0,
        "Question_view_count":2,
        "Question_body":"Is there any best practice of deploying a new version of model without a downtime to the application? As I understand currently you have to run mlflow deployment that does all the container stuff and is not transparent. What is the best way? If there are any examples that would be great.\n\n\nAlso, when a new version is created can we just switch the version dynamically and load it dynamically in the model serve or the model inference service?"
    },
    {
        "Question_title":"Experimental status of Model Registry API",
        "Question_created_time":"2020-05-19T06:06:19",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/Ke9c9AASIHM",
        "Question_comment_count":1,
        "Question_view_count":18,
        "Question_body":"Hi,\n\n\nModel Registry API has been around since v1.4.0 and is currently marked as experimental.\nIt's useful for managing the processes around model life-cycle, but committing to an experimental feature feels risky.\n\n\nCould someone please share if there are plans on significantly altering\/removing it?\nWhen would it be considered production ready?\n\n\nBest regards,\nAlexey"
    },
    {
        "Question_title":"Organization - AI Busters uses mlflow",
        "Question_created_time":"2020-07-23T08:41:06",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/SsWKXFYQWkY",
        "Question_comment_count":0,
        "Question_view_count":42,
        "Question_body":"Hello,\n\nWe are AI Busters (aibusters.com) and we help fintech companies in automisation of\u00a0 customer-service departments thanks to AI.\nMl-flow helps us in many things e.g. transfer models from development stage to production stage and manage of model releases. In the begining we used our self-made solution, but ml-flow gave us more of opportunities.\nWe are happy to be part of ml-flow community and would be glad to be a contributor and appear on website in organization's section.\n\nRegards,\nNorbert Fija\u0142ek\nCo-Founder"
    },
    {
        "Question_title":"MLflow 0.8.2 Released!",
        "Question_created_time":"2019-01-30T18:30:19",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/pciLszBL2ig",
        "Question_comment_count":0,
        "Question_view_count":23,
        "Question_body":"MLflow 0.8.2 has been released!\n\n\n\nMLflow 0.8.2 is a patch release on top of 0.8.1 containing bug fixes and documentation updates. Please see the release change log\u00a0for more information\u00a0about the fixes and updates introduced in this release. Also, check out the latest documentation on mlflow.org."
    },
    {
        "Question_title":"connecting vertica to mlflow for recording runs",
        "Question_created_time":"2019-09-13T03:39:03",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/Fg7JEwWlbTA",
        "Question_comment_count":2,
        "Question_view_count":31,
        "Question_body":"Hi,\u00a0\n\nHas anyone tried connecting vertica with mlflow? It's an\u00a0SQLAlchemy compatible database which means it should work with mlflow."
    },
    {
        "Question_title":"File store backup strategy",
        "Question_created_time":"2019-03-22T09:03:09",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/kTZMgpLKWew",
        "Question_comment_count":4,
        "Question_view_count":23,
        "Question_body":"I have deployed mlflow on kubernetes for the production environment. I am planning to backup 'file store' so that experiment metadata can be retrieved in case of storage failure. What would be the preferred interval at which I should take backup. Also if I simply restore data from the backup location, will mlflow resume its operation?"
    },
    {
        "Question_title":"Tracking predictions with ml flow",
        "Question_created_time":"2021-05-06T22:49:32",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/ru9XgXqIMCA",
        "Question_comment_count":4,
        "Question_view_count":278,
        "Question_body":"Hello all,\n\n\nTL;DR - Can you track the inference side of an ml pipeline using ml flow? if so whats the recommended way?\n\n\nI was thinking of using ml-flow-tracking to track model pipelines. ml-flow looks like a really good fit for tracking the training side, but I also want to track the prediction\/inference side. I didn't see any functionality for this built in to ml-flow.\n\n\nLet's define a \"problem\" has a single point solution that results in a model, that model will then go into production and then be used it to make batch predictions. Giving that definition, I was thinking of doing it in two ways.\nHave a single experiment per \"problem\" and a tag\/parameter that says if the run is a training or a prediction run.\nHave two experiments per problem, one for training and one for prediction. Each would get their own series of runs.\nDo either of those solutions make sense from ml flow perspective? Is one preferable?\nIs there an alternative?\nThe down side of 1) is that most of the metrics for training would be not be sent for prediction and vice versa. e.g. auc and hyper-parameters wouldn't apply to prediction, and something like mean inference score wouldn't apply to training.\nThe down side of 2) is that there is no link between training or prediction for a single problem in ml-flow. This makes it hard to compare things between the two, like comparing feature drift between training and prediction.\n\n\nLittle info that might help\n\nFor any experiment we will do multiple trainings that result in a best model.\nUsing that best model we could do one or multiple predictions.\u00a0\nWe will then repeat steps 1 and 2 every so often likely due to feature drift.\nThanks!"
    },
    {
        "Question_title":"Unable to connect to HDFS",
        "Question_created_time":"2020-06-01T05:13:03",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/8olskwFCHJY",
        "Question_comment_count":0,
        "Question_view_count":14,
        "Question_body":"Hello,\nI'm installing MLFlow 1.6 on a production environment with a PostgreSQL database for --backend-store-uri and HDFS for --default-artifact-root.\u00a0When I launch an experiment it writes perfectly in PostgreSQL, but it cannot connect to HDFS to save the artifacts. El error is \"HDFS connection failed\".\u00a0HDFS is on a Cloudera cluster.I also tried MLFlow 1.8 and the error is the same.\n\n\nThanks"
    },
    {
        "Question_title":"[Python] MLflow 0.9.0.1 released",
        "Question_created_time":"2019-04-09T22:35:36",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/OVyxnXd0Jac",
        "Question_comment_count":0,
        "Question_view_count":11,
        "Question_body":"Hi all,\n\n\nWe've released an updated MLflow Python package (MLflow 0.9.0.1) on PyPI, which fixes an issue raised in https:\/\/github.com\/mlflow\/mlflow\/issues\/1113 & https:\/\/github.com\/mlflow\/mlflow\/issues\/1056 where form input (e.g. searching runs) was broken in the MLflow 0.9.0 UI.\n\n\nYou can upgrade to the new version via \"pip install --upgrade mlflow\".\n\nThanks,\nSid"
    },
    {
        "Question_title":"How to display artifacts in AWS S3?",
        "Question_created_time":"2022-08-05T01:28:51",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/D3K4imRGS20",
        "Question_comment_count":1,
        "Question_view_count":18,
        "Question_body":"Hi there,\n\n\nI'm using Mlflow 1.27.0 tracking server with docker, log db (MySQL), Artifacts storage (AWS S3). I'm trying to make model with log_params, metrics, artifacts and checked the functions worked correctly. Also, I checked my artifacts storage(AWS S3) whether artifacts are stored or not and there was no problem.\n\n\nBut, if i access tracking server and select specific log in experiment, there is no display about artifacts with tracking server's error.\n\u00a0\nSo, I want to know display artifacts in aws s3 is impossible or just environment error.\n\n\nHere are links refer to solve this problem.\n\n\nhttps:\/\/docs.databricks.com\/applications\/mlflow\/tracking.html\n\nhttps:\/\/stackoverflow.com\/questions\/72280328\/mlflow-artifacts-on-s3-but-not-in-ui\n\n\n\nBest regards,\nKwon"
    },
    {
        "Question_title":"MLflow 2.1.1 released!",
        "Question_created_time":"2022-12-26T04:07:00",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/h-SaW652I04",
        "Question_comment_count":0,
        "Question_view_count":16,
        "Question_body":"Hi all,\n\nWe are happy to announce the availability of\u00a0MLflow\u00a02.1.1\u00a0!\n\n\nMLflow 2.1.1 is a patch release containing the following bug fixes:\n\n[Scoring] Fix\u00a0mlflow.pyfunc.spark_udf()\u00a0type casting error on model with\u00a0ColSpec\u00a0input schema\nand make\u00a0PyFuncModel.predict\u00a0support dataframe with elements of\u00a0numpy.ndarray\u00a0type (#7592\u00a0@WeichenXu123)\n[Scoring] Make\u00a0mlflow.pyfunc.scoring_server.client.ScoringServerClient\u00a0support input dataframe with elements\nof\u00a0numpy.ndarray\u00a0type (#7594\u00a0@WeichenXu123)\n[Tracking] Ensure mlflow imports ML packages lazily (#7597,\u00a0@harupy)\n\n\nFor a comprehensive list of changes, see the\u00a0release\u00a0change log, and check out the latest documentation on\u00a0mlflow.org."
    },
    {
        "Question_title":"Admin Tool",
        "Question_created_time":"2020-05-20T04:59:10",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/KHc7WI97kJE",
        "Question_comment_count":3,
        "Question_view_count":36,
        "Question_body":"Hi ,\n\n\nI hope you are good.\n\n\nIs there any governance or admin tool in mlflow by which we can give only access to certain people to register a model or change a model status?\n\n\nThanks\u00a0\nSonalee"
    },
    {
        "Question_title":"Access Control for Model stage update - on-prem MLFlow",
        "Question_created_time":"2023-07-10T10:49:52",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/L5CrlEwM1Pc",
        "Question_comment_count":0,
        "Question_view_count":9,
        "Question_body":"Hello,\n\n\nI am trying to implement access control for who could update the model stage in on-prem MLFlow.\n\nCan u help with pointers on how we can setup the access control \/approval workflow for model stage upgrade in on-prem MLFlow implementation.\n\n\nThanks,\nDeepak"
    },
    {
        "Question_title":"How to debug mlflow artificat connection?",
        "Question_created_time":"2021-12-02T19:20:03",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/b0UFc00NzK0",
        "Question_comment_count":2,
        "Question_view_count":947,
        "Question_body":"Hi, I am running into a problem where the mlflow server does not load the data from the artifact storage (which is a Minio for me) for a given run. Is there a way to debug mlflow side of communication with Minio server by enabling mlflow debug flags?\n\n\nFrom the tables I know the artifact location and I am able to retrieve objects from the Minio server for that same artifact bucket and path.\u00a0\n\n\nmlflow_db=# select * from experiments ;\n\u00a0experiment_id |\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 name\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0| artifact_location | lifecycle_stage\u00a0\n---------------+-------------------------+-------------------+-----------------\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a01 | wine-pyfile-model\u00a0 \u00a0 \u00a0 \u00a0| s3:\/\/mlflow\/1\u00a0 \u00a0 \u00a0| deleted\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a02 | wine-pyfile-model-minio | s3:\/\/mlflow\/2\u00a0 \u00a0 \u00a0| deleted\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a03 | mlflow-wine\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0| s3:\/\/mlflow\/3\u00a0 \u00a0 \u00a0| active\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a04 | mlflow-wine-minio\u00a0 \u00a0 \u00a0 \u00a0| s3:\/\/mlflow\/4\u00a0 \u00a0 \u00a0| active\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a05 | rest-wine-1\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0| s3:\/\/mlflow\/5\u00a0 \u00a0 \u00a0| active\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a07 | rest-wine-2\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0| s3:\/\/mlflow\/7\u00a0 \u00a0 \u00a0| active\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a00 | rest-wine-2-updated\u00a0 \u00a0 \u00a0| s3:\/\/mlflow\/0\u00a0 \u00a0 \u00a0| active\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a08 | Default\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0| s3:\/\/mlflow\/8\u00a0 \u00a0 \u00a0| active\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a09 | rest-wine-3\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0| s3:\/\/mlflow\/9\u00a0 \u00a0 \u00a0| deleted\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 13 | rest-wine-4\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0| s3:\/\/mlflow\/13\u00a0 \u00a0 | active\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 14 | rest-wine-5\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0| s3:\/\/mlflow\/14\u00a0 \u00a0 | active\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 15 | rest-wine-51\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 | s3:\/\/mlflow\/15\u00a0 \u00a0 | active\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 16 | rest-wine-6\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0| s3:\/\/mlflow\/16\u00a0 \u00a0 | deleted\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 17 | rest-wine-61\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 | s3:\/\/mlflow\/17\u00a0 \u00a0 | active\n\n\nAny debugging ideas?\n\n\nThanks\nShounak"
    },
    {
        "Question_title":"MLflow 1.18 released!",
        "Question_created_time":"2021-06-18T06:18:25",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/I36r7oQ94NE",
        "Question_comment_count":0,
        "Question_view_count":21,
        "Question_body":"We are happy to announce the availability of MLflow 1.18.0!\n\nIn addition to bug and documentation fixes, MLflow 1.18.0 includes the following features and improvements:\n\n- Autologging performance improvements for XGBoost, LightGBM, and scikit-learn (#4416, #4473, @dbczumar)\n- Add new PaddlePaddle flavor to MLflow Models (#4406, #4439, @jinminhao)\n- Introduce paginated ListExperiments API (#3881, @wamartin-aml)\n- Include Runtime version for MLflow Models logged on Databricks (#4421, @stevenchen-db)\n- MLflow Models now log dependencies in pip requirements.txt format, in addition to existing conda format (#4409, #4422, @stevenchen-db)\n- Add support for limiting the number child runs created by autologging for scikit-learn hyperparameter search models (#4382, @mohamad-arabi)\n- Improve artifact upload \/ download performance on Databricks (#4260, @dbczumar)\n- Migrate all model dependencies from conda to \"pip\" section (#4393, @WeichenXu123)\n\nFor a comprehensive list of changes, see the release change log, and check out the latest documentation on mlflow.org."
    },
    {
        "Question_title":"mlflow scaling issue",
        "Question_created_time":"2019-02-05T15:16:58",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/MfgmfilrJsI",
        "Question_comment_count":1,
        "Question_view_count":32,
        "Question_body":"Hi all,\nwhen running below script, we notice a visible performance degradation as number of experiments increases.\nimport mlflow\n  \nfor i in range(5000):\n\n    mlflow.set_experiment('exp%d' % i)\n\n    for j in range(5):\n\n        with mlflow.start_run() as run:\n\n            mlflow.log_param('n', '%d-%d' % (i, j))\n            mlflow.log_metric('fscore', 0.9242)\n            mlflow.set_tag('some tag', '%d-%d' % (i, j))\n            with open('test.json', 'w') as f:\n                f.write('{ \"i\": %d, \"j\": %d }' % (i, j))\n            mlflow.log_artifact('test.json')\n            print(mlflow.active_run())\n\nabove script creates 5000 experiments, with 5 dummy runs in each experiment.  After about 18 hours, it has only created 2500 experiments.  At this point, it is taking about a minute to create a new experiment, and 5 seconds to create a run.\n\nwhat is the bottleneck. \nThanks in advance .."
    },
    {
        "Question_title":"MLFlow 1.29.0 release",
        "Question_created_time":"2022-09-19T10:42:47",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/RJYpm6WZZQc",
        "Question_comment_count":0,
        "Question_view_count":32,
        "Question_body":"We are happy to announce the availability of MLflow 1.29.0!\n\nMLflow 1.29.0 includes several major features and improvements:\n\nFeatures:\n[Pipelines] Improve performance and fidelity of dataset profiling in the scikit-learn regression Pipeline (#6792, @sunishsheth2009)\n[Pipelines] Add an mlflow pipelines get-artifact CLI for retrieving Pipeline artifacts (#6517, @prithvikannan)\n[Pipelines] Introduce an option for skipping dataset profiling to the scikit-learn regression Pipeline (#6456, @apurva-koti)\n[Pipelines \/ UI] Display an mlflow pipelines CLI command for reproducing a Pipeline run in the MLflow UI (#6376, @hubertzub-db)\n[Tracking] Automatically generate friendly names for Runs if not supplied by the user (#6736, @BenWilson2)\n[Tracking] Add load_text(), load_image() and load_dict() fluent APIs for convenient artifact loading (#6475, @subramaniam02)\n[Tracking] Add creation_time and last_update_time attributes to the Experiment class (#6756, @subramaniam02)\n[Tracking] Add official MLflow Tracking Server Dockerfiles to the MLflow repository (#6731, @oojo12)\n[Tracking] Add searchExperiments API to Java client and deprecate listExperiments (#6561, @dbczumar)\n[Tracking] Add mlflow_search_experiments API to R client and deprecate mlflow_list_experiments (#6576, @dbczumar)\n[UI] Make URLs clickable in the MLflow Tracking UI (#6526, @marijncv)\n[UI] Introduce support for csv data preview within the artifact viewer pane (#6567, @nnethery)\n[Model Registry \/ Models] Introduce mlflow.models.add_libraries_to_model() API for adding libraries to an MLflow Model (#6586, @arjundc-db)\n[Models] Add model validation support to mlflow.evaluate() (#6582, @jerrylian-db)\n[Models] Introduce sample_weights support to mlflow.evaluate() (#6806, @dbczumar)\n[Models] Add pos_label support to mlflow.evaluate() for identifying the positive class (#6696, @harupy)\n[Models] Make the metric name prefix and dataset info configurable in mlflow.evaluate() (#6593, @dbczumar)\n[Models] Add utility for validating the compatibility of a dataset with a model signature (#6494, @serena-ruan)\n[Models] Add predict_proba() support to the pyfunc representation of scikit-learn models (#6631, @skylarbpayne)\n[Models] Add support for Decimal type inference to MLflow Model schemas (#6600, @shitaoli-db)\n[Models] Add new CLI command for generating Dockerfiles for model serving (#6591, @anuarkaliyev23)\n[Scoring] Add \/health endpoint to scoring server (#6574, @gabriel-milan)\n[Scoring] Support specifying a variant_name during Sagemaker deployment (#6486, @nfarley-soaren)\n[Scoring] Support specifying a data_capture_config during SageMaker deployment (#6423, @jonwiggins)\nBug fixes:\n[Tracking] Make Run and Experiment deletion and restoration idempotent (#6641, @dbczumar)\n[UI] Fix an alignment bug affecting the Experiments list in the MLflow UI (#6569, @sunishsheth2009)\n[Models] Fix a regression in the directory path structure of logged Spark Models that occurred in MLflow 1.28.0 (#6683, @gwy1995)\n[Models] No longer reload the __main__ module when loading model code (#6647, @Jooakim)\n[Artifacts] Fix an mlflow server compatibility issue with HDFS when running in --serve-artifacts mode (#6482, @shidianshifen)\n[Scoring] Fix an inference failure with 1-dimensional tensor inputs in TensorFlow and Keras (#6796, @LiamConnell)\nDocumentation updates:\n[Tracking] Mark the SearchExperiments API as stable (#6551, @dbczumar)\n[Tracking \/ Model Registry] Deprecate the ListExperiments, ListRegisteredModels, and list_run_infos() APIs (#6550, @dbczumar)\n[Scoring] Deprecate mlflow.sagemaker.deploy() in favor of SageMakerDeploymentClient.create() (#6651, @dbczumar)\n\n\nFor a comprehensive list of changes, see the\u00a0release change log, and check out the latest documentation on\u00a0mlflow.org."
    },
    {
        "Question_title":"MLflow 0.8.1 Released!",
        "Question_created_time":"2018-12-26T14:12:26",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/-T0gTl9Zy9M",
        "Question_comment_count":4,
        "Question_view_count":33,
        "Question_body":"MLflow 0.8.1 has been released!\n\n\nMLflow 0.8.1 introduces several significant improvements:\n\n\nImproved UI responsiveness and load time, especially when displaying experiments containing hundreds to thousands of runs.\n\n\nImproved visualizations, including interactive scatter plots for MLflow run comparisons.\n\n\nExpanded support for scoring Python models as Spark UDFs. For more information, see the updated documentation for this feature.\n\n\nBy default, saved models will now include a Conda environment specifying all of the dependencies necessary for loading them in a new environment.\n\n\nMLflow projects can now be run from ZIP files.\n\n\n\nFor a comprehensive list of features, see the release change log, and check out the latest documentation on mlflow.org.\n\n\n\n\n\nNote: The MLflow R package for 0.8.1 is not yet available on CRAN because CRAN's submission system will be offline until January 2nd. Version 0.8.0 of the R package is compatible with the remaining components of MLflow 0.8.1."
    },
    {
        "Question_title":"mlflow demonstration with Docker containers",
        "Question_created_time":"2019-03-23T19:54:17",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/SsVBNB_7zEw",
        "Question_comment_count":0,
        "Question_view_count":30,
        "Question_body":"This\u00a0github repo\u00a0demonstrates the use of mlflow in a set of Docker container with Python and R.\u00a0 This is the high-level design for the demonstration environment and software stack."
    },
    {
        "Question_title":"Facing Problems in mlflow deployment on windows server",
        "Question_created_time":"2019-09-19T02:43:09",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/lovl7Ns6x0Y",
        "Question_comment_count":3,
        "Question_view_count":7,
        "Question_body":"I am new to mlflow and finding its windows deployment extremely challenging. Has anyone been able to successfully deploy models with mlflow on windows machine ??"
    },
    {
        "Question_title":"Model retrieval",
        "Question_created_time":"2021-06-03T11:19:00",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/t2A4618nIVk",
        "Question_comment_count":0,
        "Question_view_count":17,
        "Question_body":"Hello Community\n\n\n1.Is there a way to get all the versions of\u00a0 a particular stage of a registered model\nlatest_version_info = client.get_latest_versions(model_name, stages=[\"Archived\"]). This code fetches only the latest version not all the versions of the staged model\n\n\n2.Is there a way to delete all the versions of a staged version say I want to delete all the versions staged \"Archived\"\n\n\nRegards,\nAarthi"
    },
    {
        "Question_title":"Re: I have written a wrapper class to get prediction_proba of a boosted tree model the code works fine when tested locally but on on azure ACI",
        "Question_created_time":"2019-10-09T08:12:21",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/MCe7cD82T1Q",
        "Question_comment_count":0,
        "Question_view_count":224,
        "Question_body":"What if you call\u00a0.tolist() on the result of predict_proba()?\n\n\nOn Wed, Oct 9, 2019 at 7:00 AM babar ali <bac...@gmail.com> wrote:\n\nThis is my code to get prediction_proba from a loaded model and it gives me result however when I deploy it to azure ACI it say Object of type ndarray is not JSON serializable.\n\n\n\n\nimport\u00a0os\nimport\u00a0warnings\nimport\u00a0sys\n\n\nimport\u00a0pandas\u00a0as\u00a0pd\nimport\u00a0numpy\u00a0as\u00a0np\nfrom\u00a0sklearn.metrics\u00a0import\u00a0mean_squared_error,\u00a0mean_absolute_error,\u00a0r2_score\nfrom\u00a0sklearn.model_selection\u00a0import\u00a0train_test_split\nfrom\u00a0sklearn.linear_model\u00a0import\u00a0ElasticNet\n\n\nimport\u00a0mlflow\nimport\u00a0mlflow.sklearn\n#mlflow.set_tracking_uri(\"ml\")\nfrom\u00a0imblearn.ensemble\u00a0import\u00a0BalancedBaggingClassifier\nartifacts\u00a0=\u00a0{\n\u00a0\u00a0\u00a0\u00a0\"sk_model\":\u00a0\"\/home\/babarali\/Downloads\/77f5eb08d281409586dcbd0fae138fe4\/artifacts\/model\"\n}\n\n\n#\u00a0Define\u00a0the\u00a0model\u00a0class\nimport\u00a0mlflow.pyfunc\nclass\u00a0SklWrapper(mlflow.pyfunc.PythonModel):\n\n\n\u00a0\u00a0\u00a0\u00a0def\u00a0load_context(self,\u00a0context):\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0#\u00a0import\u00a0xgboost\u00a0as\u00a0xgb\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0import\u00a0mlflow.sklearn\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0#self.lr=mlflow.sklearn.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0self.bag_clf=\u00a0mlflow.sklearn.load_model(context.artifacts[\"sk_model\"])\n\u00a0\u00a0\u00a0\u00a0def\u00a0predict(self,\u00a0context,\u00a0model_input):\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return\u00a0{\u00a0\"prediction_proba\":\u00a0self.bag_clf.predict_proba(model_input)}\n\n\n#\u00a0Create\u00a0a\u00a0Conda\u00a0environment\u00a0for\u00a0the\u00a0new\u00a0MLflow\u00a0Model\u00a0that\u00a0contains\u00a0the\u00a0XGBoost\u00a0library\n#\u00a0as\u00a0a\u00a0dependency,\u00a0as\u00a0well\u00a0as\u00a0the\u00a0required\u00a0CloudPickle\u00a0library\nimport\u00a0cloudpickle\nimport\u00a0mlflow.sklearn\nimport\u00a0sklearn\nimport\u00a0numpy\nimport\u00a0pandas\nconda_env\u00a0=\u00a0{\n\u00a0\u00a0\u00a0\u00a0'channels':\u00a0['defaults'],\n\u00a0\u00a0\u00a0\u00a0'dependencies':\u00a0[\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'pandas={}'.format(pandas.__version__),\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'numpy={}'.format(numpy.__version__),\u00a0\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'scikit-learn={}'.format(sklearn.__version__),\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'cloudpickle={}'.format(cloudpickle.__version__),\n\u00a0\u00a0\u00a0\u00a0],\n\u00a0\u00a0\u00a0\u00a0'name':\u00a0'sk_env'\n}\n\n\n#\u00a0Save\u00a0the\u00a0MLflow\u00a0Model\u00a0skl10_mlflow_pyfunc\u00a0is\u00a0wrapper\u00a0for\u00a0sklearn\nmlflow_pyfunc_model_path\u00a0=\u00a0\"skl36_mlflow_pyfunc\"\nmlflow.pyfunc.save_model(\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0path=mlflow_pyfunc_model_path,\u00a0python_model=SklWrapper(),\u00a0artifacts=artifacts,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0conda_env=conda_env)\n\n\n#\u00a0Load\u00a0the\u00a0model\u00a0in\u00a0`python_function`\u00a0format\nloaded_model\u00a0=\u00a0mlflow.pyfunc.load_model(mlflow_pyfunc_model_path)\n\n\n#\u00a0Evaluate\u00a0the\u00a0model\nimport\u00a0pandas\u00a0as\u00a0pd\n\n\nwine_path\u00a0=\u00a0os.path.join(os.path.dirname(os.path.abspath(__file__)),\u00a0\"\/home\/babarali\/Downloads\/test_data.csv\")\ndata\u00a0=\u00a0pd.read_csv(wine_path)\nprint(data.head())\n\n\ntest_predictions\u00a0=\u00a0loaded_model.predict(data)\nprint(test_predictions)\n\n\n\n\n--\nYou received this message because you are subscribed to the Google Groups \"mlflow-users\" group.\nTo unsubscribe from this group and stop receiving emails from it, send an email to mlflow-users...@googlegroups.com.\nTo view this discussion on the web visit https:\/\/groups.google.com\/d\/msgid\/mlflow-users\/fcfbcfe8-af7e-40be-8f99-f87c0fb6e2c0%40googlegroups.com."
    },
    {
        "Question_title":"Is it possible to filter on Date?",
        "Question_created_time":"2019-07-18T23:51:40",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/EKDhKa3UrbM",
        "Question_comment_count":1,
        "Question_view_count":5,
        "Question_body":"There is a Date column in the run's field. Can I do filtering on this field? I haven't find a way to do this."
    },
    {
        "Question_title":"Organizations using MLflow - Reinsight",
        "Question_created_time":"2023-01-26T16:10:06",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/_C9EtDwHCHc",
        "Question_comment_count":0,
        "Question_view_count":22,
        "Question_body":"Hi,\n\nReinsight is a Stockholm based consulting company specialized in Data & AI, provide our solutions to banks, insurance, retails and clients in other areas. MLflow is the core part of our MLOps solution that we built and operationalizing for many clients, and it has been running really well.\n\n\nIt would be great if our company logo can appear on the MLflow.org. Please find our logo in attachment. Thanks!\n\n\n\n\nRegards,\n\nCo\u200bng Peng\n\n+46 70\u00a0429 4382\n\ncong...@reinsight.se\n\nSveav\u00e4gen 59,\u00a0 \u00a0113 59 Stockholm\n\nwww.reinsight.se"
    },
    {
        "Question_title":"Doubt regarding MLFlow",
        "Question_created_time":"2022-05-31T14:56:59",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/s717aOcKwQ0",
        "Question_comment_count":0,
        "Question_view_count":19,
        "Question_body":"Can we do training datasets and feature storing , recurrent model training and deployment pipelines and integration of ML models using MLFlow ?"
    },
    {
        "Question_title":"Support for Oracle dialect in SqlAlchemyStore",
        "Question_created_time":"2019-06-14T14:56:08",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/EC5HClf5fAE",
        "Question_comment_count":1,
        "Question_view_count":14,
        "Question_body":"Hello:\n\n\nIs anyone working on allowing Oracle databases as an option for backend storage?\u00a0 I made the necessary modifications and have it working in my local development environment, but it would need a little more work to ensure that the other dialects don't break with the changes.\u00a0 Is it worth proceeding, or is it something that someone else is already working on?\n\n\n\nThanks"
    },
    {
        "Question_title":"'Remote end closed connection without response' in log_batch()",
        "Question_created_time":"2019-12-17T16:35:19",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/9R3dx94gWns",
        "Question_comment_count":0,
        "Question_view_count":2,
        "Question_body":"The following exception is raised through a call to log_batch(). Anyone experienced something similar?\n\n\n\n\nraise ConnectionError(err, request=request)\n\nrequests.exceptions.ConnectionError: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response',))"
    },
    {
        "Question_title":"Multi user on one DB ok?",
        "Question_created_time":"2020-03-07T16:18:14",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/VQc6nWUNjYM",
        "Question_comment_count":1,
        "Question_view_count":24,
        "Question_body":"When I use tracking directly on a Database (PostgreSQL) would it cause problems when two computer do tracking into the same DB at the same time?\n\n\n\nSame question with MLFlow UI: Is it ok when we connect two UIs from two different computers to one (the same) DB?\n\n\nMy guess is that it is no problem but just want to make sure.\n\n\nThanks\nPhilip"
    },
    {
        "Question_title":"MLflow 0.8.0 released!",
        "Question_created_time":"2018-11-12T16:47:10",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/TgR6lSe4gfA",
        "Question_comment_count":1,
        "Question_view_count":17,
        "Question_body":"MLflow 0.8.0 has been released: https:\/\/github.com\/mlflow\/mlflow\/releases\/tag\/v0.8.0\n\n\nMLflow 0.8.0 introduces several major features:\n\n\n- Dramatically improved UI for comparing experiment run results (grouping columns, showing nested runs, using run names instead of ids, and persisting table state)\n- Support for deploying models as Docker containers directly to Azure Machine Learning Service Workspace (as opposed to the previously-recommended solution of Azure ML Workbench)\n\n\nIn addition to these features, there are a host of improvements and bugfixes to the REST API, R API, Python API, tracking UI, and documentation."
    },
    {
        "Question_title":"request for help",
        "Question_created_time":"2021-05-06T20:07:15",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/k0kgHG1Qbm8",
        "Question_comment_count":0,
        "Question_view_count":57,
        "Question_body":"hello everyone , how can i solve this probblem plase\u00a0\nMlflowException: Failed to download an \"MLmodel\" model file from \"\/dbfs\/databricks\/mlflow-tracking\/4026011258138627\/e1e6a5f1819e426b81587a5ea2124228\/artifacts\/spark-model\": No such file or directory: '\/dbfs\/databricks\/mlflow-tracking\/4026011258138627\/e1e6a5f1819e426b81587a5ea2124228\/artifacts\/spark-model\/MLmodel'\n\nit's urgent , please help"
    },
    {
        "Question_title":"MLflow pyfunc predict input",
        "Question_created_time":"2020-01-29T17:27:08",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/JXjoYRqVF_o",
        "Question_comment_count":4,
        "Question_view_count":30,
        "Question_body":"Hi all,\n\n\n\n\nMy team and I are using a Flask app to load and serve MLflow pyfunc PythonModels.\u00a0We found we can significantly reduce our execution time with a custom (non-Pandas) input format.\n\nI know that the\u00a0documentation\u00a0for\u00a0PythonModel.predict()\u00a0specifies pandas.DataFrame input, but looking at the\u00a0source code, the only restrictions I found are from\u00a0serving through a\u00a0Spark UDF\u00a0or\u00a0an MLflow\u00a0scoring server.\n\n\n\n\nI have a few questions:\n\n\nAm I correct in that Spark UDFs and scoring servers are the only reasons pandas.DataFrame input is expected in\u00a0PythonModel.predict()?\nWill there ever be any type-checking to enforce Pandas input?\n\nIn other words, is it safe and future-proof to continue using MLflow's pyfunc PythonModel format with non-Pandas\u00a0input?\n\nBest,\nMarcos"
    },
    {
        "Question_title":"Online Learning - fit",
        "Question_created_time":"2018-12-20T09:05:54",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/bpllkE4Rdio",
        "Question_comment_count":7,
        "Question_view_count":40,
        "Question_body":"Hey,\n\n\nThanks for this project, MLflow really help us to leverage our data-science team.\n\n\nI'm trying to understand what is the best option to have an online learning algo, which does \"model.fit\" every 30 minutes with new data and re-deployed to production.\nOur case is recommendations systems that works with REST-API and needs to be refreshed often.\n\n\nWhat is the best way to do it in mlflow?\n\n\nThanks,"
    },
    {
        "Question_title":"How does MLflow compare to ModelDB (A system to manage machine learning models)?",
        "Question_created_time":"2018-07-04T06:42:09",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/NW5GxrD9NQ0",
        "Question_comment_count":1,
        "Question_view_count":739,
        "Question_body":"Hello,\n\n\nI wonder how MLflow compares to ModelDB (A system to manage machine learning models).\n\n\nIn ModelDB web page, I've seen Matei Zaharia as one of the contributors:\n\n\n\u00a0\u00a0\u00a0 https:\/\/mitdbg.github.io\/modeldb\/\n\n\nAny ideas?\n\n\n\n--\nEmre"
    },
    {
        "Question_title":"MLflow 1.22.0 released!",
        "Question_created_time":"2021-11-29T22:10:19",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/4CI3QasyBv4",
        "Question_comment_count":0,
        "Question_view_count":13,
        "Question_body":"We are happy to announce the availability of\u00a0MLflow\u00a01.22.0!\n\nMLflow 1.22.0 includes several major features and improvements:\n\nFeatures:\n\n[UI] Add a share button to the Experiment page (#4936,\u00a0@marijncv)\n[UI] Improve readability of column sorting dropdown on Experiment page (#5022,\u00a0@WeichenXu123;\u00a0#5018,\u00a0@NieuweNils,\u00a0@coder-freestyle)\n[Tracking] Mark all autologging integrations as stable by removing\u00a0@experimental\u00a0decorators (#5028,\u00a0@liangz1)\n[Tracking] Add optional\u00a0experiment_id\u00a0parameter to\u00a0mlflow.set_experiment()\u00a0(#5012,\u00a0@dbczumar)\n[Tracking] Add support for XGBoost scikit-learn models to\u00a0mlflow.xgboost.autolog()\u00a0(#5078,\u00a0@jwyyy)\n[Tracking] Improve statsmodels autologging performance by removing unnecessary metrics (#4942,\u00a0@WeichenXu123)\n[Tracking] Update R client to tag nested runs with parent run ID (#4197,\u00a0@yitao-li)\n[Models] Support saving and loading all XGBoost model types (#4954,\u00a0@jwyyy)\n[Scoring] Support specifying AWS account and role when deploying models to SageMaker (#4923,\u00a0@andresionek91)\n[Scoring] Support serving MLflow models with MLServer (#4963,\u00a0@adriangonz)\n\nBug fixes and documentation updates:\n\n[UI] Fix bug causing Metric Plot page to crash when metric values are too large (#4947,\u00a0@ianshan0915)\n[UI] Fix bug causing parallel coordinate curves to vanish (#5087,\u00a0@harupy)\n[UI] Remove\u00a0Creator\u00a0field from Model Version page if user information is absent (#5089,\u00a0@jinzhang21)\n[UI] Fix model loading instructions for non-pyfunc models in Artifact Viewer (#5006,\u00a0@harupy)\n[Models] Fix a bug that added\u00a0mlflow\u00a0to\u00a0conda.yaml\u00a0even if a hashed version was already present (#5058,\u00a0@maitre-matt)\n[Docs] Add Python documentation for metric, parameter, and tag key \/ value length limits (#4991,\u00a0@westford14)\n[Examples] Update Python version used in Prophet example to fix installation errors (#5101,\u00a0@BenWilson2)\n[Examples] Fix Kubernetes\u00a0resources\u00a0specification in MLflow Projects + Kubernetes example (#4948,\u00a0@jianyuan)\n\nFor a comprehensive list of changes, see the\u00a0release change log, and check out the latest documentation on\u00a0mlflow.org.\n\n\n\n\nNote:\u00a0Version 1.22.0 of the MLflow R package has not yet been released. It will be available on CRAN within the next week."
    },
    {
        "Question_title":"Does mlflow have Slack channel?",
        "Question_created_time":"2019-06-27T06:07:15",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/aG4Mm0nuIE4",
        "Question_comment_count":2,
        "Question_view_count":39,
        "Question_body":"I think communication in Slack will be much efficient."
    },
    {
        "Question_title":"Artifacts not shown in mlflow tracking ui",
        "Question_created_time":"2018-12-19T10:49:18",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/_wStTxLPmRg",
        "Question_comment_count":8,
        "Question_view_count":85,
        "Question_body":"Hi,\n\n\nI am running the following command: mlflow server -h 0.0.0.0\u00a0--file-store .\/mlruns\u00a0--default-artifact-root .\/artifacts\n\n\nI then run the example from here:\u00a0https:\/\/github.com\/mlflow\/mlflow\/blob\/master\/examples\/quickstart\/mlflow_tracking.py\n\n\nEverything seems to be running fine, but the artifacts are not shown in the ui.\n\n\nShmuel"
    },
    {
        "Question_title":"MLFlow Get Run information in R API and NGINX issue",
        "Question_created_time":"2018-11-06T19:55:49",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/6nWaATd4uTw",
        "Question_comment_count":1,
        "Question_view_count":31,
        "Question_body":"Hi all,\n\n\nGreat work on mlflow, we have been using it to run many experiments.\n\n\nI am trying to get a list of runs for a specific experiment. I am hosting mlflow in a container running on an EC2 instance in AWS.\u00a0\n\n\n\nI am using the R API.\n\n\n# set tracking URI\nmlflow_set_tracking_uri(ML_FLOW_TRACKING_URI)\n\n\n# init MLflow client object\nclient <- mlflow:::mlflow_client(ML_FLOW_TRACKING_URI)\n\n\n# extract experimment information\nd_exp <- mlflow:::mlflow_client_get_experiment(client, EXPERIMENT_ID)\n\n\n\nNow when I use this on experiments with few runs (<30) I get back the data in a named list with the data being stores in d_exp$runs\n\n\nHowever, for experiments with many runs I receive a cURL error as follow:\n\n\nError in curl::curl_fetch_memory(url, handle = handle) :\u00a0\n\u00a0 Timeout was reached: Operation timed out after 1003 milliseconds with 0 bytes received\n\n\nHas anyone had a similar\u00a0problem and happened to fix it? Or is this an issue with the API?\n\n\nNGINX Issue\n\n\nAlso another issue I have is sending requests to mlflow when I secure it with SSL certs using nGINX (with authentication) as a reverse proxy.\n\n\nIs there an example implementation on how to get this setup and working? I saw that there is a HostCreds class in the source code, but how do I initialise this?\n\n\nCurrent fix has been to whitelist the IP address, however this is obviously not a long-term solution.\n\n\nCheers,\n--\n\nVivek Katial\nData Scientist\n\nLevel 1, 155 Karangahape Road, Auckland Central,\u00a01010\nvivek....@quantiful.co.nz | \u00a00210435892\nwww.quantiful.co.nz"
    },
    {
        "Question_title":"Model Deployment Issues",
        "Question_created_time":"2019-09-03T10:59:24",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/QPGFSApJ4Io",
        "Question_comment_count":3,
        "Question_view_count":41,
        "Question_body":"Hello,\n\n\nI've been trying to deploy a scikit-learn model (a super simple classification using the Iris data set) that I built and trained using the standard MLproject protocol. I have been trying to deploy in two different manners and have been getting errors both ways:\n\n\nServe the model using a local REST server\n\nTo serve the model, I have been using the following command:\nmlflow models serve -m mlruns\/0\/f7cad9db15134c2abaa6d2a8b208c505\/artifacts\/sk_models -h **.***.**.** -p 1234 --no-conda\nNOTE: The host flag is the correct IP, I just masked it for this post\n\nWhen I run this command, I get the following output:\n2019\/09\/03 14:36:16 INFO mlflow.models.cli: Selected backend for flavor 'python_function'\n2019\/09\/03 14:36:16 INFO mlflow.pyfunc.backend: === Running command 'gunicorn --timeout=60 -b **.***.**.**:1234 -w 1 ${GUNICORN_CMD_ARGS} -- mlflow.pyfunc.scoring_server.wsgi:app'\nbash: gunicorn: command not found\n\nI have ensured that gunicorn is in fact installed:\nsudo gunicorn --version\ngunicorn (version 19.9.0)\n\nIs this an issue that anyone else has run into?\n\n\nDeploy the model to Sagemaker\n\nTo deploy onto Sagemaker, I built the model using MLProject. The docker image that I have uploaded to ECR is the image I used to run the project and generate the model. When I attempt to deploy the model, I am using the following python script (the XXXX are personal info I removed for the post):\n\nimport mlflow.sagemaker as mfs\n\n\nrun_id = '0'\nexperiment_id = 'f7cad9db15134c2abaa6d2a8b208c505'\nregion = 'us-east-1'\naws_id = 'XXXXXXX'\narn = 'XXXXXXXXXX'\nimage_url = 'XXXXXXX\/mlflow-sklearn-test:latest'\napp_name = 'iris-dt-1'\nmodel_uri = 'mlruns\/%s\/%s\/artifacts\/sk_models' % (run_id, experiment_id)\n\n\nmfs.deploy(app_name=app_name, model_uri=model_uri, region_name=region, mode='create', execution_role_arn=arn, image_url=image_url)\n\n\nWhen I run the script, I get the following error:\n\u00a0\n2019\/09\/03 14:50:53 INFO mlflow.sagemaker: Creating new endpoint with name: iris-dt-1 ...\nTraceback (most recent call last):\n\u00a0 File \"sagemaker_deployment.py\", line 12, in <module>\n\u00a0 \u00a0 mfs.deploy(app_name=app_name, model_uri=model_uri, region_name=region, mode='create', execution_role_arn=arn, image_url=image_url)\n\u00a0 File \"\/usr\/local\/lib\/python3.6\/site-packages\/mlflow\/sagemaker\/__init__.py\", line 325, in deploy\n\u00a0 \u00a0 role=execution_role_arn, sage_client=sage_client)\n\u00a0 File \"\/usr\/local\/lib\/python3.6\/site-packages\/mlflow\/sagemaker\/__init__.py\", line 628, in _create_sagemaker_endpoint\n\u00a0 \u00a0 sage_client=sage_client)\n\u00a0 File \"\/usr\/local\/lib\/python3.6\/site-packages\/mlflow\/sagemaker\/__init__.py\", line 840, in _create_sagemaker_model\n\u00a0 \u00a0 model_response = sage_client.create_model(**create_model_args)\n\u00a0 File \"\/usr\/local\/lib\/python3.6\/site-packages\/botocore\/client.py\", line 357, in _api_call\n\u00a0 \u00a0 return self._make_api_call(operation_name, kwargs)\n\u00a0 File \"\/usr\/local\/lib\/python3.6\/site-packages\/botocore\/client.py\", line 661, in _make_api_call\n\u00a0 \u00a0 raise error_class(parsed_response, operation_name)\nbotocore.exceptions.ClientError: An error occurred (ValidationException) when calling the CreateModel operation: ECR image \"XXXXXXX\/mlflow-sklearn-test:latest\" is invalid.\n\n\nHas anyone experienced this error before? I have tried googling the answer and the only answer I could find was to add the\u00a0:latest\u00a0tag to the image URI, but I have already done this and I still get the error.\n\n\n\n\nThank you so much!!"
    },
    {
        "Question_title":"Trying to use the mysql db with backend-store-uri",
        "Question_created_time":"2019-05-13T15:36:59",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/-N-LhiQuJ9w",
        "Question_comment_count":3,
        "Question_view_count":40,
        "Question_body":"When I use a mysql url for the backend-store-uri flag, I cannot get the mlflow server to run.\u00a0If I use a path and the filestore, it works fine.\n\n\u00a0\n\nI'm getting the standard error homepage: \"Oops! Something went wrong\"\n\n\n\n\nAny suggestions?"
    },
    {
        "Question_title":"log parameters in databricks",
        "Question_created_time":"2021-05-04T18:18:23",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/M5-z8doznpo",
        "Question_comment_count":4,
        "Question_view_count":43,
        "Question_body":"Hello everyone , can someone please tell me how can i log the best parameters of crossvalid and paramgrid using mlflow , pyspark in databricks\u00a0\nthank you"
    },
    {
        "Question_title":"Request to add TVS in Organizations using & contributing to MLflow",
        "Question_created_time":"2021-07-26T10:12:04",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/ReyGdDjmCeo",
        "Question_comment_count":1,
        "Question_view_count":59,
        "Question_body":"Hi Team,\n\nAt TVS Motor we use MLflow extensively for ML model tracking, projects and registry. In the past, I was a contributor to MLflow as well.\n\nSo, can we get the TVS Motor listed in the \u201cOrganizations using and contributing to MLflow\u201d section, please?\n\n\n\n\n\u00a0\n\n\u00a0Thanks,\nNaga"
    },
    {
        "Question_title":"Can I build an Azure ML Container Image for an MLflow model which is trained and stored locally on my machine.",
        "Question_created_time":"2019-09-20T07:23:04",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/k0GuAjkC24k",
        "Question_comment_count":0,
        "Question_view_count":4,
        "Question_body":"Can I build an Azure ML Container Image for an MLflow model which is trained and stored locally on my machine."
    },
    {
        "Question_title":"MLflow 2.1.0 released!",
        "Question_created_time":"2022-12-21T10:35:47",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/2PQHfZQ9fwg",
        "Question_comment_count":0,
        "Question_view_count":6,
        "Question_body":"Hi all,\n\n\nWe are happy to announce the availability of\u00a0MLflow\u00a02.1.0\u00a0!\n\nMLflow 2.1.0 includes several major features and improvements\n\nFeatures:\n\n[Recipes] Introduce support for multi-class classification (#7458,\u00a0@mshtelma)\n[Recipes] Extend the pyfunc representation of classification models to output scores in addition to labels (#7474,\u00a0@sunishsheth2009)\n[UI] Add user ID and lifecycle stage quick search links to the Runs page (#7462,\u00a0@jaeday)\n[Tracking] Paginate the GetMetricHistory API (#7523,\u00a0#7415,\u00a0@BenWilson2)\n[Tracking] Add Runs search aliases for Run name and start time that correspond to UI column names (#7492,\u00a0@apurva-koti)\n[Tracking] Add a\u00a0\/version\u00a0endpoint to\u00a0mlflow server\u00a0for querying the server's MLflow version (#7273,\u00a0@joncarter1)\n[Model Registry] Add FileStore support for the Model Registry (#6605,\u00a0@serena-ruan)\n[Model Registry] Introduce an\u00a0mlflow.search_registered_models()\u00a0fluent API (#7428,\u00a0@TSienki)\n[Model Registry \/ Java] Add a\u00a0getRegisteredModel()\u00a0method to the Java client (#6602) (#7511,\u00a0@drod331)\n[Model Registry \/ R] Add an\u00a0mlflow_set_model_version_tag()\u00a0method to the R client (#7401,\u00a0@leeweijie)\n[Models] Introduce a\u00a0metadata\u00a0field to the MLmodel specification and\u00a0log_model()\u00a0methods (#7237,\u00a0@jdonzallaz)\n[Models] Extend\u00a0Model.load()\u00a0to support loading MLmodel specifications from remote locations (#7517,\u00a0@dbczumar)\n[Models] Pin the major version of MLflow in Models'\u00a0requirements.txt\u00a0and\u00a0conda.yaml\u00a0files (#7364,\u00a0@BenWilson2)\n[Scoring] Extend\u00a0mlflow.pyfunc.spark_udf()\u00a0to support StructType results (#7527,\u00a0@WeichenXu123)\n[Scoring] Extend TensorFlow and Keras Models to support multi-dimensional inputs with\u00a0mlflow.pyfunc.spark_udf()(#7531,\u00a0#7291,\u00a0@WeichenXu123)\n[Scoring] Support specifying deployment environment variables and tags when deploying models to SageMaker (#7433,\u00a0@jhallard)\n\nBug fixes:\n\n[Recipes] Fix a bug that prevented use of custom\u00a0early_stop\u00a0functions during model tuning (#7538,\u00a0@sunishsheth2009)\n[Recipes] Fix a bug in the logic used to create a Spark session during data ingestion (#7307,\u00a0@WeichenXu123)\n[Tracking] Make the metric names produced by\u00a0mlflow.autolog()\u00a0consistent with\u00a0mlflow.evaluate()\u00a0(#7418,\u00a0@wenfeiy-db)\n[Tracking] Fix an autologging bug that caused nested, redundant information to be logged for XGBoost and LightGBM models (#7404,\u00a0@WeichenXu123)\n[Tracking] Correctly classify SQLAlchemy OperationalErrors as retryable HTTP errors (#7240,\u00a0@barrywhart)\n[Artifacts] Correctly handle special characters in credentials when using FTP artifact storage (#7479,\u00a0@HCTsai)\n[Models] Address an issue that prevented MLeap models from being saved on Windows (#6966,\u00a0@dbczumar)\n[Scoring] Fix a permissions issue encountered when using NFS during model scoring with\u00a0mlflow.pyfunc.spark_udf()\u00a0(#7427,\u00a0@WeichenXu123)\n\nDocumentation updates:\n\n[Docs] Add more examples to the Runs search documentation page (#7487,\u00a0@apurva-koti)\n[Docs] Add documentation for Model flavors developed by the community (#7425,\u00a0@mmerce)\n[Docs] Add an example for logging and scoring ONNX Models (#7398,\u00a0@Rusteam)\n[Docs] Fix a typo in the model scoring REST API example for inputs with the\u00a0dataframe_split\u00a0format (#7540,\u00a0@zhouyangyu)\n[Docs] Fix a typo in the model scoring REST API example for inputs with the\u00a0dataframe_records\u00a0format (#7361,\u00a0@dbczumar)\n\nFor a comprehensive list of changes, see the\u00a0release\u00a0change log, and check out the latest documentation on\u00a0mlflow.org."
    },
    {
        "Question_title":"MLflow 1.3 released!",
        "Question_created_time":"2019-10-01T13:01:46",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/GjvwSSCX_e4",
        "Question_comment_count":0,
        "Question_view_count":9,
        "Question_body":"Hi all, MLflow 1.3 has been released! In addition to bug and documentation fixes, MLflow 1.3.0 includes several major features and improvements - to mention a few:\n\n* The Python client now supports logging & loading models using TensorFlow 2.0\n* Significant performance improvements when fetching runs and experiments in MLflow servers that use SQL database-backed storage\n* New `GetExperimentByName` REST API endpoint, used in the Python client to speed up `set_experiment` and `get_experiment_by_name`\n* New `mlflow.delete_run`, `mlflow.delete_experiment` fluent APIs in the Python client\n* New CLI command (`mlflow experiments csv`) to export runs of an experiment into a CSV\n\nSee the CHANGELOG for details about the new features:\nhttps:\/\/github.com\/mlflow\/mlflow\/releases\/tag\/v1.3.0\n\n\n\nThanks,\nSid"
    },
    {
        "Question_title":"MLflow 2.0.1 release",
        "Question_created_time":"2022-11-15T10:49:11",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/nuyoOoG5-WE",
        "Question_comment_count":0,
        "Question_view_count":24,
        "Question_body":"We are happy to announce the availability of MLflow 2.0.1!\n\nThe 2.0.1 version of MLflow is a major milestone release that focuses on simplifying the management of end-to-end MLOps workflows, providing new feature-rich functionality, and expanding upon the production-ready MLOps capabilities offered by MLflow.\n\nThis release contains several important breaking changes from the 1.x API, additional major features and improvements.\n\nFeatures:\n\n[Recipes] MLflow Pipelines is now MLflow Recipes - a framework that enables data scientists to quickly develop high-quality models and deploy them to production\n[Recipes] Add support for classification models to MLflow Recipes (#7082, @bbarnes52)\n[UI] Introduce support for pinning runs within the experiments UI (#7177, @harupy)\n[UI] Simplify the layout and provide customized displays of metrics, parameters, and tags within the experiments UI (#7177, @harupy)\n[UI] Simplify run filtering and ordering of runs within the experiments UI (#7177, @harupy)\n[Tracking] Update mlflow.pyfunc.get_model_dependencies() to download all referenced requirements files for specified models (#6733, @harupy)\n[Tracking] Add support for selecting the Keras model save_format used by mlflow.tensorflow.autolog() (#7123, @balvisio)\n[Models] Set mlflow.evaluate() status to stable as it is now a production-ready API\n[Models] Simplify APIs for specifying custom metrics and custom artifacts during model evaluation with mlflow.evaluate() (#7142, @harupy)\n[Models] Correctly infer the positive label for binary classification within mlflow.evaluate() (#7149, @dbczumar)\n[Models] Enable automated signature logging for tensorflow and keras models when mlflow.tensorflow.autolog() is enabled (#6678, @BenWilson2)\n[Models] Add support for native Keras and Tensorflow Core models within mlflow.tensorflow (#6530, @WeichenXu123)\n[Models] Add support for defining the model_format used by mlflow.xgboost.save\/log_model() (#7068, @AvikantSrivastava)\n[Scoring] Overhaul the model scoring REST API to introduce format indicators for inputs and support multiple output fields (#6575, @tomasatdatabricks; #7254, @adriangonz)\n[Scoring] Add support for ragged arrays in model signatures (#7135, @trangevi)\n[Java] Add getModelVersion API to the java client (#6955, @wgottschalk)\n\nBreaking Changes:\n\nThe following list of breaking changes are arranged by their order of significance within each category.\n\n[Core] Support for Python 3.7 has been dropped. MLflow now requires Python >=3.8\n[Recipes] mlflow.pipelines APIs have been replaced with mlflow.recipes\n[Tracking \/ Registry] Remove \/preview routes for Tracking and Model Registry REST APIs (#6667, @harupy)\n[Tracking] Remove deprecated list APIs for experiments, models, and runs from Python, Java, R, and REST APIs (#6785, #6786, #6787, #6788, #6800, #6868, @dbczumar)\n[Tracking] Remove deprecated runs response field from Get Experiment REST API response (#6541, #6524 @dbczumar)\n[Tracking] Remove deprecated MlflowClient.download_artifacts API (#6537, @WeichenXu123)\n[Tracking] Change the behavior of environment variable handling for MLFLOW_EXPERIMENT_NAME such that the value is always used when creating an experiment (#6674, @BenWilson2)\n[Tracking] Update mlflow server to run in --serve-artifacts mode by default (#6502, @harupy)\n[Tracking] Update Experiment ID generation for the Filestore backend to enable threadsafe concurrency (#7070, @BenWilson2)\n[Tracking] Remove dataset_name and on_data_{name | hash} suffixes from mlflow.evaluate() metric keys (#7042, @harupy)\n[Models \/ Scoring \/ Projects] Change default environment manager to virtualenv instead of conda for model inference and project execution (#6459, #6489 @harupy)\n[Models] Move Keras model logging APIs to the mlflow.tensorflow flavor and drop support for TensorFlow Estimators (#6530, @WeichenXu123)\n[Models] Remove deprecated mlflow.sklearn.eval_and_log_metrics() API in favor of mlflow.evaluate() API (#6520, @dbczumar)\n[Models] Require mlflow.evaluate() model inputs to be specified as URIs (#6670, @harupy)\n[Models] Drop support for returning custom metrics and artifacts from the same function when using mlflow.evaluate(), in favor of custom_artifacts (#7142, @harupy)\n[Models] Extend PyFuncModel spec to support conda and virtualenv subfields (#6684, @harupy)\n[Scoring] Remove support for defining input formats using the Content-Type header (#6575, @tomasatdatabricks; #7254, @adriangonz)\n[Scoring] Replace the --no-conda CLI option argument for native serving with --env-manager='local' (#6501, @harupy)\n[Scoring] Remove public APIs for mlflow.sagemaker.deploy() and mlflow.sagemaker.delete() in favor of MLflow deployments APIs, such as mlflow deployments -t sagemaker (#6650, @dbczumar)\n[Scoring] Rename input argument df to inputs in mlflow.deployments.predict() method (#6681, @BenWilson2)\n[Projects] Replace the use_conda argument with the env_manager argument within the run CLI command for MLflow Projects (#6654, @harupy)\n[Projects] Modify the MLflow Projects docker image build options by renaming --skip-image-build to --build-image with a default of False (#7011, @harupy)\n[Integrations\/Azure] Remove deprecated mlflow.azureml modules from MLflow in favor of the azure-mlflow deployment plugin (#6691, @BenWilson2)\n[R] Remove conda integration with the R client (#6638, @harupy)\n\nBug fixes:\n\n[Recipes] Fix rendering issue with profile cards polyfill (#7154, @hubertzub-db)\n[Tracking] Set the MLflow Run name correctly when specified as part of the tags argument to mlflow.start_run() (#7228, @Cokral)\n[Tracking] Fix an issue with conflicting MLflow Run name assignment if the mlflow.runName tag is set (#7138, @harupy)\n[Scoring] Fix incorrect payload constructor error in SageMaker deployment client predict() API (#7193, @dbczumar)\n[Scoring] Fix an issue where DataCaptureConfig information was not preserved when updating a Sagemaker deployment (#7281, @harupy)\n\n\nFor a comprehensive list of changes, see the release change log and checkout out the latest documentation on mlflow.org."
    },
    {
        "Question_title":"MLflow Serving",
        "Question_created_time":"2020-10-19T04:43:51",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/5QBHlQ90OuY",
        "Question_comment_count":0,
        "Question_view_count":32,
        "Question_body":"Hi all, I'm wondering if there is a limit for the curl json requests sent to the served model or not when using Sklearn's Linear Regression within mlflow's pyfunc. I receive an output for messages of about 75 records of input. However, for larger messages, I receive error 52, empty reply from server and I wonder why is that. For other served models I deployed, everything works normally such as custom pyfunc, and randomforests on R.\u00a0\n\n\nThanks a lot for any hints,\nCheers\u00a0\nKarim"
    },
    {
        "Question_title":"MLflow 1.23.0 released!",
        "Question_created_time":"2022-01-17T06:22:32",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/9TJ6bvUlQ9s",
        "Question_comment_count":0,
        "Question_view_count":12,
        "Question_body":"We are happy to announce the availability of\u00a0MLflow 1.23.0!\n\n\nMLflow 1.23.0 includes several major features and improvements:\n\n\nFeatures:\n\n[Models] Introduce an\u00a0mlflow.evaluate()\u00a0API for evaluating MLflow Models, providing performance and explainability insights. For an overview, see\u00a0https:\/\/mlflow.org\/docs\/latest\/models.html#model-evaluation\u00a0(#5069,\u00a0#5092,\u00a0#5256,\u00a0@WeichenXu123)\n[Models]\u00a0log_model()\u00a0APIs now return information about the logged MLflow Model, including artifact location, flavors, and schema (#5230,\u00a0@liangz1)\n[Models] Introduce an\u00a0mlflow.models.Model.load_input_example()\u00a0Python API for loading MLflow Model input examples (#5212,\u00a0@maitre-matt)\n[Models] Add a UUID field to the MLflow Model specification. MLflow Models now have a unique identifier (#5149,\u00a0#5167,\u00a0@WeichenXu123)\n[Models] Support passing SciPy CSC and CSR matrices as MLflow Model input examples (#5016,\u00a0@WeichenXu123)\n[Model Registry] Support specifying\u00a0latest\u00a0in model URI to get the latest version of a model regardless of the stage (#5027,\u00a0@lichenran1234)\n[Tracking] Add support for LightGBM scikit-learn models to\u00a0mlflow.lightgbm.autolog()\u00a0(#5130,\u00a0#5200,\u00a0#5271\u00a0@jwyyy)\n[Tracking] Improve S3 artifact download speed by caching boto clients (#4695,\u00a0@Samreay)\n[UI] Automatically update metric plots for in-progress runs (#5017,\u00a0@cedkoffeto,\u00a0@harupy)\n\n\nBug fixes and documentation updates:\n\n[Models] Fix a bug in MLflow Model schema enforcement where strings were incorrectly cast to Pandas objects (#5134,\u00a0@stevenchen-db)\n[Models] Fix a bug where keyword arguments passed to\u00a0mlflow.pytorch.load_model()\u00a0were not applied for scripted models (#5163,\u00a0@schmidt-jake)\n[Model Registry][r] Fix bug in R client\u00a0mlflow_create_model_version()\u00a0API that caused model\u00a0source\u00a0to be set incorrectly (#5185,\u00a0@bramrodenburg)\n[Projects] Fix parsing behavior for Project URIs containing quotes (#5117,\u00a0@dinaldoap)\n[Scoring] Use the correct 400-level error code for malformed MLflow Model Server requests (#5003,\u00a0@abatomunkuev)\n[Tracking] Fix a bug where\u00a0mlflow.start_run()\u00a0modified user-supplied tags dictionary (#5191,\u00a0@matheusMoreno)\n[UI] Fix a bug causing redundant scroll bars to be displayed on the Experiment Page (#5159,\u00a0@sunishsheth2009)\nFor a comprehensive list of changes, see the\u00a0release change log, and check out the latest documentation on\u00a0mlflow.org.\n\n\nNote: Version 1.23.0 of the MLflow R package has not yet been released. It will be available on CRAN within the next week."
    },
    {
        "Question_title":"Website section \"organizations using MLflow\" - we are using MLflow in our AI training courses",
        "Question_created_time":"2020-03-23T10:27:23",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/owFO6D5kPZk",
        "Question_comment_count":1,
        "Question_view_count":31,
        "Question_body":"Hi all,\n\n\u00a0\n\njust wanted to let you know, that we are convinced of using MLflow in our AI \/ Deep Learning training courses. We originally started with TensorBoard in our courses, but realized MLflow is the tool to go for the course particpants using Keras \/ Tensorflow. MLFlow is easier to use and has much more functionality compared to TensorBoard. Keep up your great work :)\n\n\u00a0\n\nFeel free to add us (https:\/\/enable-ai.de) to your \"Organizations using MLflow\" section on your website. We are a startup from Germany which enables people to use Artificial Intelligence by teaching how to code with Python & Keras-Tensorflow.\n\n\u00a0\n\nBest,\u00a0\n\nJan"
    },
    {
        "Question_title":"Could you add Criteo in the MLflow homepage list of contributors ?",
        "Question_created_time":"2019-10-11T10:11:31",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/ZZaVlGTlc_0",
        "Question_comment_count":2,
        "Question_view_count":18,
        "Question_body":"Hello\n\n\nHere in Criteo we like a lot MLflow and contribute to make it even better.\nWould you agree to add our logo to the list of contributors ?\n\n\nHere is the image and the link\u00a0https:\/\/www.criteo.com\/\n\n\nRegards"
    },
    {
        "Question_title":"mlflow hangs during training -- no error message",
        "Question_created_time":"2022-08-23T22:14:15",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/7-1JNBwU1aQ",
        "Question_comment_count":0,
        "Question_view_count":28,
        "Question_body":"Hi,\n\n\nI'm training a large model (a TCN -- Temporal Convolutional Network) in TensorFlow 2.8.1 with Keras 2.8.0 and mlflow 1.27.0 on Ubuntu 18.04.\n\n\n\nI have a loop to do multiple mlflow training runs... I'm getting a \"random\" hang in the middle of training my 150 epochs.\u00a0 Sometimes 1-3 runs (out of 13) will complete ok, but there's always (somewhere within the first 3 runs) a hang or \"total freeze\" of output in my terminal with no error message or anything else... no output at all.\u00a0 The terminal just freezes on some random epoch during 1-3 runs.\n\nI checked and the GPU memory upper limit has not been hit... also system RAM has not been hit.\u00a0 Neither is close.\n\nAny ideas?\u00a0 Does MLflow ever freeze like this?\n\nThanks for any ideas :)."
    },
    {
        "Question_title":"RFC: MLflow Gateway for LLMs",
        "Question_created_time":"2023-06-20T17:06:47",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/Ke6bqQiqJkQ",
        "Question_comment_count":0,
        "Question_view_count":11,
        "Question_body":"Hi MLflow users,\u00a0\n\n\nWe recently published an RFC proposing a new Model Gateway feature for LLMs in MLflow: https:\/\/github.com\/mlflow\/mlflow\/issues\/8769. We would really appreciate your feedback on the proposal via comments on the RFC GitHub Issue, as well as suggestions for improvements and extensions.\n\n\nThank you in advance for your input!\n\n\n\nCorey"
    },
    {
        "Question_title":"Unable to see my artifacts on minio",
        "Question_created_time":"2023-07-19T10:09:33",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/D_3vxqsJ7yw",
        "Question_comment_count":0,
        "Question_view_count":6,
        "Question_body":"Hi\u00a0 All,\n\nI have started using mlflow recently and I am having challenges get my models\/artifacts in the minio which I am using as my object store.(I also don't see these artifacts in the mlflow server UI)\n\n\nDetails are as follows,\nUsing mlflow 2.2.0\npython 3.11\nDocker compose 2.2\nSQLite as the backend metadata store\nminio as the object store\nwhen I run my pipeline I am able to see all the results in the mlflow server (running on 5000 port), including the logs and params, however they are not reflecting on the minio(both minio and mlflow are in the same network of a Dockercompose file).\n\n\nInstead the artifacts are being created in a folder structure under\nmlruns\/<experiment_id>\/<run_id>\/artifacts\/...\n\n\nI am using the following command to the mlflow server\u00a0 via my docker\n\nmlflow server --backend-store-uri sqlite:\/\/\/\/home\/docker\/data\/database_files\/mlops.db --default-artifact-root s3:\/\/tex-minio-bucket\/mlflow -h 0.0.0.0 -p 5000\n\n\n\n\n\nNote: I am using 9002 port on the laptop side and 9000 port on container side\n\n\n\nPlease suggest what should be the value of\u00a0MLFLOW_S3_ENDPOINT_URL, Is it with port 9000 or 9002 and is with localhost or with the ip-address that I have defined in my docker compose?\nWhat is correct command for the mlflow server when your bucket name is tex-minio-bucket and SQLite is the backend store\n\n\n\nAny help is much appreciated and Waiting for your reply.\n\n\n\n\nRegards,\nKarthik"
    },
    {
        "Question_title":"MLFlow Alerting Mechanisms for Tracked Metrics",
        "Question_created_time":"2023-06-06T18:55:02",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/Po87ie6gZ1U",
        "Question_comment_count":0,
        "Question_view_count":8,
        "Question_body":"Hello MLFlow Community,\n\nWe're using MLFlow to monitor metrics from our production training jobs and are looking for an efficient way to set up alerts for metrics that cross certain thresholds.\n\nCurrently, we've set up Grafana to tap into our database and trigger alerts. However, we're interested in exploring any alternate methods the community might suggest for this task.\n\nFurthermore, any information on whether direct alerting features are planned for inclusion in MLFlow's future development would be appreciated.\n\nLooking forward to your insights.\n\n\nNurcan"
    },
    {
        "Question_title":"MLFlow tutorials",
        "Question_created_time":"2022-12-20T11:23:10",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/3fIR6C7rJkw",
        "Question_comment_count":0,
        "Question_view_count":35,
        "Question_body":"Hello!\n\nWe would like to share with you our three tutorials:\n\nDeploying MLflow on the Google Cloud Platform using App Engine\u00a0\n\nIn the article we described how to:\n\n\ud83d\udd39Pre-configuring OAuth 2.0 Client\n\n\ud83d\udd39Build the docker image for MLflow on App Engine\n\n\ud83d\udd39Prepare the Terraform inputs\n\nLink: https:\/\/getindata.com\/blog\/deploying-mlflow-google-cloud-platform-using-app-engine\/?utm_source=mailing&utm_medium=mlflow&utm_campaign=grupy&utm_id=getindata\u00a0\n\nDeploying serverless MLFlow on Google Cloud Platform using Cloud Run\n\nIn this article you will find 7 steps to the successfully deployment:\n\n\u2733\ufe0f Step 1: Setting appropriate permissions\n\n\u2733\ufe0f Step 2: Pre-configuring #oauth 2.0 Client\n\n\u2733\ufe0f Step 3: Configuring Cloud SQL \/ Cloud Storage\n\n\u2733\ufe0f Step 4: Storing configuration in Secret Manager\n\n\u2733\ufe0f Step 5: Preparing MLFlow #Docker image\n\n\u2733\ufe0f Step 6: Deploying MLFlow with OAuth2-Proxy on Cloud Run\n\n\u2733\ufe0f Step 7: Finishing OAuth2.0 configuration\n\nLink: https:\/\/getindata.com\/blog\/deploying-serverless-mlflow-google-cloud-platform-using-cloud-run\/?utm_source=mailing&utm_medium=mlflow3&utm_campaign=grupy&utm_id=getindata\u00a0\n\nDeploying secure MLflow on AWS\n\nAfter reading our blog post about deploying serverless #MLflow on GCP read how we covered deployments on #AWS.\u00a0\n\nWhat are the main MLFlow infrastructure components? \ud83e\udd14\n\nThe architecture contains:\n\n\ud83d\udd39MLFlow Tracking Server, which exposes API for logging parameters, metrics, experiments, metadata and UI for visualizing the results.\n\n\ud83d\udd39Amazon Aurora Serverless used as the backend store\n\n\ud83d\udd39AWS S3 used as the artefact store\n\n\ud83d\udd39Oauth2-proxy protects MLFlow endpoints using OAuth2 compatible providers, e.g. Google.\n\nLink: https:\/\/getindata.com\/blog\/deploying-secure-mlfow-aws\/?utm_source=mailing&utm_medium=mlflow2&utm_campaign=grupy&utm_id=getindata\u00a0\n\n\nEnjoy and let us know what do you think!"
    },
    {
        "Question_title":"tfhub.dev & remote embedded ML",
        "Question_created_time":"2021-06-25T11:18:07",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/NBwpdeLzi1I",
        "Question_comment_count":0,
        "Question_view_count":9,
        "Question_body":"Hello guys,\n\n\nsince there is a TensorFlow Hub space to pre-trained models in one place, I wonder if there is some mlflow conenction into tfhub.dev ?\n\u00a0\nIs there any means to further optimize them (e.g. quantized, pruned) for emebdded remote targets (RPi-cass device) and evaluated for accuracy, latency (with different execution backend CPU, GPU, NPU) and maintanied within mlflow enviroment?\n\n\nIs there any simple example how to deal with such a problems?\n\n\nThank you for your insights."
    },
    {
        "Question_title":"Take our MLflow User Survey for a chance to win a T-Shirt :)",
        "Question_created_time":"2019-12-16T20:28:14",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/nhL8gpIlQb4",
        "Question_comment_count":0,
        "Question_view_count":12,
        "Question_body":"Hi everyone,\n\n2019 has been a year of fast growth for MLflow, with 160 contributors to the project, the release of MLflow 1.0 & the Model Registry, and multiple library integrations. To kick off 2020, we\u2019re running an MLflow user survey (https:\/\/forms.gle\/eybQPUdVGS7V4GDL8) to get your feedback on MLflow so far, and help us prioritize several new components we are thinking of building in 2020.\n\nPlease take a few minutes to fill in the survey if you have feedback. All entrants will have a chance to win an MLflow T-shirt.\n\nHappy new year, and we look forward to hearing from you!\n\nThe MLflow Team"
    },
    {
        "Question_title":"Integrate and Monitor LLM using vertexAI Endpoint and MLFlow",
        "Question_created_time":"2023-07-17T23:32:56",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/4cG_JV058dE",
        "Question_comment_count":0,
        "Question_view_count":7,
        "Question_body":"Hi all, I am using vertex.ai text-bison model for a problem and do direct inference using prompt,\u00a0\nCan I use MLFlow to monitor the prompts passed and response obtained, to calculate the time latency and other metrics too?\n\n\nthank you in Advance"
    },
    {
        "Question_title":"using scikit-learn in mlflow pyfunc",
        "Question_created_time":"2020-10-02T08:35:09",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/cnoGg6blwow",
        "Question_comment_count":1,
        "Question_view_count":68,
        "Question_body":"Hi All, Is it possible to use scikit-learn inside pyfunc? I have tried it myself in a project i am working on, however, I received ModuleNotFoundError: No module named 'sklearn'. Many thanks, Cheers!"
    },
    {
        "Question_title":"[RFC][Breaking] Runs URI for specifying artifact locations",
        "Question_created_time":"2019-04-17T01:52:58",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/59srnQ6Cjsk",
        "Question_comment_count":0,
        "Question_view_count":11,
        "Question_body":"The proposal is described in more detail in this Google Document. Please use comments in the google doc to give feedback. Thank you!\n\n\n\n\n\nTL;DR \u00a0We propose a new runs:\/ URI scheme to represent artifact locations associated with a Run. This allows us to:\n\nClean up artifact APIs where the Run ID is optional by replacing the run_id and artifact_path arguments with a single artifact_uri argument, unifying the representation of the artifact location in such APIs. \n\nRefer to artifacts by Run in places where currently only URIs are allowed; for example, for specifying artifact dependencies in Projects or pyfunc models.\n\n\n\n\nProposed Changes\n\n\n\n\nThe representation and support for artifact locations in MLflow is varied:\n\nIn most MLflow APIs, namely those in Tracking, the artifact location is represented as a tuple of (run_id,\n artifact_path = relative path with respect to the Run\u2019s base artifact URI).\n\nIn a few places the location is an absolute URI such as s3:\/\/<bucket>\/path\/to\/file.\n\nSome APIs take both representations, where artifact_path is relative if run_id is specified, and absolute otherwise. For absolute URIs, some such APIs support remote URIs (e.g. S3), and some only support local paths.\n\n\n\n\nTo unify the representation of artifact locations, we propose that for user-facing APIs in components outside of MLflow Tracking, such as MLflow Models, the artifact location be specified as a single URI argument:\n\n\n\n\nIn the scope of MLflow Tracking, there is always a contextual Run ID whenever we work with an artifact, and in the fluent APIs the user need not know the Run ID. The current API is convenient as the user doesn\u2019t need to think about the Run ID in most places.\n\n\n\n\nOutside of Tracking, artifacts and models may or may not be associated with an MLflow Tracking Run. It is in the philosophy of MLflow for the different components to be stand-alone, allowing the user to only use the components they want.\n\n\n\n\nThis means in the changed APIs,\n\n\n\n\nIf an artifact has no Run association, the user can give the absolute URI of the artifact location.\n\nIf the artifact has a Run associated, it is convenient to be able to specify the (Run ID, relative path) tuple (assuming there is a tracking server available in the context) instead of the underlying absolute path that has to be carefully constructed from the Run\u2019s RunInfo and the relative path. To support this Run ID short-cut while keeping the APIs succinct, we propose an absolute URI format:\n\n\t\n\nruns:\/<run_id>\/<relative_path>\n\n\n\n\nNote that affected APIs are all reading artifacts as they are in the Models component. To make the implementation simple, we can expand the scope of data.download_uri to support all URI types including runs:\/; then data.download_uri also becomes a full-functional utility method to download files from any artifact store backed by an Artifact Repository.\n\n\n\n\nBreaking Changes\n\n\n\n\nMany of the APIs proposed to be changed will lose the run_id argument and have the artifact_path argument renamed to artifact_uri. This means any usage of the said APIs specifying the run_id argument (which defaults to None) or using the artifact_path argument by name will break.\n\n\n\n\nThe most notable APIs to be affected are:\n\n<model-type>.load_model\n\npyfunc.load_pyfunc\n\npyfunc.spark_udf\n\nas they may already be used in deployments in production.\n\n\n\n\nFor the list of all APIs that would be affected, please see the google doc.\n\n\n\n\nRequest for Comment\n\n\nAgain, the full RFC is available in this Google Document. Please use comments in the Google Doc to give feedback. Thank you!\n\n\n\n\n\n\n--\n\n\n\n\nSue Ann Hong\n\n\nSoftware Engineer - Machine Learning\n\nDatabricks, Inc."
    },
    {
        "Question_title":"MLflow 2.4.1 released!",
        "Question_created_time":"2023-06-09T22:02:02",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/Qz2BUTNg-BI",
        "Question_comment_count":0,
        "Question_view_count":15,
        "Question_body":"We are happy to announce the availability of\u00a0MLflow\u00a02.4.1!\n\n\n\n\nMLflow 2.4.1 is a patch release containing the following features, bug fixes and changes:\n\nFeatures:\n\n[Tracking] Extend SearchRuns to support datasets (#8622,\u00a0@prithvikannan)\n[Models] Add an\u00a0mlflow.johnsnowlabs\u00a0flavor for the\u00a0johnsnowlabs\u00a0package (#8556,\u00a0@C-K-Loan)\n[Models] Add a warning for duplicate pip requirements specified in\u00a0save_model\u00a0and\u00a0log_model\u00a0for the\u00a0transformers\u00a0flavor (#8678,\u00a0@BenWilson2)\n\nBug fixes:\n\n[Security] Improve robustness to LFI attacks (#8648,\u00a0@serena-ruan)\nIf you are using\u00a0mlflow server\u00a0or\u00a0mlflow ui, we recommend upgrading to MLflow 2.4.1 as soon as possible.\n[Models] Fix an issue with\u00a0transformers\u00a0serialization for ModelCards that contain invalid characters (#8652,\u00a0@BenWilson2)\n[Models] Fix connection pooling deadlocks that occurred during large file downloads (#8682,\u00a0@dbczumar;\u00a0#8660,\u00a0@harupy)\nFor a comprehensive list of changes, see the\u00a0release change log, and check out the latest documentation on\u00a0mlflow.org."
    },
    {
        "Question_title":"Using MLflow and Sagemaker with preprocessing steps",
        "Question_created_time":"2022-07-20T08:12:24",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/I7LdK_7KCIw",
        "Question_comment_count":1,
        "Question_view_count":20,
        "Question_body":"I'm deploying my models to Sagemaker using MLflow integration. However, my ML pipeline includes some basic preprocessing steps, such as scalers, and I need it to be part of my inference endpoint. Is there a way to do that with MLflow? I looked in the\u00a0mlflow_pyfunc\u00a0is closer to what I want, but I'm not sure if it is compatible with Sagemaker."
    },
    {
        "Question_title":"How to load a model",
        "Question_created_time":"2023-06-08T12:54:15",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/nyvePG9UY8g",
        "Question_comment_count":1,
        "Question_view_count":5,
        "Question_body":"I am trying to load the model and run it but getting error. I can't find a relevant documentation.\n\n\nllm = HuggingFaceHub(repo_id=repo_id, model_kwargs={\"temperature\":0.1, \"max_length\":64}, callbacks=[mlflow_callback])\n#llm = OpenAI(model_name=\"gpt-3.5-turbo\", temperature=0, callbacks=[mlflow_callback], verbose=True)\n\n# SCENARIO 1 - LLM\nprint(2)\ntemplate = \"\"\"Question: {question}\n\nAnswer: Let's think step by step.\"\"\"\nprompt = PromptTemplate(template=template, input_variables=[\"question\"])\nllm_chain = LLMChain(prompt=prompt, llm=llm)\n\nquestion = \"Who won the FIFA World Cup in the year 1994? \"\n\nprint(llm_chain.run(question))\n\nmodel_info=mlflow.langchain.log_model(\n\u00a0 \u00a0 lc_model=llm_chain,\n\u00a0 \u00a0 artifact_path=\"model\",\n\u00a0 \u00a0 registered_model_name=\"QA-Flan\"\n)\n\nqa=mlflow.pyfunc.load_model(model_info.model_uri)\nprint(qa.run(question))"
    },
    {
        "Question_title":"Build docker image to deploy from databricks",
        "Question_created_time":"2019-08-30T15:32:07",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/bHaU6sQ17O0",
        "Question_comment_count":3,
        "Question_view_count":481,
        "Question_body":"Hi guys!\n\n\nI'm a new MLFlow user and I would like to deploy models on Kubernets. Is there any tutorial for that?\n\n\nI'm using Databricks to run my experiments and train my models but I don't know how to deploy from that.\n\n\nHow the community deals with that?\n\n\nThanks a lot!\nRegards!"
    },
    {
        "Question_title":"Take our MLflow user survey for a chance to win a T-shirt or Spark+AI Summit ticket",
        "Question_created_time":"2019-01-04T18:25:47",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/GTW1P-ibhqo",
        "Question_comment_count":0,
        "Question_view_count":21,
        "Question_body":"Hi everyone,\n\n2018 has been a great year for MLflow, with 66 contributors to the project and many new features including R and Java APIs, UI improvements and multiple library integrations. To kick off 2019, we're running an MLflow user survey (https:\/\/goo.gl\/forms\/bFbIiCSIoLir44rD2) to get your feedback on MLflow so far, and help us prioritize several new components we are thinking of building in 2019.\n\nPlease take a few minutes to fill in the survey at https:\/\/goo.gl\/forms\/bFbIiCSIoLir44rD2 if you have feedback. All respondents will have a chance to win an MLflow T-shirt or a ticket to Spark + AI Summit 2019 (https:\/\/databricks.com\/sparkaisummit).\n\nHappy new year, and we look forward to hearing from you,\n\nThe MLflow Team"
    },
    {
        "Question_title":"mflow model register icon missing",
        "Question_created_time":"2020-06-28T18:58:19",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/zrqbH9zWo_8",
        "Question_comment_count":1,
        "Question_view_count":17,
        "Question_body":"I'm using azure databricks where i couldn't find the model registry icon as shown below in the databricks page.\n\n\n\nAppreciate\u00a0your help."
    },
    {
        "Question_title":"MLflow 1.17.0 Released!",
        "Question_created_time":"2021-05-09T11:23:12",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/q8uG2Q3exFA",
        "Question_comment_count":0,
        "Question_view_count":16,
        "Question_body":"We are happy to announce the availability of MLflow 1.17.0!\n\n\n\nMLflow 1.17.0 includes the following features and improvements:\nAdd support for hyperparameter-tuning models to\u00a0mlflow.pyspark.ml.autolog()\u00a0(#4270,\u00a0@WeichenXu123)\n\nFix PyTorch Lightning callback definition for autologging compatibility with PyTorch Lightning 1.3.0 (#4333,\u00a0@dbczumar)\n\nFix a bug in scikit-learn autologging that omitted artifacts for unsupervised models (#4325, @dbczumar)\u00a0\n\nSupport logging datetime.date objects as part of model input examples (#4313, @vperiyasamy)\n\nImplement HTTP request retries in the MLflow Java client for 500-level responses (#4311, @dbczumar)\n\nFor a comprehensive list of changes, see the\u00a0release change log, and check out the latest documentation on\u00a0mlflow.org."
    },
    {
        "Question_title":"MLflow model deployment as spark transform in a spark java job",
        "Question_created_time":"2021-09-16T02:11:42",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/zTot8BDmGOA",
        "Question_comment_count":0,
        "Question_view_count":15,
        "Question_body":"Hi everyone,\nIs there a method which i can use to convert the mlflow model as spark UDF which i can use in spark java job? if Yes please help me with the approach to achieve it. If No is there any Workaround using which I can achieve it.\n\n\n\n\nThanks & Regards,\nSujay"
    },
    {
        "Question_title":"MLFlow usage and contribution",
        "Question_created_time":"2021-10-03T10:45:51",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/pSnbo3Mvd0w",
        "Question_comment_count":0,
        "Question_view_count":40,
        "Question_body":"Hi all,\n\n\nIntertec is considering using MLFlow as the primary MLOps tool. Please let me know what are the criteria to get our logo on your site. We can also try to contribute to the product.\n\n\nKind regards\n\n\n\u00a0 \u00a0 \u00a0\nVelimir Graorkoski\nSoftware engineer\n\n\n\n\nslack\u00a0| velimir.graorkoski\n\nmail\u00a0|\u00a0velimir.g...@intertec.io\n\n\nweb\u00a0|\u00a0\u00a0https:\/\/www.intertec.io"
    },
    {
        "Question_title":"MLflow 1.16.0 Released!",
        "Question_created_time":"2021-04-26T22:35:12",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/iCtI31h79PI",
        "Question_comment_count":0,
        "Question_view_count":18,
        "Question_body":"We are happy to announce the availability of\u00a0MLflow 1.16.0!\n\n\nIn addition to bug and documentation fixes, MLflow 1.16.0 includes the following features and improvements:\nAdd\u00a0mlflow.pyspark.ml.autolog()\u00a0API for autologging of\u00a0pyspark.ml\u00a0estimators (#4228,\u00a0@WeichenXu123)\nAdd\u00a0mlflow.catboost.log_model,\u00a0mlflow.catboost.save_model,\u00a0mlflow.catboost.load_model\u00a0APIs for CatBoost model persistence (#2417,\u00a0@harupy)\nEnable\u00a0mlflow.pyfunc.spark_udf\u00a0to use column names from model signature by default (#4236,\u00a0@Loquats)\nAdd\u00a0datetime\u00a0data type for model signatures (#4241,\u00a0@vperiyasamy)\nAdd\u00a0mlflow.sklearn.eval_and_log_metrics\u00a0API that computes and logs metrics for the given scikit-learn model and labeled dataset. (#4218,\u00a0@alkispoly-db)\nFor a comprehensive list of changes, see the\u00a0release change log, and check out the latest documentation on\u00a0mlflow.org.\n\n\nThanks,\nHaru"
    },
    {
        "Question_title":"Microtargetting Model Deployment Using ML Flow and AML",
        "Question_created_time":"2019-12-18T06:00:18",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/u8irjnEImeI",
        "Question_comment_count":2,
        "Question_view_count":18,
        "Question_body":"Team,\n\n\nIn one of the scenarios we have to run Random Forest regressor for predicting scenario but the issue is we want to do prediction at the most granular level. Example scenario:\n\n\nProduct\tVolume\nA\t100ml\nA\t150 ml\nA\t200 ml\nA\t250 ml\nB\t100ml\nB\t150 ml\nB\t200 ml\nB\t250 ml\nC\t100ml\nC\t150 ml\nC\t200 ml\nC\t250 ml\nD\t100ml\nD\t150 ml\nD\t200 ml\nD\t250 ml\n\n\nHere in the above case we could either run a random forest regressor on products A,B,C,D a generic one. But in our case Product and Volume forms a key to be predicted so that we go to a granular level.\n\n\nIn our case Product A\/100ml is different from Product A\/150ml is different from Product A\/200ml is different from Product A\/250ml.\n\n\nSo thats the reason we need to run our model in loop which keeps on growing and we are generating multiple models inside loop. How is it possible to deploy such kind of models using MLFLOW and Azure Mahine Learning.or is there a better way to achieve such granularity."
    },
    {
        "Question_title":"store data preprocessing information",
        "Question_created_time":"2020-09-22T10:21:38",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/gZC21Br284g",
        "Question_comment_count":2,
        "Question_view_count":36,
        "Question_body":"Hi,\nI've tried mlflow to store metrics, params, artifacts and models.\nI'd like to know if it can store also data-preprocessing information (feature extraction, selection, transformation, data cleansing, etc.).\nThanks\n--giacomo"
    },
    {
        "Question_title":"RFC: Add a \"step\" axis for logging metrics in MLflow",
        "Question_created_time":"2019-04-15T19:59:06",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/8zlfjQHnhgk",
        "Question_comment_count":0,
        "Question_view_count":8,
        "Question_body":"Motivation \/ Overview\n\nTraining machine learning models is a process of iterative improvement. Models are successively exposed to sections of training data and adjusted based on their performance. Therefore, ML developers often need to observe how model performance changes throughout the training process. There are multiple ways to quantify the progress of the training process; here are several:\n\nThe amount of time, in seconds (wall clock time), that the training process has been running\nThe number of times that the model has been exposed to the entire training dataset. This is the number of training epochs.\nModels often make multiple passes through the training dataset.\nThe number of batches (fixed-size subsets of training data) to which the model has been exposed. This is the number of training iterations.\n\nMLflow currently provides an API for tracking model performance metrics; however, MLflow metrics can only be specified as a function of wall clock time. To paraphrase, wall clock time is the only supported x-axis on which metrics can recorded and visualized; wall clock time is the only supported x-coordinate for a metric entry.\n\nThe purpose of this RFC is to introduce support for recording and visualizing performance metrics against different types of axes, enabling ML developers to answer questions such as:\n\n\u201cWhat was the training accuracy of my model after the 50th training epoch?\u201d\n\u201cWhat was the precision of my model when evaluating the test data set after the 20th training iteration?\u201d\n\nSummary of Proposed Solution\nAt a high level, we propose to introduce a\u00a0step\u00a0attribute to MLflow metrics via the following high-level tasks:\n\nIntroduce a step attribute to MLflow\u2019s Metric entity definition\nUpdate backend store definitions to handle the new attribute\nUpdate the metric write path to create Metric entities that supply values for the step attribute\nThis includes client APIs, protos, the backend store write path, etc.\nExpand plotting capabilities of the MLflow UI to allow the user to toggle between the step axis and the \u201cwall clock time\u201d axis.\n\nFor more information, please see the full RFC below.\n\n\n\n\nRFC link\nThe full RFC is available as a Google Document at:\u00a0https:\/\/docs.google.com\/document\/d\/17yHR_xOvoEJQBT-D-y4QGfc3OvHqP-eGWwfMcGBIH2k\/edit?usp=sharing\n\nPlease leave comments and feedback within Google Docs!"
    },
    {
        "Question_title":"runtime timeout?",
        "Question_created_time":"2018-09-17T16:15:10",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/JN9X_yUJ1bY",
        "Question_comment_count":2,
        "Question_view_count":12,
        "Question_body":"Hi all,\nIs there a way to set timeout value when mlflow.project.run(...) is called?"
    },
    {
        "Question_title":"MLflow 1.21.0 released!",
        "Question_created_time":"2021-10-25T17:52:21",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/CSKBY9hL2bo",
        "Question_comment_count":1,
        "Question_view_count":24,
        "Question_body":"We are happy to announce the availability of\u00a0MLflow\u00a01.21.0!\n\n\n\nMLflow 1.21.0 includes several major features and improvements:\n\nFeatures:\n\n[UI] Add a diff-only toggle to the runs table for filtering out columns with constant values (#4862,\u00a0@marijncv)\n[UI] Add a duration column to the runs table (#4840,\u00a0@marijncv)\n[UI] Display the default column sorting order in the runs table (#4847,\u00a0@marijncv)\n[UI] Add\u00a0start_time\u00a0and\u00a0duration\u00a0information to exported runs CSV (#4851,\u00a0@marijncv)\n[UI] Add lifecycle stage information to the run page (#4848,\u00a0@marijncv)\n[UI] Collapse run page sections by default for space efficiency, limit artifact previews to 50MB (#4917,\u00a0@dbczumar)\n[Tracking] Introduce autologging capabilities for PaddlePaddle model training (#4751,\u00a0@jinminhao)\n[Tracking] Add an optional tags field to the CreateExperiment API (#4788,\u00a0@dbczumar;\u00a0#4795,\u00a0@apurva-koti)\n[Tracking] Add support for deleting artifacts from SFTP stores via the\u00a0mlflow gc\u00a0CLI (#4670,\u00a0@afaul)\n[Tracking] Support AzureDefaultCredential for authenticating with Azure artifact storage backends (#4002,\u00a0@marijncv)\n[Models] Upgrade the fastai model flavor to support fastai V2 (>=2.4.1) (#4715,\u00a0@jinzhang21)\n[Models] Introduce an\u00a0mlflow.prophet\u00a0model flavor for Prophet time series models (#4773,\u00a0@BenWilson2)\n[Models] Introduce a CLI for publishing MLflow Models to the SageMaker Model Registry (#4669,\u00a0@jinnig)\n[Models] Print a warning when inferred model dependencies are not available on PyPI (#4891,\u00a0@dbczumar)\n[Models, Projects] Add\u00a0MLFLOW_CONDA_CREATE_ENV_CMD\u00a0for customizing Conda environment creation (#4746,\u00a0@giacomov)\n\nBug fixes and documentation updates:\n\n[UI] Fix an issue where column selections made in the runs table were persisted across experiments (#4926,\u00a0@sunishsheth2009)\n[UI] Fix an issue where the text\u00a0null\u00a0was displayed in the runs table column ordering dropdown (#4924,\u00a0@harupy)\n[UI] Fix a bug causing the metric plot view to display NaN values upon click (#4858,\u00a0@arpitjasa-db)\n[Tracking] Fix a model load failure for paths containing spaces or special characters on UNIX systems (#4890,\u00a0@BenWilson2)\n[Tracking] Correct a migration issue that impacted usage of MLflow Tracking with SQL Server (#4880,\u00a0@marijncv)\n[Tracking] Spark datasource autologging tags now respect the maximum allowable size for MLflow Tracking (#4809,\u00a0@dbczumar)\n[Model Registry] Add previously-missing certificate sources for Model Registry REST API requests (#4731,\u00a0@ericgosno91)\n[Model Registry] Throw an exception when users supply invalid Model Registry URIs for Databricks (#4877,\u00a0@yunpark93)\n[Scoring] Fix a schema enforcement error that incorrectly cast date-like strings to datetime objects (#4902,\u00a0@wentinghu)\n[Docs] Expand the documentation for the MLflow Skinny Client (#4113,\u00a0@eedeleon)\nFor a comprehensive list of changes, see the\u00a0release change log, and check out the latest documentation on\u00a0mlflow.org."
    },
    {
        "Question_title":"ADFS Authentication to MLflow",
        "Question_created_time":"2020-10-19T15:44:06",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/l3udtZwwdbU",
        "Question_comment_count":1,
        "Question_view_count":104,
        "Question_body":"Hi all,\u00a0\n\n\nI was just wondering if there is any simpler way to apply Authentication to mlflow dashboards using active directory apart from nginx,\u00a0 or if any plugin is available to serve the purpose.\u00a0\n\n\nThanks\nIsha"
    },
    {
        "Question_title":"Model Monitoring and Automated Retraining",
        "Question_created_time":"2023-04-11T01:46:54",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/KX6PwiAfv80",
        "Question_comment_count":0,
        "Question_view_count":21,
        "Question_body":"Hello,\n\n\nI have been trying to find solutions for the below 2 use cases :\u00a0\n\n\n1. Automated retraining of a model, using some internal MLFlow scheduling. Currently, we are doing it using AirFlow but since that is an external system, we want to remove it. Want to know if there is functionality inside MLFlow to automate retraining of a model. Or any other plugins which are native to MlFlow??\n\n\n2. Model Monitoring, after a model has been deployed using MlFlow serve API. Need to see the health, accuracy metrics and overall performance of different models across the DS team. NOTE : I am not talking about individual model tracking (which can be done using MLFlow tracking, but rather an overall view of all the deployed models)\n\n\nAny leads on the above use cases will be appreciated.\n\n\nThanks"
    },
    {
        "Question_title":"MLModel",
        "Question_created_time":"2023-06-08T11:15:58",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/d9zY2fZtAxA",
        "Question_comment_count":0,
        "Question_view_count":4,
        "Question_body":"New to MLFlow. After a model is registered how can I see the complete structure of mlmodel deployable unit on disk? I am interested in seeing how mlmodel is represented on disk or in the package that gets deployed in the server like sagemaker. In traditional software world the deployment consist of either a dockerfile or image with code or code (jar files, script etc) that gets deployed in the web\/app server. I am assuming there is something similar behind the scenes. I tried to look for this in MLFlow UI -> Models\n\n\nThanks"
    },
    {
        "Question_title":"Atlas Integration",
        "Question_created_time":"2018-06-22T05:14:26",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/YRUxFOeiP4U",
        "Question_comment_count":1,
        "Question_view_count":39,
        "Question_body":"Hi guys, me again ;)\n\n\nAre you guys planning on integrating Atlas for keeping hold of which version of a model is deployed for which business case?\n\n\nCheers,\nD."
    },
    {
        "Question_title":"Webinar - MLflow integration with Sagemaker",
        "Question_created_time":"2022-02-07T15:14:49",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/l-_G3SZqyEM",
        "Question_comment_count":0,
        "Question_view_count":25,
        "Question_body":"Hello all,\n\n\nI'm presenting a webinar outlining the integration between MLflow and Amazon Sagemaker. As you folks probably well know, MLflow is an outstanding experiment tracking and model management system. Sagemaker, for its part, brings excellent deployment capabilities, etc. In this webinar, I will take a huggingface sentiment analysis model, register it with MLflow as a Registered Model, and then deploy it using sagemaker.\n\n\nhttps:\/\/us06web.zoom.us\/webinar\/register\/3816432282668\/WN_UqM1yeujRW-6qq6hxNIEFg\n\n\n\nFull Disclosure: We at InfinStor develop and market an Enterprise version of MLflow. However, the webinar content itself will work just fine on open source MLflow, Databricks MLflow, etc.\n\n\nBest\nJagane"
    },
    {
        "Question_title":"download dependencies from a specified conda repo server",
        "Question_created_time":"2018-10-14T14:50:59",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/S289Bx72GZY",
        "Question_comment_count":1,
        "Question_view_count":12,
        "Question_body":"I am learning MLFlow and wondering how to make MLFlow work in an environment that does not have internet access. For example, our production environment will not have internet access. For MLFlow to work, I need to make MLFlow download conda packages from a local conda repo server inside this environment. Is this doable? I did not find the answer in MLFlow doc. Thanks for any hints."
    },
    {
        "Question_title":"Organizaions using MLFlow",
        "Question_created_time":"2021-03-24T00:36:27",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/h4GyDKFUWcg",
        "Question_comment_count":1,
        "Question_view_count":31,
        "Question_body":"Hi\n\nWe at\u00a0 Directorate General of Customs and Excise (https:\/\/www.beacukai.go.id) are using MLFlow extensively in an in-house Machine Learning platform. Please add our organization to the list on your website.\n\nRegards"
    },
    {
        "Question_title":"Integration with KFServing",
        "Question_created_time":"2020-09-18T18:31:26",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/cDQWr6u_0P8",
        "Question_comment_count":0,
        "Question_view_count":23,
        "Question_body":"Hi\u00a0\n\n\nWe plan to use KFServing in Kubernetes to serve our models up - wondering if there is support for KFServing as a target from MLFlow - it will help us immensely.\n\n\n\nThanks,\nMahesh"
    },
    {
        "Question_title":"Model staging",
        "Question_created_time":"2021-05-27T07:48:58",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/OpF4sawraY0",
        "Question_comment_count":0,
        "Question_view_count":10,
        "Question_body":"Hello Community\n\n\n1.Is there a way to get all the versions of\u00a0 a particular stage of a registered model\nlatest_version_info = client.get_latest_versions(model_name, stages=[\"Archived\"]). This code fetches only the latest version not all the versions of the staged model\n\n\n2.Is there a way to delete all the versions of a staged version say I want to delete all the versions staged \"Archived\"\n\n\nRegards,\nAarthi"
    },
    {
        "Question_title":"Model Registry : Multitenancy",
        "Question_created_time":"2023-07-20T00:00:52",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/3JgLs_RYoqU",
        "Question_comment_count":0,
        "Question_view_count":5,
        "Question_body":"Hi Everyone,\n\n\nWe are working with MLFlow registry to log and register our ML models.\u00a0\n\nCurrently what we have is single tenant models being logged and registered, but we are looking for using the same model registry for a different tenant with models trained on different data. Is there a way to use the same model registry to register the models for the new tenant or do we need to create new MLFlow tracking server & Registry for every new tenant.\n\nPlease provide your inputs or point us to any useful material in this matter .\n\nThanks in Advance\n\nDeepak"
    },
    {
        "Question_title":"standard deviation",
        "Question_created_time":"2023-07-11T17:37:55",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/_6WgwYTPB-U",
        "Question_comment_count":0,
        "Question_view_count":1,
        "Question_body":"Is there a way to create standard deviation over logged metric?"
    },
    {
        "Question_title":"Deployed an mlflow sklearn model to Azure ACI using Databrics how to get the prediction probabilities",
        "Question_created_time":"2019-10-04T01:47:12",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/0yQ7tWc1Pgc",
        "Question_comment_count":2,
        "Question_view_count":14,
        "Question_body":"I have deployed the model to Azure Container Instance using model.pkl file along with conda.yaml and MLproject file created by mlflow. I can get the output class for input data by hitting the endpoint\u00a0http:\/\/1fa00837-1734-487c-998e-82b402c2451a.eastasia.azurecontainer.io\/score  \nhowever I am interested in getting the prediction probabilities that we get in scikit learn model.predict_proba(). Can anyone suggest how I can do that."
    },
    {
        "Question_title":"Spark UDF for Keras model - 'int' object is not iterable",
        "Question_created_time":"2018-11-15T00:33:14",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/-Ukvbx443hs",
        "Question_comment_count":1,
        "Question_view_count":29,
        "Question_body":"Hi mlflow team,\n\n\nI've been trying to export a Keras model as a Spark UDF, but met problem while trying to use it to predict on dataframe.\n\n\nI'm using example\/hyperparam to train the Keras model, using example dataset wine-quality.csv\n\n\nAnd here is what I use to export the mode as Spark UDF and then predict:\nmodel_path_local_keras = '~\/mlruns\/0\/625ddb14a0924a3bb2b12c201a775828\/artifacts\/model\/'\n\nwine_udf = mlflow.pyfunc.spark_udf(spark, keras_model_path)\n\n\ndf = spark.read.format(\"csv\").option(\"header\", \"true\").option('delimiter', ',').load('wine-quality.csv')\n\n\ncolumns = [ \"fixed acidity\", \"volatile acidity\", \"citric acid\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"residual sugar\", \"chlorides\", \"free sulfur dioxide\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"total sulfur dioxide\", \"density\", \"pH\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"sulphates\", \"alcohol\"\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ]\n\n\ndf.withColumn('prediction', wine_udf(*columns)).show(100, False)\n\nBut cannot get the expected result.\n\n\nCaused by: org.apache.spark.api.python.PythonException: Traceback (most recent call last):\n  File \"\/usr\/local\/Cellar\/apache-spark\/2.3.2\/libexec\/python\/lib\/pyspark.zip\/pyspark\/worker.py\", line 253, in main\n    process()\n  File \"\/usr\/local\/Cellar\/apache-spark\/2.3.2\/libexec\/python\/lib\/pyspark.zip\/pyspark\/worker.py\", line 248, in process\n    serializer.dump_stream(func(split_index, iterator), outfile)\n  File \"\/usr\/local\/Cellar\/apache-spark\/2.3.2\/libexec\/python\/lib\/pyspark.zip\/pyspark\/serializers.py\", line 267, in dump_stream\n    for series in iterator:\n  File \"<string>\", line 1, in <lambda>\n  File \"\/usr\/local\/Cellar\/apache-spark\/2.3.2\/libexec\/python\/lib\/pyspark.zip\/pyspark\/worker.py\", line 92, in <lambda>\n    return lambda *a: (verify_result_length(*a), arrow_return_type)\n  File \"\/usr\/local\/Cellar\/apache-spark\/2.3.2\/libexec\/python\/lib\/pyspark.zip\/pyspark\/worker.py\", line 83, in verify_result_length\n    result = f(*a)\n  File \"\/usr\/local\/Cellar\/apache-spark\/2.3.2\/libexec\/python\/lib\/pyspark.zip\/pyspark\/util.py\", line 55, in wrapper\n    return f(*args, **kwargs)\n  File \"\/Users\/RL250043\/anaconda3\/envs\/py36\/lib\/python3.6\/site-packages\/mlflow\/pyfunc\/__init__.py\", line 227, in predict\n    return pandas.Series(result)\n  File \"\/Users\/RL250043\/anaconda3\/envs\/py36\/lib\/python3.6\/site-packages\/pandas\/core\/series.py\", line 275, in __init__\n    raise_cast_failure=True)\n  File \"\/Users\/RL250043\/anaconda3\/envs\/py36\/lib\/python3.6\/site-packages\/pandas\/core\/series.py\", line 4167, in _sanitize_array\n    subarr = com._asarray_tuplesafe(data, dtype=dtype)\n  File \"\/Users\/RL250043\/anaconda3\/envs\/py36\/lib\/python3.6\/site-packages\/pandas\/core\/common.py\", line 320, in _asarray_tuplesafe\n    values = [tuple(x) for x in values]\n  File \"\/Users\/RL250043\/anaconda3\/envs\/py36\/lib\/python3.6\/site-packages\/pandas\/core\/common.py\", line 320, in <listcomp>\n    values = [tuple(x) for x in values]\nTypeError: 'int' object is not iterable\n\n\tat org.apache.spark.api.python.BasePythonRunner$ReaderIterator.handlePythonException(PythonRunner.scala:330)\n\tat org.apache.spark.sql.execution.python.ArrowPythonRunner$$anon$1.read(ArrowPythonRunner.scala:171)\n\tat org.apache.spark.sql.execution.python.ArrowPythonRunner$$anon$1.read(ArrowPythonRunner.scala:121)\n\tat org.apache.spark.api.python.BasePythonRunner$ReaderIterator.hasNext(PythonRunner.scala:284)\n\tat org.apache.spark.InterruptibleIterator.hasNext(InterruptibleIterator.scala:37)\n\tat org.apache.spark.sql.execution.python.ArrowEvalPythonExec$$anon$2.<init>(ArrowEvalPythonExec.scala:90)\n\tat org.apache.spark.sql.execution.python.ArrowEvalPythonExec.evaluate(ArrowEvalPythonExec.scala:88)\n\tat org.apache.spark.sql.execution.python.EvalPythonExec$$anonfun$doExecute$1.apply(EvalPythonExec.scala:131)\n\tat org.apache.spark.sql.execution.python.EvalPythonExec$$anonfun$doExecute$1.apply(EvalPythonExec.scala:93)\n\tat org.apache.spark.rdd.RDD$$anonfun$mapPartitions$1$$anonfun$apply$23.apply(RDD.scala:801)\n\tat org.apache.spark.rdd.RDD$$anonfun$mapPartitions$1$$anonfun$apply$23.apply(RDD.scala:801)\n\tat org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:49)\n\tat org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:324)\n\tat org.apache.spark.rdd.RDD.iterator(RDD.scala:288)\n\tat org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:49)\n\tat org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:324)\n\tat org.apache.spark.rdd.RDD.iterator(RDD.scala:288)\n\tat org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:49)\n\tat org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:324)\n\tat org.apache.spark.rdd.RDD.iterator(RDD.scala:288)\n\tat org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:49)\n\tat org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:324)\n\tat org.apache.spark.rdd.RDD.iterator(RDD.scala:288)\n\tat org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:87)\n\tat org.apache.spark.scheduler.Task.run(Task.scala:109)\n\tat org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:345)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\t... 1 more\n\n\nThe Spark UDF exported from a sklearn model works perfectly under same dataset.\n\n\nDoes current mlflow support exporting Keras\/Tensorflow model as a Spark UDF?\n\n\nThank you for you help.\n\n\nBest Regards,\nRising Liu"
    },
    {
        "Question_title":"MLflow 2.5.0 released!",
        "Question_created_time":"2023-07-17T05:15:24",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/UTi_XYfshPI",
        "Question_comment_count":0,
        "Question_view_count":4,
        "Question_body":"Hi all,\u00a0we're happy to announce the availability of MLflow 2.5.0!\n\nMLflow 2.5.0 includes several major features and improvements:\n\n[MLflow AI Gateway] We are excited to announce the release of MLflow AI Gateway, a powerful tool designed to streamline the usage and management of various large language model (LLM) providers, such as OpenAI and Anthropic, within an organization. It offers a standardized interface that simplifies the interaction with these services and delivers centralized, secure management of credentials. To get started with MLflow AI Gateway, check out the docs at\u00a0https:\/\/mlflow.org\/docs\/latest\/gateway\/index.html. (#8694,\u00a0@harupy,\u00a0@BenWilson2,\u00a0@dbczumar)\n[Auth] We are excited to announce the release of authentication and authorization support for MLflow Tracking and the MLflow Model Registry, providing integrated access control capabilities to both services. To get started, check out the docs at\u00a0https:\/\/mlflow.org\/docs\/latest\/auth\/index.html. (#9000,\u00a0#8975,\u00a0#8626,\u00a0#8837,\u00a0#8841,\u00a0@gabrielfu,\u00a0@harupy)\n\nFeatures:\n\n[Models] Add Support to the LangChain flavor for chains that contain unserializable components (#8736,\u00a0@liangz1)\n[Scoring] Infer spark udf return type from model output schema (#8934,\u00a0@WeichenXu123)\n[Models] Add support for automated signature inference (#8860,\u00a0#8782\u00a0#8795,\u00a0#8725,\u00a0@jerrylian-db)\n\nBug fixes:\n\n[Security] Improve robustness to LFI attacks on Windows by enhancing path validation (#8999,\u00a0@serena-ruan)\nIf you are using\u00a0mlflow server\u00a0or\u00a0mlflow ui\u00a0on Windows, we recommend upgrading to MLflow 2.5.0 as soon as possible.\n[Scoring] Support nullable array type values as spark_udf return values (#9014,\u00a0@WeichenXu123)\n[Models] Revert cache deletion of system modules when adding custom model code to the system path (#8722,\u00a0@trungn1)\n[Models] add micro version to mlflow version pinning (#8687,\u00a0@C-K-Loan)\n[Artifacts] Prevent manually deleted artifacts from causing artifact garbage collection to fail (#8498,\u00a0@PenHsuanWang)\n\nDocumentation updates:\n\n[Docs] Update .push_model_to_sagemaker docs (#8851,\u00a0@pdifranc)\n[Docs] Fix invalid link for Azure ML documentation (#8800,\u00a0@dunnkers)\n[Artifacts \/ Docs \/ Models \/ Projects] Adds information on the OCI MLflow plugins for seamless integration with Oralce Cloud Infrastructure services. (#8707,\u00a0@mrDzurb)\n\nDeprecation:\n\n[Models] Deprecate the\u00a0gluon\u00a0model flavor. The\u00a0mlflow.gluon\u00a0module will be removed in a future release. (#8968,\u00a0@harupy)\n\nFor a comprehensive list of changes, see the\u00a0release change log, and check out the latest documentation on\u00a0mlflow.org."
    },
    {
        "Question_title":"Green tick mark besides the run stat time in MLFlow Experiments",
        "Question_created_time":"2022-06-01T11:01:54",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/M5R4XEss_Mo",
        "Question_comment_count":0,
        "Question_view_count":10,
        "Question_body":"Hi everyone,\n\n\nI noticed some runs have a green tick mark besides the start time in the start time column of runs in MLFlow Experiments. See attachement.\n\n\nDoes anyone know what this implies as I noticed many other runs don't have it.\n\n\nI suppose when the mlflow client closes when the context manager exits (with mlflow.start_run() as run:) it sends a REST call to MLFlow experiments tracker to tell it it is done. Is this right?\n\n\nThanks in advance :)\nAnas"
    },
    {
        "Question_title":"mlflow.sagemaker.deploy",
        "Question_created_time":"2018-07-06T10:23:25",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/M51fi08Drk4",
        "Question_comment_count":1,
        "Question_view_count":45,
        "Question_body":"Hi Databricks,\n\n\nI was successfully able to push image to ecr -\n\n\n\u00a0mlflow.sagemaker.push_image_to_ecr(image='mlflow_sage')\n\n\nI was trying to deploy the model using -\n\n\nmlflow.sagemaker.deploy(app_name,\u00a0model_path,\u00a0execution_role_arn,\u00a0bucket,\u00a0run_id=None,\u00a0image='mlflow_sage',\u00a0region_name='us-west-2')\n\n\napp_name\u00a0\u2013 Name of the deployed app.\n\n\nI am not sure what is deployed app. Could help here.\n\n\nThanks,\nSunil"
    },
    {
        "Question_title":"MLflow 1.1 Release Candidate Process",
        "Question_created_time":"2019-07-16T21:12:44",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/VIc0iMz1sSM",
        "Question_comment_count":0,
        "Question_view_count":8,
        "Question_body":"Hi all,\n\nWe\u2019re excited to announce that we\u2019re moving towards MLflow 1.1, with a tentative release date of July 19. The release contains a number of major features, including a pandas-based runs search API, autologging from TensorFlow to MLflow, a high-level Java fluent API, support for running MLflow projects on Kubernetes, search pagination, and a parallel coordinates plot in the runs UI.\n\n\nWe\u2019ve published an RC of MLflow 1.1, which you can use to try out all the latest features. We\u2019d love to get your feedback and fix any issues that arise before the 1.1 release. Please report issues at\u00a0https:\/\/github.com\/mlflow\/mlflow\/issues\u00a0with [MLflow 1.1] in the issue title.\n\n\nPlease see this document for instructions on how to try out the latest RC:\nhttps:\/\/docs.google.com\/document\/d\/1n3rAQwf9ldkcnOY7WOLxNeyJafq3br0N_gLSPgxxjhQ\/edit\n\n\n\nThanks!\nSid"
    },
    {
        "Question_title":"Organization - NetObjex uses MLFlow",
        "Question_created_time":"2021-03-02T00:36:34",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/oqewetS7cuY",
        "Question_comment_count":0,
        "Question_view_count":19,
        "Question_body":"Attached is our logo\nhttp:\/\/www.netobjex.com"
    },
    {
        "Question_title":"GOCD Plugin for MLflow",
        "Question_created_time":"2018-11-12T01:01:33",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/CIihDdCS014",
        "Question_comment_count":2,
        "Question_view_count":22,
        "Question_body":"Hi All,\n\n\nWe have built a new GoCD plugin[1] which works with mlflow and helps us in continuous delivery of models.\n\nHope Y'all find this useful.\u00a0\n\n\n[1] https:\/\/github.com\/indix\/mlflow-gocd\/\n\n\nBest,\nKrishna Sangeeth"
    },
    {
        "Question_title":"Caching of models",
        "Question_created_time":"2023-06-22T03:07:56",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/EzEzY74Z5eg",
        "Question_comment_count":0,
        "Question_view_count":15,
        "Question_body":"Hello,\n\nI am a beginner in using mlflow. I would like to utilize mlflow for my ML application. Currently i am facing an issue related to model loading. Model is getting loaded with each api call, so the total execution time is higher.\u00a0\n\n\nI need to keep loaded model in a cache, and reuse it from cache\u00a0 for next api call. Does mlflow provides any mechanism for model caching and locking?\n\n\nYour prompt response will be highly appreciated.\n\n\nThanks,\nAnjaly"
    },
    {
        "Question_title":"Multiuser environment and Slurm",
        "Question_created_time":"2018-10-10T08:18:23",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/33RwUm-BPh0",
        "Question_comment_count":3,
        "Question_view_count":428,
        "Question_body":"Hi,\u00a0\n\n\nI have two questions about mlflow.\u00a0\n\n\nIs it possible to use mlflow for multiuser environment ? How they can access gui running their own experiments ?\u00a0\nIs there a way to integrate slurm job manager in mlflow ?\u00a0\n\n\nPlease let me know. Thank you."
    },
    {
        "Question_title":"mlflow.pyfunc.log_model doesn't work correctly when artifact storage is HDFS and artifact size is size higher than 2gb",
        "Question_created_time":"2021-01-26T15:42:27",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/xKI3gYkayYU",
        "Question_comment_count":2,
        "Question_view_count":173,
        "Question_body":"Hello MLflow team\n\n\nThere is an issue on pyarrow side which leads to the following misbehaving of MLflow when artifacts are kept on HDFS:\n\n\n1. When a size of an artifact is less than 6144mb, then\u00a0mlflow.pyfunc.log_model uploads corrupted artifact to HDFS with size not greater than 2gb.\n\n2. When a size of an artifact is higher or equals to 6144mb, then there will be an exception.\n\n\nStacktrace:\n\"\"\"\nsite-packages\/mlflow\/store\/artifact\/hdfs_artifact_repo.py in log_artifacts(self, local_dir, artifact_path)\n\u00a0 \u00a0 \u00a066\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0destination = posixpath.join(hdfs_subdir_path, each_file)\n\u00a0 \u00a0 \u00a067\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0with hdfs.open(destination, 'wb') as output_stream:\n---> 68\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0output_stream.write(open(source, \"rb\").read())\n\u00a0 \u00a0 \u00a069\u00a0\n\u00a0 \u00a0 \u00a070\u00a0 \u00a0 \u00a0def list_artifacts(self, path=None):\n\n\nsite-packages\/pyarrow\/io.pxi in pyarrow.lib.NativeFile.write()\nsite-packages\/pyarrow\/error.pxi in pyarrow.lib.check_status()\n\n\nOSError: HDFS Write failed, errno: 22 (Invalid argument)\n\"\"\"\n\n\n\nPython script to reproduce the issue just on pyarrow lib:\n\"\"\"\n\nimport os\nimport pyarrow as pa\n\nos.environ[\"JAVA_HOME\"]=\"<java_home>\"\nos.environ['ARROW_LIBHDFS_DIR'] = \"<path>\/libhdfs.so\"\nconnected = pa.hdfs.connect(host=\"<host>\",port=8020)\ndestination = \"hdfs:\/\/<host>:8020\/user\/tmp\/6144m.txt\"\nsource = \"\/tmp\/6144m.txt\"\nwith connected.open(destination, \"wb\") as output_stream:\n\u00a0 \u00a0 output_stream.write(open(source, \"rb\").read())\nconnected.close()\n\n\"\"\"\n\n\n\nThe issue was reported to pyarrow team and the answer is:\n\"\"\"\nIt appears that writes over 2GB are implemented incorrectly.\nhttps:\/\/github.com\/apache\/arrow\/blob\/master\/cpp\/src\/arrow\/io\/hdfs.cc#L277\n\nthe tSize type in libhdfs is an int32_t. So that static cast is truncating data\nhttps:\/\/issues.apache.org\/jira\/browse\/ARROW-11391\n\nI would recommend breaking the work into smaller pieces as a workaround\n\n\"\"\"\n\n\nCheers,\nSergey"
    },
    {
        "Question_title":"How to backup all MLFlow Tracking and Model Registry data from a Databricks Workspace",
        "Question_created_time":"2021-01-19T16:13:29",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/Kttrnxcw3C4",
        "Question_comment_count":1,
        "Question_view_count":752,
        "Question_body":"Dear all,\n\n\nI have a few questions, so please bear with me.\n\n\n\nThe MLFlow documentation does not provide any information regarding backups, except here. If I managed my own tracking server, I could make a backup, but how to I achieve this within Databricks?\n\n\npprint([dict(e)[\"artifact_location\"] for e in MlflowClient().list_experiments()])\n\n\nshows that the artifact locations are in dbfs:\/databricks\/mlflow-tracking\/, but these are accessible only with the client ( https:\/\/docs.microsoft.com\/de-de\/azure\/databricks\/security\/access-control\/workspace-acl#mlflow-artifact-permissions ) I had thought about a blunt rsync copy all artifacts, but these would probably be problematic for the model lineage stored in the Registry.\n\n\n\nI was hoping to get an idea of the tracking server inside a Databricks Notebook, with the env variable MLFLOW_TRACKING_URI, but its value is only:\n\nMLFLOW_TRACKING_URI=databricks\n\n3. In short, if I would delete a Databricks Workspace and wanted to have the full Tracking and Model Registry in a new one, how would I go about it?\n\n\nThank you for any help!\n\n\n-Alec"
    },
    {
        "Question_title":"Organizations using MLflow - Emerton Data",
        "Question_created_time":"2020-06-27T15:30:17",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/9WHVX1YBK_A",
        "Question_comment_count":1,
        "Question_view_count":31,
        "Question_body":"Hi !\n\n\nAt Emerton Data, we are big fans of MLflow and are using it in our project to industrialize AI models and data projects.\n\n\nHappy to be one of the mlflow supporter and would be glad to appear on your website as an organization using MLFlow.\u00a0\n\n\nCheers,\n\n\n\nYannick LEO\nDirector Data Science\n\n16 avenue Hoche\u00a0\u00a0\n75008 Paris\u00a0\nM + 33 6 38 21 33 99\nT + 33 1 53 75 38 75\nyanni...@emerton-data.com\u00a0|\u00a0http:\/\/www.emerton-data.com"
    },
    {
        "Question_title":"MLFlow Usage and Contribution",
        "Question_created_time":"2021-12-01T07:30:26",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/B2ndpXthx10",
        "Question_comment_count":0,
        "Question_view_count":36,
        "Question_body":"Hi all,\n\n\nGiniMachine is using MLFlow as the key MLOps tool. We are also looking for ways to contribute to your product growth.\n\n\nPlease let me know how to place our logo on your homepage.\u00a0\n\n\nI'll attach the hi-resolution logo to\u00a0this email.\n\n\nThank you,\n\n\n\nMark Rudak \n\nmark....@ginimachine.com\n\nSenior Machine Learning Engineer\n\nWebsite:\u00a0ginimachine.com"
    },
    {
        "Question_title":"Setting up development environment for MLflow on Mac (Apple M1).",
        "Question_created_time":"2023-03-27T09:49:37",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/Z2tLHB-fA1o",
        "Question_comment_count":0,
        "Question_view_count":18,
        "Question_body":"Hi everyone,\n\nI am trying to set up a development environment for MLflow on my Mac (Apple M1).\nFrom the\u00a0contribution page, the\u00a0dev-env-setup\u00a0script for automatic python environment setup does not support M1.\nI tried to set it up manually using Conda, but it's not working as expected.\nFor example, the installation of TensorFlow on M1 with Conda is via tensorflow-macos. The installation seems to be incompatible with the mlflow dev setup because almost all of the \u201ctesting\u201d with TensorFlow failed.\nHas anyone successfully set up mlflow on M1 for development and testing?"
    },
    {
        "Question_title":"MLflow Roadmap is now available. Community contributions requested!",
        "Question_created_time":"2021-09-24T19:11:15",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/tkxgj4Np95M",
        "Question_comment_count":0,
        "Question_view_count":33,
        "Question_body":"We are excited to announce that the latest MLflow Roadmap has been published and is available at https:\/\/github.com\/mlflow\/mlflow\/milestone\/3. The roadmap includes a variety of new features and bug fixes across many components of the platform.\n\n\n\n\nWe are looking for help from the community to implement many of these features and bug fixes, which are annotated with the help wanted label. If you are interested in contributing to the implementation of one or more of these roadmap items, please leave a comment on the corresponding GitHub issue and tag the MLflow maintainer listed at the top of the issue description.\n\n\nFinally, you can learn more about contributing to MLflow by checking out the contribution guide."
    },
    {
        "Question_title":"mlflow on CDSW",
        "Question_created_time":"2019-03-17T10:02:47",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/CYyStbjSTts",
        "Question_comment_count":1,
        "Question_view_count":13,
        "Question_body":"Hi there!\n\n\nI had been able to integrate mlflow into my model on local and track the metrics.\n\n\nHowever, now am carrying out a task to integrate mlflow into Cloudera workbench. Facing either SSL or https connection issues when trying to trigger the tracking URI.\nDo you please have any documentation on working with mlflow on CDSW? Any suggestions are\u00a0welcome.\n\n\nThanks!\nBest,\nAsis"
    },
    {
        "Question_title":"HOW LOG IN PRODUCTION?",
        "Question_created_time":"2021-09-24T16:10:34",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/xvXSBl-2V6c",
        "Question_comment_count":0,
        "Question_view_count":17,
        "Question_body":"Hey everyone!\n\n\nI'l planning put MLFlow server into production and I'm worried about logging.\nIs there an way about how to tail logs? Is there something such a verbose mode ?\nAs far as I could see on documentation there is no way to set this thing."
    },
    {
        "Question_title":"mlflow run with databrics clustor-spec.json JSON decoder error",
        "Question_created_time":"2019-10-01T01:45:42",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/FTfASi7qMX8",
        "Question_comment_count":0,
        "Question_view_count":4,
        "Question_body":"I am running the tutorial https:\/\/docs.databricks.com\/applications\/mlflow\/projects.html but running into error of json decoder. My clustor-spec.json file is also attached\n\n\n\n(new-env) root@babarali-HP-ProBook-440-G1:\/home\/babarali\/Desktop\/Mlflow\/mlflow# mlflow run examples\/sklearn_elasticnet_wine -b databricks -c cluster-spec.json --experiment-id 485933203863959 -P alpha=0.5\nTraceback (most recent call last):\n\u00a0 File \"\/home\/babarali\/Desktop\/Mlflow\/new-env\/bin\/mlflow\", line 10, in <module>\n\u00a0\u00a0\u00a0 sys.exit(cli())\n\u00a0 File \"\/home\/babarali\/Desktop\/Mlflow\/new-env\/lib\/python3.6\/site-packages\/click\/core.py\", line 764, in __call__\n\u00a0\u00a0\u00a0 return self.main(*args, **kwargs)\n\u00a0 File \"\/home\/babarali\/Desktop\/Mlflow\/new-env\/lib\/python3.6\/site-packages\/click\/core.py\", line 717, in main\n\u00a0\u00a0\u00a0 rv = self.invoke(ctx)\n\u00a0 File \"\/home\/babarali\/Desktop\/Mlflow\/new-env\/lib\/python3.6\/site-packages\/click\/core.py\", line 1137, in invoke\n\u00a0\u00a0\u00a0 return _process_result(sub_ctx.command.invoke(sub_ctx))\n\u00a0 File \"\/home\/babarali\/Desktop\/Mlflow\/new-env\/lib\/python3.6\/site-packages\/click\/core.py\", line 956, in invoke\n\u00a0\u00a0\u00a0 return ctx.invoke(self.callback, **ctx.params)\n\u00a0 File \"\/home\/babarali\/Desktop\/Mlflow\/new-env\/lib\/python3.6\/site-packages\/click\/core.py\", line 555, in invoke\n\u00a0\u00a0\u00a0 return callback(*args, **kwargs)\n\u00a0 File \"\/home\/babarali\/Desktop\/Mlflow\/new-env\/lib\/python3.6\/site-packages\/mlflow\/cli.py\", line 137, in run\n\u00a0\u00a0\u00a0 run_id=run_id\n\u00a0 File \"\/home\/babarali\/Desktop\/Mlflow\/new-env\/lib\/python3.6\/site-packages\/mlflow\/projects\/__init__.py\", line 266, in run\n\u00a0\u00a0\u00a0 use_conda=use_conda, storage_dir=storage_dir, synchronous=synchronous, run_id=run_id)\n\u00a0 File \"\/home\/babarali\/Desktop\/Mlflow\/new-env\/lib\/python3.6\/site-packages\/mlflow\/projects\/__init__.py\", line 94, in _run\n\u00a0\u00a0\u00a0 active_run = _create_run(uri, experiment_id, work_dir, entry_point)\n\u00a0 File \"\/home\/babarali\/Desktop\/Mlflow\/new-env\/lib\/python3.6\/site-packages\/mlflow\/projects\/__init__.py\", line 622, in _create_run\n\u00a0\u00a0\u00a0 active_run = tracking.MlflowClient().create_run(experiment_id=experiment_id, tags=tags)\n\u00a0 File \"\/home\/babarali\/Desktop\/Mlflow\/new-env\/lib\/python3.6\/site-packages\/mlflow\/tracking\/client.py\", line 88, in create_run\n\u00a0\u00a0\u00a0 tags=[RunTag(key, value) for (key, value) in iteritems(tags)]\n\u00a0 File \"\/home\/babarali\/Desktop\/Mlflow\/new-env\/lib\/python3.6\/site-packages\/mlflow\/store\/rest_store.py\", line 153, in create_run\n\u00a0\u00a0\u00a0 response_proto = self._call_endpoint(CreateRun, req_body)\n\u00a0 File \"\/home\/babarali\/Desktop\/Mlflow\/new-env\/lib\/python3.6\/site-packages\/mlflow\/store\/rest_store.py\", line 66, in _call_endpoint\n\u00a0\u00a0\u00a0 js_dict = json.loads(response.text)\n\u00a0 File \"\/usr\/lib\/python3.6\/json\/__init__.py\", line 354, in loads\n\u00a0\u00a0\u00a0 return _default_decoder.decode(s)\n\u00a0 File \"\/usr\/lib\/python3.6\/json\/decoder.py\", line 339, in decode\n\u00a0\u00a0\u00a0 obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n\u00a0 File \"\/usr\/lib\/python3.6\/json\/decoder.py\", line 357, in raw_decode\n\u00a0\u00a0\u00a0 raise JSONDecodeError(\"Expecting value\", s, err.value) from None\n(new-env) root@babarali-HP-ProBook-440-G1:\/home\/babarali\/Desktop\/Mlflow\/mlflow#"
    },
    {
        "Question_title":"Dagster integration",
        "Question_created_time":"2019-12-10T07:56:22",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/t0evBl17ZvE",
        "Question_comment_count":0,
        "Question_view_count":8,
        "Question_body":"Just a thought --\u00a0\n\n\nI like ML Flow, but the Projects aspects of it seem a bit weak & cumbersome (no clear docs for sophisticated pipelines, such as DAGs, etc.)\n\n\nCould it be possible to integrate with\u00a0Dagster? This way we can enjoy the best of both worlds..."
    },
    {
        "Question_title":"Syncing between remote and local tracking servers",
        "Question_created_time":"2020-02-19T02:51:04",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/LBRtfMy0WAc",
        "Question_comment_count":2,
        "Question_view_count":20,
        "Question_body":"Hello,\n\n\nwe are considering to use mlflow for our next project. Most of our experiments will run inside AWS so we plan to setup a tracking server there, however it is still possible that some researchers would like to run some experiments locally on their machines. The problem is that due to security policies we can't expose the tracking server outside of our AWS environment.\n\n\nMy idea is that they would use local mlflow server and then use a script that would copy the state to S3 where we would somehow sync the runs to the tracking server in AWS.\n\n\nIs there a convenient way how to achieve that? Have you seen this use case before or do we approach the problem from a wrong perspective?\n\n\nThanks,\nJan"
    },
    {
        "Question_title":"MLflow 2.4.2 released!",
        "Question_created_time":"2023-07-10T04:14:33",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/Ys3ORsSVL4s",
        "Question_comment_count":0,
        "Question_view_count":5,
        "Question_body":"We are happy to announce the availability of MLflow 2.4.2!\n\n\nMLflow 2.4.2 is a patch release containing the following bug fixes and changes:\n\n\nBug fixes:\n\n[Models] Add compatibility for legacy transformers serialization (#8964, @BenWilson2)\n[Models] Fix downloading MLmodel files from alias-based models:\/ URIs (#8764, @smurching)\n[Models] Fix reading model flavor config from URI for models in UC (#8728, @smurching)\n[Models] Support feature_deps in ModelVersion creation for UC (#8867, #8815, @AveshCSingh)\n[Models] Add support for listing artifacts in UC model registry artifact repo (#8803, @smurching)\n[Core] Include resources for recipes in mlflow-skinny (#8895, @harupy)\n[UI] Enable datasets tracking UI (#8886, @harupy)\n[Artifacts] Use MLFLOW_ENABLE_MULTIPART_DOWNLOAD in DatabricksArtifactRepository (#8884, @harupy)\nDocumentation updates:\n\n[Examples \/ Docs] Add question-answering and summarization examples and docs with LLMs (#8695, @dbczumar)\n[Examples \/ Docs] Add johnsnowlabs flavor example and doc (#8689, @C-K-Loan)\n\u00a0For a comprehensive list of changes, see the release change log, and check out the latest documentation on mlflow.org."
    },
    {
        "Question_title":"mlflow ui throws exception when using sqlite as backend_store_uri",
        "Question_created_time":"2020-01-26T11:33:36",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/qeRbVnClqSI",
        "Question_comment_count":1,
        "Question_view_count":20,
        "Question_body":"I try to start the mlflow ui service using SQLite as a backend store and cannot get rid of this exception:\n\n\nTypeError: Invalid argument(s) 'pool_pre_ping' sent to create_engine(), using configuration SQLiteDialect_pysqlite\/NullPool\/Engine.\u00a0 Please check that the keyword arguments are appropriate for this combination of components.\n\n\n\ncommand:\n(mlflow_demo) netanel@netpy:~\/git\/mlflow\/backend_store$ mlflow ui --backend-store-uri 'sqlite:\/\/\/home\/netanel\/git\/mlflow\/backend_store\/mlflow_tracker.db'\n\n\n\nI created the SQLite DB using the sqlite3 command line and initialize the schema using the latest_schema.sql script.\n\n\npython version:\u00a0Python 3.6.0 :: Anaconda 4.3.1 (64-bit)\nmlflow version: 1.5.0\n\n\nThanks."
    },
    {
        "Question_title":"MLflow server UI did not display correct model path",
        "Question_created_time":"2019-08-16T06:07:39",
        "Question_link":"https:\/\/groups.google.com\/g\/mlflow-users\/c\/7xL1PRQ1oFc",
        "Question_comment_count":0,
        "Question_view_count":16,
        "Question_body":"I run a mlflow server with the following command\n\n\nmlflow server --host myhost -p myport --backend-store-uri mysql:\/\/user@localhost\/mlflow --default-artifact-root hdfs:\/\/myhost\/user\/chenks1124\/mlflow_test\n\n\n\nI run the experiment from MLflow tutorial quickstart\u00a0https:\/\/www.mlflow.org\/docs\/latest\/quickstart.html\nthe command:\nmlflow run sklearn_elasticnet_wine -P alpha=0.5\u00a0--no-conda\n\n\n\nI visit the server by webbrowser myhost: myport and check the run I ran.\n\n\nI successfully get the ran info by myhost: myport\/#\/experiments\/0\/runs\/run_id\n\n\nin this page, i found that the first layer (model directory) path is correct. that is, run_id\/artifacts\/model\n\n\n\n\n\n\n\n\nbut once I click the MLmodel file under model folder, the path get wrong:\nI expect to see\u00a0 run_id\/artifacts\/model\/MLmodel\nbut actually is\u00a0 \u00a0 run_id\/artifacts\/MLmodel\n\n\nand causing server internal error\n\n\nthe server error log is\u00a0\n\n\n\u00a0File \"pyarrow\/error.pxi\", line 87, in pyarrow.lib.check_status\npyarrow.lib.ArrowIOError: HDFS file does not exist: \/user\/chenks1124\/mlflow_test\/0\/b7f1a8d95a6d484f87a2087d1342a4d3\/artifacts\/MLmodel"
    }
]